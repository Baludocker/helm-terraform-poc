apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.3-gke.1
    creationTimestamp: "2025-07-07T04:30:04Z"
    generateName: collector-
    labels:
      app: managed-prometheus-collector
      app.kubernetes.io/name: collector
      app.kubernetes.io/version: 0.15.3
      controller-revision-hash: 6f94f4b5d8
      pod-template-generation: "1"
    name: collector-g8xj2
    namespace: gke-gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: collector
      uid: 7f497a65-0287-4273-92d4-08758b583c74
    resourceVersion: "1751862781520751016"
    uid: 002d4e64-c3b2-4882-97a3-5af0c3846657
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    automountServiceAccountToken: true
    containers:
    - args:
      - --config.file=/prometheus/config_out/config.yaml
      - --enable-feature=exemplar-storage
      - --enable-feature=google-kubernetes-secret-provider
      - --storage.tsdb.path=/prometheus/data
      - --storage.tsdb.no-lockfile
      - --gmp.storage.delete-data-on-start
      - --storage.tsdb.retention.time=30m
      - --storage.tsdb.wal-compression
      - --storage.tsdb.min-block-duration=10m
      - --storage.tsdb.max-block-duration=10m
      - --web.listen-address=:19090
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --export.user-agent-mode=gke
      - --log.format=json
      env:
      - name: GOGC
        value: "25"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus:v2.45.3-gmp.11-gke.0@sha256:3ba777873a3267c008049297c4e2292a27e7dbeebdae292f99b7af261175c54f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/healthy
          port: 19090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: prometheus
      ports:
      - containerPort: 19090
        name: prom-metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/ready
          port: 19090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 1G
        requests:
          cpu: 4m
          memory: 32M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/data
        name: storage
      - mountPath: /prometheus/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/secrets
        name: collection-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zzmhr
        readOnly: true
    - args:
      - --config-file=/prometheus/config/config.yaml
      - --config-file-output=/prometheus/config_out/config.yaml
      - --reload-url=http://127.0.0.1:19090/-/reload
      - --ready-url=http://127.0.0.1:19090/-/ready
      - --listen-address=:19091
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.3-gke.0@sha256:084a78cf04fc50523ba37639d3cac8d33a6a07de5cf641c85b9c9ef71f653d51
      imagePullPolicy: IfNotPresent
      name: config-reloader
      ports:
      - containerPort: 19091
        name: cfg-rel-metrics
        protocol: TCP
      resources:
        limits:
          memory: 32M
        requests:
          cpu: 1m
          memory: 4M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/config
        name: config
        readOnly: true
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zzmhr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - touch /prometheus/config_out/config.yaml
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250407.00_p0@sha256:b903ad51976ccd68a817f445c5b6df8bf3655bfd1b30ca989472f7a99f930fc5
      imagePullPolicy: IfNotPresent
      name: config-init
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zzmhr
        readOnly: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: gmp-critical
    restartPolicy: Always
    schedulerName: gke.io/optimize-utilization-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: collector
    serviceAccountName: collector
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: storage
    - configMap:
        defaultMode: 420
        name: collector
      name: config
    - emptyDir: {}
      name: config-out
    - name: collection-secret
      secret:
        defaultMode: 420
        secretName: collection
    - name: kube-api-access-zzmhr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:32:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:32:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:33:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:33:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://62f2d8c5a1504c85a786927242e521ca74ad28eab773a97e7a3e4436fb044cbb
      image: sha256:3607cdb2677bbbc2bcd0148a072aaa5be8765d47eb4cbdefd13c84facc63835f
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader@sha256:084a78cf04fc50523ba37639d3cac8d33a6a07de5cf641c85b9c9ef71f653d51
      lastState: {}
      name: config-reloader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:32:49Z"
      volumeMounts:
      - mountPath: /prometheus/config
        name: config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zzmhr
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://d6008bde80a53df2a2e95059a4b858921d6ba6876518236184f61084b55ee82a
      image: sha256:fa6f21fd39ce7d2b07a0c2bb5367806c7dc4e8580b9b3bb57ebab3ebd53a9a3d
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus@sha256:3ba777873a3267c008049297c4e2292a27e7dbeebdae292f99b7af261175c54f
      lastState: {}
      name: prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:32:47Z"
      volumeMounts:
      - mountPath: /prometheus/data
        name: storage
      - mountPath: /prometheus/config_out
        name: config-out
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/secrets
        name: collection-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zzmhr
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    initContainerStatuses:
    - containerID: containerd://df6ab9f6c5935493ebf3a32848266de34ff112f04f834b909b03da2ed91c2456
      image: sha256:75f37bf83140b593bab3f4f6aa67cdb23c49337f5592b205ad4de02452dc5b10
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash@sha256:b903ad51976ccd68a817f445c5b6df8bf3655bfd1b30ca989472f7a99f930fc5
      lastState: {}
      name: config-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://df6ab9f6c5935493ebf3a32848266de34ff112f04f834b909b03da2ed91c2456
          exitCode: 0
          finishedAt: "2025-07-07T04:32:23Z"
          reason: Completed
          startedAt: "2025-07-07T04:32:20Z"
      volumeMounts:
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zzmhr
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.190.128.83
    podIPs:
    - ip: 10.190.128.83
    qosClass: Burstable
    startTime: "2025-07-07T04:30:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.3-gke.1
    creationTimestamp: "2025-07-07T04:27:41Z"
    generateName: collector-
    labels:
      app: managed-prometheus-collector
      app.kubernetes.io/name: collector
      app.kubernetes.io/version: 0.15.3
      controller-revision-hash: 6f94f4b5d8
      pod-template-generation: "1"
    name: collector-gtgdz
    namespace: gke-gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: collector
      uid: 7f497a65-0287-4273-92d4-08758b583c74
    resourceVersion: "1751863030661343011"
    uid: ad6a0968-3304-4d4d-ac45-4dd1b8d9755c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    automountServiceAccountToken: true
    containers:
    - args:
      - --config.file=/prometheus/config_out/config.yaml
      - --enable-feature=exemplar-storage
      - --enable-feature=google-kubernetes-secret-provider
      - --storage.tsdb.path=/prometheus/data
      - --storage.tsdb.no-lockfile
      - --gmp.storage.delete-data-on-start
      - --storage.tsdb.retention.time=30m
      - --storage.tsdb.wal-compression
      - --storage.tsdb.min-block-duration=10m
      - --storage.tsdb.max-block-duration=10m
      - --web.listen-address=:19090
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --export.user-agent-mode=gke
      - --log.format=json
      env:
      - name: GOGC
        value: "25"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus:v2.45.3-gmp.11-gke.0@sha256:3ba777873a3267c008049297c4e2292a27e7dbeebdae292f99b7af261175c54f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/healthy
          port: 19090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: prometheus
      ports:
      - containerPort: 19090
        name: prom-metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/ready
          port: 19090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 1G
        requests:
          cpu: 4m
          memory: 32M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/data
        name: storage
      - mountPath: /prometheus/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/secrets
        name: collection-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2hzz9
        readOnly: true
    - args:
      - --config-file=/prometheus/config/config.yaml
      - --config-file-output=/prometheus/config_out/config.yaml
      - --reload-url=http://127.0.0.1:19090/-/reload
      - --ready-url=http://127.0.0.1:19090/-/ready
      - --listen-address=:19091
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.3-gke.0@sha256:084a78cf04fc50523ba37639d3cac8d33a6a07de5cf641c85b9c9ef71f653d51
      imagePullPolicy: IfNotPresent
      name: config-reloader
      ports:
      - containerPort: 19091
        name: cfg-rel-metrics
        protocol: TCP
      resources:
        limits:
          memory: 32M
        requests:
          cpu: 1m
          memory: 4M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/config
        name: config
        readOnly: true
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2hzz9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - touch /prometheus/config_out/config.yaml
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250407.00_p0@sha256:b903ad51976ccd68a817f445c5b6df8bf3655bfd1b30ca989472f7a99f930fc5
      imagePullPolicy: IfNotPresent
      name: config-init
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2hzz9
        readOnly: true
    nodeName: gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: gmp-critical
    restartPolicy: Always
    schedulerName: gke.io/optimize-utilization-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: collector
    serviceAccountName: collector
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: storage
    - configMap:
        defaultMode: 420
        name: collector
      name: config
    - emptyDir: {}
      name: config-out
    - name: collection-secret
      secret:
        defaultMode: 420
        secretName: collection
    - name: kube-api-access-2hzz9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:34:26Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:34:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:37:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:37:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9cded259aaaa141e7a156e3fb15650df920974e3d5827fd8cdb22ab344c6a6c2
      image: sha256:3607cdb2677bbbc2bcd0148a072aaa5be8765d47eb4cbdefd13c84facc63835f
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader@sha256:084a78cf04fc50523ba37639d3cac8d33a6a07de5cf641c85b9c9ef71f653d51
      lastState:
        terminated:
          containerID: containerd://872ecb60ecd017d36c84e65700d7af9f06024cd521df27ad6b3ab6cd94bd0130
          exitCode: 1
          finishedAt: "2025-07-07T04:36:58Z"
          reason: Error
          startedAt: "2025-07-07T04:36:49Z"
      name: config-reloader
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:37:09Z"
      volumeMounts:
      - mountPath: /prometheus/config
        name: config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2hzz9
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://d91ccd6dc62ebef3ac8ccc2d36d3b742bcd324b45ef0050c2e8dc733945a3497
      image: sha256:fa6f21fd39ce7d2b07a0c2bb5367806c7dc4e8580b9b3bb57ebab3ebd53a9a3d
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus@sha256:3ba777873a3267c008049297c4e2292a27e7dbeebdae292f99b7af261175c54f
      lastState:
        terminated:
          containerID: containerd://3cbd70499db791097d7063e07eb8402a4b684cda52cce497c345e9a7deb74d6c
          exitCode: 2
          finishedAt: "2025-07-07T04:36:52Z"
          reason: Error
          startedAt: "2025-07-07T04:35:50Z"
      name: prometheus
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:36:56Z"
      volumeMounts:
      - mountPath: /prometheus/data
        name: storage
      - mountPath: /prometheus/config_out
        name: config-out
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/secrets
        name: collection-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2hzz9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.14
    hostIPs:
    - ip: 192.168.17.14
    initContainerStatuses:
    - containerID: containerd://5034b5196ceb916b678468ae9e7bb509cc3d3f4506bfa08192b1af61a324bd89
      image: sha256:75f37bf83140b593bab3f4f6aa67cdb23c49337f5592b205ad4de02452dc5b10
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash@sha256:b903ad51976ccd68a817f445c5b6df8bf3655bfd1b30ca989472f7a99f930fc5
      lastState: {}
      name: config-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5034b5196ceb916b678468ae9e7bb509cc3d3f4506bfa08192b1af61a324bd89
          exitCode: 0
          finishedAt: "2025-07-07T04:34:30Z"
          reason: Completed
          startedAt: "2025-07-07T04:34:25Z"
      volumeMounts:
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2hzz9
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.190.128.10
    podIPs:
    - ip: 10.190.128.10
    qosClass: Burstable
    startTime: "2025-07-07T04:27:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.3-gke.1
    creationTimestamp: "2025-07-07T04:27:41Z"
    generateName: gmp-operator-58b5c7f5bb-
    labels:
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
      app.kubernetes.io/version: 0.15.3
      pod-template-hash: 58b5c7f5bb
    name: gmp-operator-58b5c7f5bb-cf6ss
    namespace: gke-gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: gmp-operator-58b5c7f5bb
      uid: 40344c52-6489-41e9-bc25-9848ee9e754f
    resourceVersion: "1751862686513631012"
    uid: 0c0bab38-ee5d-4b32-807a-eb6fca5cb6be
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - arm64
              - amd64
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    automountServiceAccountToken: true
    containers:
    - args:
      - --operator-namespace=gke-gmp-system
      - --public-namespace=gmp-public
      - --webhook-addr=:10250
      - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVLekNDQXBPZ0F3SUJBZ0lSQUtabDhwWWgwYlVFTkRFdjBOTTF4VWd3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa05UYzRaR0k0T0dZdE9XSTRaUzAwTVdReUxXRmhaV1l0TlRSaE9XUTBabVk0WlRaaApNQjRYRFRJMU1EY3dOekEwTVRrMU0xb1hEVE13TURjd05qQTBNakUxTTFvd09ERTJNRFFHQTFVRUF4TXRaMjF3CkxXOXdaWEpoZEc5eUxtZHJaUzFuYlhBdGMzbHpkR1Z0TG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzTUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBaUdkeGMxU2kxWkZoR0w5Z2I2ZmpSQlczTHVRWQovamRzTUJySExGdWJRMWxTejdhbktzVzRxWitHcUpEVEw4UTUxT0tGcHNJTEpZMzhEMEk4eFVqVjdVTnY0UmU5CkNjUlFUa0trUkRJbXh1MUowUGpKVGxGaitoek1laGxDSWppS1dwNUpzMVEwQ3NaODF5SkdhQ2lnTFhkYnRENWgKVW5GY2NkZFZrVnhNTzRoUHhqcGNlckJLY1hDWGQ2aUVnbXNyWFNmNGFpMHJuMW02U1JwK1hwNkoxS0NvSFp5NgoyREtRZEd0dHZxSVRya0FhaDRCellZcjJWN0RxVnZrdEdqWEpNMUx0Skg5NjhycTJYMDJRQUZCTlNOQm41US9kCjYzeGhLYWp5dFZnVXZpc1p4WWpubEh4dGNKdEZKMUR1ZDVMRG5XNElPS1RROEZUbnBuRE92ZEdtT1FJREFRQUIKbzRHNE1JRzFNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQgpCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTUE9SWGlNZkJnVVlOUnBERG1rdWx0CjNCK1VDREJWQmdOVkhSRUVUakJNZ2d4bmJYQXRiM0JsY21GMGIzS0NHMmR0Y0MxdmNHVnlZWFJ2Y2k1bmEyVXQKWjIxd0xYTjVjM1JsYllJZloyMXdMVzl3WlhKaGRHOXlMbWRyWlMxbmJYQXRjM2x6ZEdWdExuTjJZekFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVlFQVJKbURMYUhzNGxobGVsekNrQ1EzaytwWUZmTGM3TXh2eVpMb1Evbm1zSVNqCkI4SWh4b08yWlRyWjhOYkJEbkErMmlmNjBXS1Y0YmJzQklFV0FpMVRZWkh6VFpXRnkyeHJ1NGlmWXc4OFRvTXoKNDFMZ1ZCMVYxZ2lWRnhNUHBoQ2E5TWc4LzZLZHNJSldWREV6WU5CdHVWWjlDRGM1c25manViSzloa2pwYkxIWQpjYlYvVnJqVkMyMTBpZkRTWTF0cm10U0M4aXNrOTE4RUpOWklDQjNyVVlBMzhkQ3FmaTZId1g0QlhmY010VlVVCjFqTnNyaXJERHdTUU41dVVvdGxhZEM1WmtabC8wZ1hrMFhoWE5VblRhNlNRY3hNQU45Q0FFTFg4VXZqMGpUU0kKTmJ5amIya0VzazNtV21zZkRVbGhuaHFnbXRsb0N4eGg1UjEzRExMMG1zbmRLcTBkaThCREU1aHNEUENNU1ZjNwp4UkNsVnIwZDY5dlJZaWdtM20yaW1neUJidzdNWDU2cjN4eTVzV1pzR2RIMTdlZGJoL1RpYlN6YXRVbUJ5V3MrCmxLYVdqRzdQdklLZlNSMjBoR0hLN0FaK1ZCWnNBakwxVGtXOE1MSXdnaE13bUZRMldLOVFkY1pFQTdEclRqQUgKNk5mV1VOM2t6THR2bW9hU3ZLQW0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBaUdkeGMxU2kxWkZoR0w5Z2I2ZmpSQlczTHVRWS9qZHNNQnJITEZ1YlExbFN6N2FuCktzVzRxWitHcUpEVEw4UTUxT0tGcHNJTEpZMzhEMEk4eFVqVjdVTnY0UmU5Q2NSUVRrS2tSRElteHUxSjBQakoKVGxGaitoek1laGxDSWppS1dwNUpzMVEwQ3NaODF5SkdhQ2lnTFhkYnRENWhVbkZjY2RkVmtWeE1PNGhQeGpwYwplckJLY1hDWGQ2aUVnbXNyWFNmNGFpMHJuMW02U1JwK1hwNkoxS0NvSFp5NjJES1FkR3R0dnFJVHJrQWFoNEJ6CllZcjJWN0RxVnZrdEdqWEpNMUx0Skg5NjhycTJYMDJRQUZCTlNOQm41US9kNjN4aEthanl0VmdVdmlzWnhZam4KbEh4dGNKdEZKMUR1ZDVMRG5XNElPS1RROEZUbnBuRE92ZEdtT1FJREFRQUJBb0lCQUFJazN4cUZHbXloTlAyZwp0M1UxMWp1S0hGZWhOL2ZaK3VvOEo0U04yWkJLMFlPSWoxTGJxZ0lIaXdRd0I1UEZBYlEwRGMzLzE1RkM3TEw0Ck0zQ1Y2eC9vT3hSV2pVNy9uaFFHMWVKcEIrVkJVbE5WcjhOYWdlZnE1emRsbVgya2RoOUR4T3lMenFnYk05ZmwKVnVZNCtrQ1FzMWt2VUZRTmlscVRQQW4xZ1pDL2QwSkpQdUxwSkkxVmhySzhtcFZ2bWx5R3VlVmgwdlRNU3F6VgpBS3NtRU15NVVwZTF6cGI5M1A3OWtpdlY0MUp5OUsvNnF5b0EzUUtjVjcyeHFZMGVsMHo1Z0wyRk8xcGVPb0hkCnBIRncrL0h4TkJLUnF2S0hwbkc5WTBxdmJlYXRRRW9iRk03dzE2bkdmUm1SRmdsTkhJUVpPMnFNZ1d3TWduODQKdnp6R0QyRUNnWUVBdnhMQkU1bDZNSWlobGF3OEQ2b1RucDhqaTR1cmxRQk1tYnBPVmg0M0d1WU1sTUNGdVJMWApnbTR0Q2t6RW5HZXBxbmZlM0VMR1BpSzF5cGdEMmpHZ3lyRDRFM0lTd3h2R1BFWjUyUVR6bkh6NWZMSE43eEIyCmxpNS9YR1dOS2ZYd0I3M0FXelJZMDFIcm1BMHFBOFE3b0cxOVFzZytBY2dZQzFGejVKaDBYQmtDZ1lFQXRzRVUKS0xCKzFPdnRPWFZjNkNVOTJSRGY4YlFzVTRYN3BRd0JEelVSelZ0MWhlT2ZiYTBEVlNLMmdTcFhNc25qbVN6VwpGWklpVUFZc05oSnJ0ZTdxTVNpWTNQdmwvanpEWFVicmpyT3ZHZCtuRTRRV3grSU15ZXZUejZOVTJnc1MrWlplCmZFZGYzeTFuYTdxMUtra3dPbmJjUzlpY1B6RXpmN3Yzbk9KWTN5RUNnWUVBc3dWRVJ6UEdLeERvckE0cVc5YlMKK1F4TFJtUi9SMlIzWUpVUTdsank4azNXUGN5L3ZXNHM0dlNOV0pnaW9oUHlBRmk5UW91QnFCZm5VY0RwNHhZYQplNjRoVUQ3UjIySDdjdC9wSys4YXZHVFBjQWc3VlNDTXF4czNrdjlHcXFqVjBycnpMY0MyOUk5TmVESGxTcEFoCithWjc5UVVlSzVjcEIvbXg1dHo4TUlrQ2dZRUFwUkQ3M2t5Y0lrRCtRWm1wMHR4Z1lvRUZaTkR5QUhiUjloOUQKamJMSFk0NnFOY2FFcDVGUG8wUDVSKzB3V1dWVXQzTng0b1hkakI0bkxLZXl0ZDhYbEZNd3p0aU93ZldzRjhJSQozUm1hbkdvUUJHYVlGTzR0MHV1NG9xREo4Uzl6Y2cvSlE4Tkw2czZkelFZVXdCN2UrcytFNXRTOU82NTY3M0tkCmtndzNiVUVDZ1lCcFBxWWZJYjVMemZiYnVvUXN3bWZ3VjJFVXlWSVFNaFlneFg3T2xET2ZWQWpmbmMvcTFGTmYKVHRsL3hWTTI2Rld3eG1WMTZTWXk0d3o4STBNRENweCt4VlJmdUZvTVpZWUhBazllVnZGQ1hhYjBxQmVNTjJKaApIV3FzN1FJOTV6a08vOUh6TmRsZG9pdTJ6Y3d1cm11c3JGMHRnY0dCdC9FN2k0bnVHQ3hMVkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
      - --project-id=upheld-terminus-462616-m0
      - --location=asia-south1
      - --cluster=poc-gke-autopilot
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.3-gke.0@sha256:0e51d4ab84bac684012b2b52a2d38f3c340b4647f3879b77d70ae18ac4bb7271
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 18081
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: operator
      ports:
      - containerPort: 10250
        name: web
        protocol: TCP
      - containerPort: 18080
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 18081
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 2G
        requests:
          cpu: 1m
          memory: 16M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k7bxc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: gmp-critical
    restartPolicy: Always
    schedulerName: gke.io/optimize-utilization-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: operator
    serviceAccountName: operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: amd64
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: certs
    - name: kube-api-access-k7bxc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fd59b1e51f03c7dc25a193665cd40b54463e37dd6f8b9d6ce7a321e729b06056
      image: sha256:43d101b2120673d521ab1adce35a454084186e5e6fd9cc9fdb8e142f7f1591be
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator@sha256:0e51d4ab84bac684012b2b52a2d38f3c340b4647f3879b77d70ae18ac4bb7271
      lastState: {}
      name: operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:13Z"
      volumeMounts:
      - mountPath: /etc/tls/private
        name: certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k7bxc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.79
    podIPs:
    - ip: 10.190.128.79
    qosClass: Burstable
    startTime: "2025-07-07T04:30:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: cluster-infra-metrics
      components.gke.io/component-version: 1.32.2-gke.3
    creationTimestamp: "2025-07-07T04:26:35Z"
    generateName: kube-state-metrics-
    labels:
      app.kubernetes.io/name: gke-managed-kube-state-metrics
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: kube-state-metrics-5d945f59b
      statefulset.kubernetes.io/pod-name: kube-state-metrics-0
    name: kube-state-metrics-0
    namespace: gke-managed-cim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: kube-state-metrics
      uid: 9e2202c4-8595-492a-9881-a48b9b3715cc
    resourceVersion: "1751862695143471013"
    uid: f0c080a8-3fa8-49e9-9f3e-97ae1d6d166e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - args:
      - --pod=$(POD_NAME)
      - --pod-namespace=$(POD_NAMESPACE)
      - --port=8080
      - --telemetry-port=8081
      - --resources=pods,persistentvolumes,persistentvolumeclaims,horizontalpodautoscalers,daemonsets,deployments,statefulsets
      - --metric-allowlist=kube_deployment_spec_replicas,kube_deployment_status_replicas_available,kube_deployment_status_replicas_updated,kube_statefulset_replicas,kube_statefulset_status_replicas_ready,kube_statefulset_status_replicas_updated,kube_jobset_specified_replicas,kube_jobset_ready_replicas,kube_jobset_succeeded_replicas,kube_jobset_failed_replicas,kube_jobset_active_replicas,kube_jobset_suspended_replicas,kube_jobset_status_condition,kube_jobset_restarts,kube_persistentvolume_capacity_bytes,kube_persistentvolume_status_phase,kube_persistentvolume_claim_ref,kube_persistentvolume_info,kube_persistentvolumeclaim_info,kube_persistentvolumeclaim_resource_requests_storage_bytes,kube_persistentvolumeclaim_status_phase,kube_horizontalpodautoscaler_status_desired_replicas,kube_horizontalpodautoscaler_status_current_replicas,kube_horizontalpodautoscaler_spec_target_metric,kube_horizontalpodautoscaler_spec_min_replicas,kube_horizontalpodautoscaler_spec_max_replicas,kube_horizontalpodautoscaler_status_condition,kube_pod_status_phase,kube_pod_container_status_waiting_reason,kube_pod_container_status_ready,kube_pod_status_unschedulable,kube_daemonset_status_number_misscheduled,kube_daemonset_status_number_ready,kube_daemonset_status_desired_number_scheduled,kube_daemonset_status_updated_number_scheduled
      - --namespaces-denylist=kube-system,kube-node-lease,gmp-system,gke-gmp-system,gke-managed-system,gke-managed-cim
      - --custom-resource-state-config-file=/conf/custom-resource-state-config.yaml
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/kube-state-metrics:v2.14.0-gke.17@sha256:edd59b49e07541ea87b24a17917cd65df9eab175c1e8e851047df25752b5ff50
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        name: k8s-objects
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: kube-state-metrics-cr-metrics-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4f6m9
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: ksm-metrics-collector
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/ksm-metrics-collector-config-data.textproto
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241204_2300_RC0@sha256:2b0c03b2bb9415fe38c799f9088e0c9fa6407c06e357cf767903fd16cbfc65b9
      imagePullPolicy: IfNotPresent
      name: ksm-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 30Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: ksm-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4f6m9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: kube-state-metrics-0
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-state-metrics
    serviceAccountName: kube-state-metrics
    subdomain: kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: amd64
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: ksm-metrics-collector-config-data
          path: ksm-metrics-collector-config-data.textproto
        name: ksm-metrics-collector-config-map
      name: ksm-metrics-collector-config-map-vol
    - configMap:
        defaultMode: 420
        items:
        - key: custom-resource-state-config.yaml
          path: custom-resource-state-config.yaml
        name: kube-state-metrics-cr-metrics
      name: kube-state-metrics-cr-metrics-vol
    - name: kube-api-access-4f6m9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:34Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9d63b403152f659a6796920807623f413504998892abdb4ab5dc46bac685f9a3
      image: sha256:d120591225dee913afec368e5acdc262ef194d987a5d4171d9badaa3f1fbbe9e
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:2b0c03b2bb9415fe38c799f9088e0c9fa6407c06e357cf767903fd16cbfc65b9
      lastState: {}
      name: ksm-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:33Z"
      volumeMounts:
      - mountPath: /conf
        name: ksm-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4f6m9
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://559c2878316f2eec14a270c70e29e9856dd9b640eca4fa0fd95966ba9a05303f
      image: sha256:119eb9c091b5505086c72fa40fe6a820831bf20882b17142d7a19398dc023893
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/kube-state-metrics@sha256:edd59b49e07541ea87b24a17917cd65df9eab175c1e8e851047df25752b5ff50
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:59Z"
      volumeMounts:
      - mountPath: /conf
        name: kube-state-metrics-cr-metrics-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4f6m9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.67
    podIPs:
    - ip: 10.190.128.67
    qosClass: Burstable
    startTime: "2025-07-07T04:30:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      components.gke.io/component-name: advanceddatapath
      components.gke.io/component-version: 32.3.32
      prometheus.io/port: "9990"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-07-07T04:27:09Z"
    generateName: anetd-
    labels:
      controller-revision-hash: 676b5d9685
      k8s-app: cilium
      pod-template-generation: "1"
    name: anetd-5sldj
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: anetd
      uid: 71517f30-66c4-4024-a44e-d2674a521516
    resourceVersion: "1751862501703855000"
    uid: 6b01aa89-f3d9-4e5f-aec0-eb572d2b9d5c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    automountServiceAccountToken: false
    containers:
    - args:
      - |
        exec {BASH_XTRACEFD}>&1 && set -x

        if [[ -n "$${CILIUM_CONFIG_MAP}" ]] \
            && [[ ! -f "$${CILIUM_CONFIG_MAP}/mtu" ]] \
            && [[ -n "$${MTU_DEVICE_IP}" ]]; then
          # Get mtu of the interface which has ip address '$${MTU_DEVICE_IP}'
          mtu="$$(ip addr show to "$${MTU_DEVICE_IP}" | grep mtu | awk '{for (I=1;I<NF;I++) if ($$I == "mtu") print $$(I+1)}')"

          # Check if we could retrive a number in 'mtu'
          if [[ "$${mtu}" =~ ^[0-9]+$$ ]]; then
            mtuArg="--mtu=$${mtu}"
          fi
        fi

        exec /usr/bin/cilium-agent \
          --k8s-kubeconfig-path=/var/lib/kubelet/kubeconfig \
          --config-dir="$${CILIUM_CONFIG_MAP}" \
          $${mtuArg:-}
      command:
      - bash
      - -euc
      env:
      - name: GOPS_CONFIG_DIR
        value: /.config
      - name: K8S_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CILIUM_K8S_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CILIUM_FLANNEL_MASTER_DEVICE
        valueFrom:
          configMapKeyRef:
            key: flannel-master-device
            name: cilium-config
            optional: true
      - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
        valueFrom:
          configMapKeyRef:
            key: flannel-uninstall-on-exit
            name: cilium-config
            optional: true
      - name: MTU_DEVICE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CILIUM_CONFIG_MAP
        value: /tmp/cilium/config-map
      - name: CILIUM_CLUSTERMESH_CONFIG
        value: /var/lib/cilium/clustermesh/
      - name: CILIUM_CNI_CHAINING_MODE
        valueFrom:
          configMapKeyRef:
            key: cni-chaining-mode
            name: cilium-config
            optional: true
      - name: CILIUM_CUSTOM_CNI_CONF
        valueFrom:
          configMapKeyRef:
            key: custom-cni-conf
            name: cilium-config
            optional: true
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 60
        httpGet:
          host: 127.0.0.1
          httpHeaders:
          - name: brief
            value: "true"
          path: /healthz
          port: agenthealth
          scheme: HTTP
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
      name: cilium-agent
      ports:
      - containerPort: 9965
        hostPort: 9965
        name: flowmetrics
        protocol: TCP
      - containerPort: 9879
        hostPort: 9879
        name: agenthealth
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          httpHeaders:
          - name: brief
            value: "true"
          path: /healthz
          port: agenthealth
          scheme: HTTP
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 200m
          memory: 200Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - SYS_MODULE
        privileged: true
      startupProbe:
        failureThreshold: 105
        httpGet:
          host: 127.0.0.1
          httpHeaders:
          - name: brief
            value: "true"
          path: /healthz
          port: agenthealth
          scheme: HTTP
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /.config
        name: gops-config-dir
      - mountPath: /sys/fs/bpf
        name: bpf-maps
      - mountPath: /var/run/cilium
        name: cilium-run
      - mountPath: /host/etc/cni/net.d
        name: etc-cni-netd
      - mountPath: /var/lib/cilium/clustermesh
        name: clustermesh-secrets
        readOnly: true
      - mountPath: /tmp/cilium/config-map
        name: cilium-config-path
        readOnly: true
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/log/network
        name: network-log
      - mountPath: /var/lib/kubelet/kubeconfig
        name: kubelet-credentials
        readOnly: true
      - mountPath: /var/lib/kubelet/pki/
        name: kubelet-certs
        readOnly: true
      - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
        name: kubelet-pki
        readOnly: true
      - mountPath: /etc/ssl/certs/
        name: ca-certificates
        readOnly: true
      - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
        name: gke-exec-auth-plugin
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/cilium-agent-metrics-collector-config-data.textproto,/conf/cilium-agent-hubble-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: cilium-agent-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240508_2300_RC0@sha256:1593f1e9570b99b1843cc886b723d4e291e2281fe2b9e45f565064cac379e4cf
      imagePullPolicy: IfNotPresent
      name: cilium-agent-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: cilium-agent-metrics-collector-config-map-vol
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /install-plugin.sh
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      imagePullPolicy: IfNotPresent
      name: install-cni-binaries
      resources:
        requests:
          cpu: 100m
          memory: 10Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-path
    - command:
      - /init-container.sh
      env:
      - name: CILIUM_ALL_STATE
        valueFrom:
          configMapKeyRef:
            key: clean-cilium-state
            name: cilium-config
            optional: true
      - name: CILIUM_BPF_STATE
        valueFrom:
          configMapKeyRef:
            key: clean-cilium-bpf-state
            name: cilium-config
            optional: true
      - name: CILIUM_WAIT_BPF_MOUNT
        valueFrom:
          configMapKeyRef:
            key: wait-bpf-mount
            name: cilium-config
            optional: true
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      imagePullPolicy: IfNotPresent
      name: clean-cilium-state
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /sys/fs/bpf
        mountPropagation: HostToContainer
        name: bpf-maps
      - mountPath: /var/run/cilium
        name: cilium-run
    nodeName: gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 1
    tolerations:
    - operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: gops-config-dir
    - hostPath:
        path: /var/lib/kubelet/pki/
        type: Directory
      name: kubelet-certs
    - hostPath:
        path: /var/lib/kubelet/kubeconfig
        type: File
      name: kubelet-credentials
    - hostPath:
        path: /etc/srv/kubernetes/pki/ca-certificates.crt
        type: File
      name: kubelet-pki
    - hostPath:
        path: /etc/ssl/certs/
        type: Directory
      name: ca-certificates
    - hostPath:
        path: /home/kubernetes/bin/gke-exec-auth-plugin
        type: File
      name: gke-exec-auth-plugin
    - hostPath:
        path: /var/run/cilium
        type: DirectoryOrCreate
      name: cilium-run
    - hostPath:
        path: /sys/fs/bpf
        type: DirectoryOrCreate
      name: bpf-maps
    - hostPath:
        path: /home/kubernetes/bin
        type: DirectoryOrCreate
      name: cni-path
    - hostPath:
        path: /etc/cni/net.d
        type: DirectoryOrCreate
      name: etc-cni-netd
    - hostPath:
        path: /lib/modules
        type: DirectoryOrCreate
      name: lib-modules
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /var/log/network
        type: DirectoryOrCreate
      name: network-log
    - name: clustermesh-secrets
      secret:
        defaultMode: 420
        optional: true
        secretName: cilium-clustermesh
    - name: cilium-config-path
      projected:
        defaultMode: 420
        sources:
        - configMap:
            name: cilium-config
        - configMap:
            name: cilium-hubble-config
        - configMap:
            name: cilium-config-emergency-override
    - configMap:
        defaultMode: 420
        items:
        - key: cilium-agent-metrics-collector-config-data
          path: cilium-agent-metrics-collector-config-data.textproto
        - key: cilium-agent-hubble-metrics-collector-config-data
          path: cilium-agent-hubble-metrics-collector-config-data.textproto
        name: cilium-agent-metrics-collector-config-map
      name: cilium-agent-metrics-collector-config-map-vol
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d0a17b5d8e789033c746cd833102ecf49c9f9996a6af2ef020b36a8eef8a1c29
      image: asia.gke.gcr.io/cilium/cilium:v1.16.8-gke1.32-gke.13
      imageID: asia.gcr.io/gke-release-staging/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      lastState: {}
      name: cilium-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:28:02Z"
      volumeMounts:
      - mountPath: /.config
        name: gops-config-dir
      - mountPath: /sys/fs/bpf
        name: bpf-maps
      - mountPath: /var/run/cilium
        name: cilium-run
      - mountPath: /host/etc/cni/net.d
        name: etc-cni-netd
      - mountPath: /var/lib/cilium/clustermesh
        name: clustermesh-secrets
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp/cilium/config-map
        name: cilium-config-path
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/log/network
        name: network-log
      - mountPath: /var/lib/kubelet/kubeconfig
        name: kubelet-credentials
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/kubelet/pki/
        name: kubelet-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
        name: kubelet-pki
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/ssl/certs/
        name: ca-certificates
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
        name: gke-exec-auth-plugin
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://bea13c62b1e4b1975fe1e91ef8dbabeb72eb977afa6cef76411e98dfa4e6284e
      image: asia.gke.gcr.io/gke-metrics-collector:20240508_2300_RC0
      imageID: asia.gcr.io/gke-release-staging/gke-metrics-collector:20240508_2300_RC0@sha256:1593f1e9570b99b1843cc886b723d4e291e2281fe2b9e45f565064cac379e4cf
      lastState: {}
      name: cilium-agent-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:28:06Z"
      volumeMounts:
      - mountPath: /conf
        name: cilium-agent-metrics-collector-config-map-vol
    hostIP: 192.168.17.14
    hostIPs:
    - ip: 192.168.17.14
    initContainerStatuses:
    - containerID: containerd://73f8495d18ff5516fe85a80459cd37650217b42c08360af4176255f7d2e9d391
      image: asia.gke.gcr.io/cilium/cilium:v1.16.8-gke1.32-gke.13
      imageID: asia.gcr.io/gke-release-staging/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      lastState: {}
      name: install-cni-binaries
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://73f8495d18ff5516fe85a80459cd37650217b42c08360af4176255f7d2e9d391
          exitCode: 0
          finishedAt: "2025-07-07T04:27:58Z"
          reason: Completed
          startedAt: "2025-07-07T04:27:57Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-path
    - containerID: containerd://9cbed98d3296404c63562a4c216443e76fe9452e4f8896b5483778e28f83963f
      image: asia.gke.gcr.io/cilium/cilium:v1.16.8-gke1.32-gke.13
      imageID: asia.gcr.io/gke-release-staging/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      lastState: {}
      name: clean-cilium-state
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://9cbed98d3296404c63562a4c216443e76fe9452e4f8896b5483778e28f83963f
          exitCode: 0
          finishedAt: "2025-07-07T04:28:00Z"
          reason: Completed
          startedAt: "2025-07-07T04:28:00Z"
      volumeMounts:
      - mountPath: /sys/fs/bpf
        name: bpf-maps
      - mountPath: /var/run/cilium
        name: cilium-run
    phase: Running
    podIP: 192.168.17.14
    podIPs:
    - ip: 192.168.17.14
    qosClass: Burstable
    startTime: "2025-07-07T04:27:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      components.gke.io/component-name: advanceddatapath
      components.gke.io/component-version: 32.3.32
      prometheus.io/port: "9990"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-07-07T04:30:04Z"
    generateName: anetd-
    labels:
      controller-revision-hash: 676b5d9685
      k8s-app: cilium
      pod-template-generation: "1"
    name: anetd-vns72
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: anetd
      uid: 71517f30-66c4-4024-a44e-d2674a521516
    resourceVersion: "1751862624484239009"
    uid: 2d468b0a-b6a2-48a1-b27d-0c46b8faa6b0
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    automountServiceAccountToken: false
    containers:
    - args:
      - |
        exec {BASH_XTRACEFD}>&1 && set -x

        if [[ -n "$${CILIUM_CONFIG_MAP}" ]] \
            && [[ ! -f "$${CILIUM_CONFIG_MAP}/mtu" ]] \
            && [[ -n "$${MTU_DEVICE_IP}" ]]; then
          # Get mtu of the interface which has ip address '$${MTU_DEVICE_IP}'
          mtu="$$(ip addr show to "$${MTU_DEVICE_IP}" | grep mtu | awk '{for (I=1;I<NF;I++) if ($$I == "mtu") print $$(I+1)}')"

          # Check if we could retrive a number in 'mtu'
          if [[ "$${mtu}" =~ ^[0-9]+$$ ]]; then
            mtuArg="--mtu=$${mtu}"
          fi
        fi

        exec /usr/bin/cilium-agent \
          --k8s-kubeconfig-path=/var/lib/kubelet/kubeconfig \
          --config-dir="$${CILIUM_CONFIG_MAP}" \
          $${mtuArg:-}
      command:
      - bash
      - -euc
      env:
      - name: GOPS_CONFIG_DIR
        value: /.config
      - name: K8S_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CILIUM_K8S_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CILIUM_FLANNEL_MASTER_DEVICE
        valueFrom:
          configMapKeyRef:
            key: flannel-master-device
            name: cilium-config
            optional: true
      - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
        valueFrom:
          configMapKeyRef:
            key: flannel-uninstall-on-exit
            name: cilium-config
            optional: true
      - name: MTU_DEVICE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CILIUM_CONFIG_MAP
        value: /tmp/cilium/config-map
      - name: CILIUM_CLUSTERMESH_CONFIG
        value: /var/lib/cilium/clustermesh/
      - name: CILIUM_CNI_CHAINING_MODE
        valueFrom:
          configMapKeyRef:
            key: cni-chaining-mode
            name: cilium-config
            optional: true
      - name: CILIUM_CUSTOM_CNI_CONF
        valueFrom:
          configMapKeyRef:
            key: custom-cni-conf
            name: cilium-config
            optional: true
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 60
        httpGet:
          host: 127.0.0.1
          httpHeaders:
          - name: brief
            value: "true"
          path: /healthz
          port: agenthealth
          scheme: HTTP
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
      name: cilium-agent
      ports:
      - containerPort: 9965
        hostPort: 9965
        name: flowmetrics
        protocol: TCP
      - containerPort: 9879
        hostPort: 9879
        name: agenthealth
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          httpHeaders:
          - name: brief
            value: "true"
          path: /healthz
          port: agenthealth
          scheme: HTTP
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 200m
          memory: 200Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - SYS_MODULE
        privileged: true
      startupProbe:
        failureThreshold: 105
        httpGet:
          host: 127.0.0.1
          httpHeaders:
          - name: brief
            value: "true"
          path: /healthz
          port: agenthealth
          scheme: HTTP
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /.config
        name: gops-config-dir
      - mountPath: /sys/fs/bpf
        name: bpf-maps
      - mountPath: /var/run/cilium
        name: cilium-run
      - mountPath: /host/etc/cni/net.d
        name: etc-cni-netd
      - mountPath: /var/lib/cilium/clustermesh
        name: clustermesh-secrets
        readOnly: true
      - mountPath: /tmp/cilium/config-map
        name: cilium-config-path
        readOnly: true
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/log/network
        name: network-log
      - mountPath: /var/lib/kubelet/kubeconfig
        name: kubelet-credentials
        readOnly: true
      - mountPath: /var/lib/kubelet/pki/
        name: kubelet-certs
        readOnly: true
      - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
        name: kubelet-pki
        readOnly: true
      - mountPath: /etc/ssl/certs/
        name: ca-certificates
        readOnly: true
      - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
        name: gke-exec-auth-plugin
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/cilium-agent-metrics-collector-config-data.textproto,/conf/cilium-agent-hubble-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: cilium-agent-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240508_2300_RC0@sha256:1593f1e9570b99b1843cc886b723d4e291e2281fe2b9e45f565064cac379e4cf
      imagePullPolicy: IfNotPresent
      name: cilium-agent-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: cilium-agent-metrics-collector-config-map-vol
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /install-plugin.sh
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      imagePullPolicy: IfNotPresent
      name: install-cni-binaries
      resources:
        requests:
          cpu: 100m
          memory: 10Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-path
    - command:
      - /init-container.sh
      env:
      - name: CILIUM_ALL_STATE
        valueFrom:
          configMapKeyRef:
            key: clean-cilium-state
            name: cilium-config
            optional: true
      - name: CILIUM_BPF_STATE
        valueFrom:
          configMapKeyRef:
            key: clean-cilium-bpf-state
            name: cilium-config
            optional: true
      - name: CILIUM_WAIT_BPF_MOUNT
        valueFrom:
          configMapKeyRef:
            key: wait-bpf-mount
            name: cilium-config
            optional: true
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      imagePullPolicy: IfNotPresent
      name: clean-cilium-state
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /sys/fs/bpf
        mountPropagation: HostToContainer
        name: bpf-maps
      - mountPath: /var/run/cilium
        name: cilium-run
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 1
    tolerations:
    - operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: gops-config-dir
    - hostPath:
        path: /var/lib/kubelet/pki/
        type: Directory
      name: kubelet-certs
    - hostPath:
        path: /var/lib/kubelet/kubeconfig
        type: File
      name: kubelet-credentials
    - hostPath:
        path: /etc/srv/kubernetes/pki/ca-certificates.crt
        type: File
      name: kubelet-pki
    - hostPath:
        path: /etc/ssl/certs/
        type: Directory
      name: ca-certificates
    - hostPath:
        path: /home/kubernetes/bin/gke-exec-auth-plugin
        type: File
      name: gke-exec-auth-plugin
    - hostPath:
        path: /var/run/cilium
        type: DirectoryOrCreate
      name: cilium-run
    - hostPath:
        path: /sys/fs/bpf
        type: DirectoryOrCreate
      name: bpf-maps
    - hostPath:
        path: /home/kubernetes/bin
        type: DirectoryOrCreate
      name: cni-path
    - hostPath:
        path: /etc/cni/net.d
        type: DirectoryOrCreate
      name: etc-cni-netd
    - hostPath:
        path: /lib/modules
        type: DirectoryOrCreate
      name: lib-modules
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /var/log/network
        type: DirectoryOrCreate
      name: network-log
    - name: clustermesh-secrets
      secret:
        defaultMode: 420
        optional: true
        secretName: cilium-clustermesh
    - name: cilium-config-path
      projected:
        defaultMode: 420
        sources:
        - configMap:
            name: cilium-config
        - configMap:
            name: cilium-hubble-config
        - configMap:
            name: cilium-config-emergency-override
    - configMap:
        defaultMode: 420
        items:
        - key: cilium-agent-metrics-collector-config-data
          path: cilium-agent-metrics-collector-config-data.textproto
        - key: cilium-agent-hubble-metrics-collector-config-data
          path: cilium-agent-hubble-metrics-collector-config-data.textproto
        name: cilium-agent-metrics-collector-config-map
      name: cilium-agent-metrics-collector-config-map-vol
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:08Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bf7b5a5cfaf4946e296274fcd9cf6feef173233e90d4df9737b6cf719af42b59
      image: asia.gke.gcr.io/cilium/cilium:v1.16.8-gke1.32-gke.13
      imageID: asia.gcr.io/gke-release-staging/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      lastState: {}
      name: cilium-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:12Z"
      volumeMounts:
      - mountPath: /.config
        name: gops-config-dir
      - mountPath: /sys/fs/bpf
        name: bpf-maps
      - mountPath: /var/run/cilium
        name: cilium-run
      - mountPath: /host/etc/cni/net.d
        name: etc-cni-netd
      - mountPath: /var/lib/cilium/clustermesh
        name: clustermesh-secrets
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp/cilium/config-map
        name: cilium-config-path
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/log/network
        name: network-log
      - mountPath: /var/lib/kubelet/kubeconfig
        name: kubelet-credentials
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/kubelet/pki/
        name: kubelet-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
        name: kubelet-pki
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/ssl/certs/
        name: ca-certificates
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
        name: gke-exec-auth-plugin
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://83b6208d40151a41163923a1aafce4f0f3c532e3f45f64c6bbac51e169d5584c
      image: asia.gke.gcr.io/gke-metrics-collector:20240508_2300_RC0
      imageID: asia.gcr.io/gke-release-staging/gke-metrics-collector:20240508_2300_RC0@sha256:1593f1e9570b99b1843cc886b723d4e291e2281fe2b9e45f565064cac379e4cf
      lastState: {}
      name: cilium-agent-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:18Z"
      volumeMounts:
      - mountPath: /conf
        name: cilium-agent-metrics-collector-config-map-vol
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    initContainerStatuses:
    - containerID: containerd://77bd6fd8839048557a3a226b0549142730cb36a529c1096875be7936860fbe7b
      image: asia.gke.gcr.io/cilium/cilium:v1.16.8-gke1.32-gke.13
      imageID: asia.gcr.io/gke-release-staging/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      lastState: {}
      name: install-cni-binaries
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://77bd6fd8839048557a3a226b0549142730cb36a529c1096875be7936860fbe7b
          exitCode: 0
          finishedAt: "2025-07-07T04:30:08Z"
          reason: Completed
          startedAt: "2025-07-07T04:30:07Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-path
    - containerID: containerd://17d3255c615f9ced006b009d58fe72011d80305e511c2d810e90bc5fffb4ef84
      image: asia.gke.gcr.io/cilium/cilium:v1.16.8-gke1.32-gke.13
      imageID: asia.gcr.io/gke-release-staging/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      lastState: {}
      name: clean-cilium-state
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://17d3255c615f9ced006b009d58fe72011d80305e511c2d810e90bc5fffb4ef84
          exitCode: 0
          finishedAt: "2025-07-07T04:30:09Z"
          reason: Completed
          startedAt: "2025-07-07T04:30:10Z"
      volumeMounts:
      - mountPath: /sys/fs/bpf
        name: bpf-maps
      - mountPath: /var/run/cilium
        name: cilium-run
    phase: Running
    podIP: 192.168.17.15
    podIPs:
    - ip: 192.168.17.15
    qosClass: Burstable
    startTime: "2025-07-07T04:30:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: networkpolicy-antrea
      components.gke.io/component-version: 0.4.3
    creationTimestamp: "2025-07-07T04:28:00Z"
    generateName: antrea-controller-horizontal-autoscaler-6c8484f8db-
    labels:
      k8s-app: antrea-controller-autoscaler
      pod-template-hash: 6c8484f8db
    name: antrea-controller-horizontal-autoscaler-6c8484f8db-tfkdm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: antrea-controller-horizontal-autoscaler-6c8484f8db
      uid: f3956136-424f-41f8-a59d-8360f0cc33ee
    resourceVersion: "1751862671196367008"
    uid: 80725130-0b52-441b-bd11-7f260b400b74
  spec:
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=antrea-controller-horizontal-autoscaler
      - --target=deployment/antrea-controller
      - --nodelabels=kubernetes.io/os=windows
      - --logtostderr=true
      - --v=2
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.0-gke.11@sha256:af852676a9858afc2842969fb5a204b41368ba41e4f314da179a01b633f64b25
      imagePullPolicy: IfNotPresent
      name: autoscaler
      resources:
        requests:
          cpu: 10m
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wzg84
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 65534
    serviceAccount: antrea-cpha
    serviceAccountName: antrea-cpha
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-wzg84
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:11Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8463ef6408523b7d65fe117c249bc6669c8f26c41155ceb74057f64175e70c72
      image: sha256:bb376f2464755812677f9e0234ff039638ad7c25b19ccfdbf5683b9d45ccfefa
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler@sha256:af852676a9858afc2842969fb5a204b41368ba41e4f314da179a01b633f64b25
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:10Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wzg84
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.75
    podIPs:
    - ip: 10.190.128.75
    qosClass: Burstable
    startTime: "2025-07-07T04:30:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: efficiency-daemon
      components.gke.io/component-version: 32.1.1
    creationTimestamp: "2025-07-07T04:30:04Z"
    generateName: efficiency-daemon-
    labels:
      controller-revision-hash: 857d55944b
      k8s-app: efficiency-daemon
      name: efficiency-daemon
      pod-template-generation: "1"
    name: efficiency-daemon-7kwxk
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: efficiency-daemon
      uid: 04b46f68-9c5d-4de3-8ed3-f62b12b4f80f
    resourceVersion: "1751862611523199011"
    uid: 0b800904-52ba-4662-9af4-3b7513e201d2
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    containers:
    - args:
      - -host_prefix=/host
      - -config_path=/config/efficiency-daemon-config.yaml
      - -config_overrides=efficiency-daemon-config-overrides
      - -eviction_hard_memory_available=100Mi
      - -log_level=info
      command:
      - /efficiency_daemon
      env:
      - name: CLUSTER_PROJECT
        value: "388364419893"
      - name: CLUSTER_LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: efficiency-daemon
      - name: CLOUD_MONITORING_ENDPOINT
        value: monitoring.googleapis.com:443
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/efficiency-daemon:v32.1.0-gke.0@sha256:730ea76188d686b0e6343ce3bd4b9c8f8e7db984736587cd40aca0dac9676d6b
      imagePullPolicy: Always
      name: efficiency-daemon
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/etc/kubernetes/manifests
        name: k8s-manifests
        readOnly: true
      - mountPath: /host/run/containerd/containerd.sock
        name: containerd-sock
      - mountPath: /host/run/nri/nri.sock
        name: nri-sock
      - mountPath: /host/sys/fs/cgroup
        name: sys-cgroup
      - mountPath: /host/sys/devices/system/cpu
        name: sys-cpu
      - mountPath: /config
        name: efficiency-daemon-config
      - mountPath: /host/home/kubernetes/bin/kubelet
        name: kubelet-exec
      - mountPath: /var/run/dbus/system_bus_socket
        name: dbus-sock
      - mountPath: /host/sys/module
        name: sys-module
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jwjms
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: efficiency-daemon
    serviceAccountName: efficiency-daemon
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/manifests
        type: Directory
      name: k8s-manifests
    - hostPath:
        path: /run/containerd/containerd.sock
        type: Socket
      name: containerd-sock
    - hostPath:
        path: /run/nri/nri.sock
        type: Socket
      name: nri-sock
    - hostPath:
        path: /sys/fs/cgroup
        type: Directory
      name: sys-cgroup
    - hostPath:
        path: /sys/devices/system/cpu
        type: Directory
      name: sys-cpu
    - configMap:
        defaultMode: 420
        name: efficiency-daemon-config
      name: efficiency-daemon-config
    - hostPath:
        path: /home/kubernetes/bin/kubelet
        type: File
      name: kubelet-exec
    - hostPath:
        path: /var/run/dbus/system_bus_socket
        type: Socket
      name: dbus-sock
    - hostPath:
        path: /sys/module
        type: Directory
      name: sys-module
    - name: kube-api-access-jwjms
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:11Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c50146250158c42c6b74ad8692b25ff920cff9910001c0a59b47b34643348d89
      image: sha256:b495afa0fbbd0f5b77f197b0e30acee7b8a04190e940ef7e3b56e30df9621a49
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/efficiency-daemon@sha256:730ea76188d686b0e6343ce3bd4b9c8f8e7db984736587cd40aca0dac9676d6b
      lastState: {}
      name: efficiency-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:11Z"
      volumeMounts:
      - mountPath: /host/etc/kubernetes/manifests
        name: k8s-manifests
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/run/containerd/containerd.sock
        name: containerd-sock
      - mountPath: /host/run/nri/nri.sock
        name: nri-sock
      - mountPath: /host/sys/fs/cgroup
        name: sys-cgroup
      - mountPath: /host/sys/devices/system/cpu
        name: sys-cpu
      - mountPath: /config
        name: efficiency-daemon-config
      - mountPath: /host/home/kubernetes/bin/kubelet
        name: kubelet-exec
      - mountPath: /var/run/dbus/system_bus_socket
        name: dbus-sock
      - mountPath: /host/sys/module
        name: sys-module
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jwjms
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 192.168.17.15
    podIPs:
    - ip: 192.168.17.15
    qosClass: Burstable
    startTime: "2025-07-07T04:30:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: efficiency-daemon
      components.gke.io/component-version: 32.1.1
    creationTimestamp: "2025-07-07T04:27:09Z"
    generateName: efficiency-daemon-
    labels:
      controller-revision-hash: 857d55944b
      k8s-app: efficiency-daemon
      name: efficiency-daemon
      pod-template-generation: "1"
    name: efficiency-daemon-vcrwd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: efficiency-daemon
      uid: 04b46f68-9c5d-4de3-8ed3-f62b12b4f80f
    resourceVersion: "1751862649638367010"
    uid: 87947a72-afed-4568-a331-91ec6c5c3c5c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    containers:
    - args:
      - -host_prefix=/host
      - -config_path=/config/efficiency-daemon-config.yaml
      - -config_overrides=efficiency-daemon-config-overrides
      - -eviction_hard_memory_available=100Mi
      - -log_level=info
      command:
      - /efficiency_daemon
      env:
      - name: CLUSTER_PROJECT
        value: "388364419893"
      - name: CLUSTER_LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: efficiency-daemon
      - name: CLOUD_MONITORING_ENDPOINT
        value: monitoring.googleapis.com:443
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/efficiency-daemon:v32.1.0-gke.0@sha256:730ea76188d686b0e6343ce3bd4b9c8f8e7db984736587cd40aca0dac9676d6b
      imagePullPolicy: Always
      name: efficiency-daemon
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/etc/kubernetes/manifests
        name: k8s-manifests
        readOnly: true
      - mountPath: /host/run/containerd/containerd.sock
        name: containerd-sock
      - mountPath: /host/run/nri/nri.sock
        name: nri-sock
      - mountPath: /host/sys/fs/cgroup
        name: sys-cgroup
      - mountPath: /host/sys/devices/system/cpu
        name: sys-cpu
      - mountPath: /config
        name: efficiency-daemon-config
      - mountPath: /host/home/kubernetes/bin/kubelet
        name: kubelet-exec
      - mountPath: /var/run/dbus/system_bus_socket
        name: dbus-sock
      - mountPath: /host/sys/module
        name: sys-module
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jzg6l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: efficiency-daemon
    serviceAccountName: efficiency-daemon
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/manifests
        type: Directory
      name: k8s-manifests
    - hostPath:
        path: /run/containerd/containerd.sock
        type: Socket
      name: containerd-sock
    - hostPath:
        path: /run/nri/nri.sock
        type: Socket
      name: nri-sock
    - hostPath:
        path: /sys/fs/cgroup
        type: Directory
      name: sys-cgroup
    - hostPath:
        path: /sys/devices/system/cpu
        type: Directory
      name: sys-cpu
    - configMap:
        defaultMode: 420
        name: efficiency-daemon-config
      name: efficiency-daemon-config
    - hostPath:
        path: /home/kubernetes/bin/kubelet
        type: File
      name: kubelet-exec
    - hostPath:
        path: /var/run/dbus/system_bus_socket
        type: Socket
      name: dbus-sock
    - hostPath:
        path: /sys/module
        type: Directory
      name: sys-module
    - name: kube-api-access-jzg6l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://437182c3b79cd547f6c8ecad88ff25e600c927c9144c55d48be0c8d99a21c02b
      image: sha256:b495afa0fbbd0f5b77f197b0e30acee7b8a04190e940ef7e3b56e30df9621a49
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/efficiency-daemon@sha256:730ea76188d686b0e6343ce3bd4b9c8f8e7db984736587cd40aca0dac9676d6b
      lastState: {}
      name: efficiency-daemon
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:46Z"
      volumeMounts:
      - mountPath: /host/etc/kubernetes/manifests
        name: k8s-manifests
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/run/containerd/containerd.sock
        name: containerd-sock
      - mountPath: /host/run/nri/nri.sock
        name: nri-sock
      - mountPath: /host/sys/fs/cgroup
        name: sys-cgroup
      - mountPath: /host/sys/devices/system/cpu
        name: sys-cpu
      - mountPath: /config
        name: efficiency-daemon-config
      - mountPath: /host/home/kubernetes/bin/kubelet
        name: kubelet-exec
      - mountPath: /var/run/dbus/system_bus_socket
        name: dbus-sock
      - mountPath: /host/sys/module
        name: sys-module
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jzg6l
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.14
    hostIPs:
    - ip: 192.168.17.14
    phase: Running
    podIP: 192.168.17.14
    podIPs:
    - ip: 192.168.17.14
    qosClass: Burstable
    startTime: "2025-07-07T04:27:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: netd-combined
      components.gke.io/component-version: 12.3.1
    creationTimestamp: "2025-07-07T04:27:53Z"
    generateName: egress-nat-controller-7c8484b9bb-
    labels:
      component: netd
      gke-app: egress-nat-controller
      pod-template-hash: 7c8484b9bb
    name: egress-nat-controller-7c8484b9bb-bkscd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: egress-nat-controller-7c8484b9bb
      uid: aa51665c-5aee-49a5-9937-4bf490eb7800
    resourceVersion: "1751862672366271004"
    uid: db416352-7a84-48d8-b782-baca41d34e90
  spec:
    containers:
    - args:
      - --pod-cidrs=10.190.128.0/17
      - --service-cidrs=34.118.224.0/20
      - --node-cidrs=192.168.17.0/24
      - --cluster-short-hash=b8b78fe0
      env:
      - name: CLUSTER_PROJECT
        value: "388364419893"
      - name: CLUSTER_LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: egress-nat-controller
      - name: CLOUD_MONITORING_ENDPOINT
        value: monitoring.googleapis.com:443
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/egress-nat-controller:v0.2.18-gke.1@sha256:a60d7fdd9540a20432423d1168c5fbbdac6b2b2ead8d3331696f3086b9f1f16d
      imagePullPolicy: IfNotPresent
      name: egress-nat-controller
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xfq6p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: egress-nat-controller
    serviceAccountName: egress-nat-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-xfq6p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d9d29ed5edc4a9ce6d834ba56059c0ff2671feb49e1439de1f4877cfaedb44bc
      image: asia.gke.gcr.io/egress-nat-controller:v0.2.18-gke.1
      imageID: asia.gcr.io/gke-release-staging/egress-nat-controller:v0.2.18-gke.1@sha256:a60d7fdd9540a20432423d1168c5fbbdac6b2b2ead8d3331696f3086b9f1f16d
      lastState: {}
      name: egress-nat-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:11Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xfq6p
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.72
    podIPs:
    - ip: 10.190.128.72
    qosClass: BestEffort
    startTime: "2025-07-07T04:30:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: event-exporter
      components.gke.io/component-version: 1.32.1-gke.2
    creationTimestamp: "2025-07-07T04:26:45Z"
    generateName: event-exporter-gke-6bc66785bc-
    labels:
      k8s-app: event-exporter
      pod-template-hash: 6bc66785bc
      version: v0.4.0
    name: event-exporter-gke-6bc66785bc-7kj9m
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: event-exporter-gke-6bc66785bc
      uid: 8f42fdc6-8cf3-4471-b374-d2edc9d7ea1b
    resourceVersion: "1751862715381087024"
    uid: f54fe00c-dc32-4f06-a054-323965b05058
  spec:
    containers:
    - command:
      - /event-exporter
      - -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com
      - -prometheus-endpoint=:8080
      - -enable-pod-owner-label=true
      - -system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:v0.5.0-gke.3@sha256:51c1304e614c073516863183ead124d657bad18323cd25fe532e80740455f542
      imagePullPolicy: IfNotPresent
      name: event-exporter
      resources:
        requests:
          cpu: 3m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m4mqr
        readOnly: true
    - command:
      - /monitor
      - --api-override=https://monitoring.googleapis.com/
      - --source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons&whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
      - --source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons&customResourceType=k8s_container&customLabels[project_id]&customLabels[location]&customLabels[cluster_name]&customLabels[namespace_name]=kube-system&customLabels[pod_name]=event-exporter-$NODE_NAME&customLabels[container_name]=event-exporter&whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count
      - --pod-id=$(POD_NAME)
      - --namespace-id=$(POD_NAMESPACE)
      - --node-name=$(NODE_NAME)
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.23@sha256:2d49384c9f9a247122d52b4c6aeb89e3847877be8ffa8bb631b7ddf7fc93a56d
      imagePullPolicy: IfNotPresent
      name: prometheus-to-sd-exporter
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m4mqr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: event-exporter-sa
    serviceAccountName: event-exporter-sa
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: Directory
      name: ssl-certs
    - name: kube-api-access-m4mqr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d13cadc847df28726d19587d1c7cc48cfd96c0cc77b61e97157125216cc07861
      image: sha256:deb8e719d8f5b03a87326668a17f1811d8255a077fa3b7b519f343717e99a48f
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter@sha256:51c1304e614c073516863183ead124d657bad18323cd25fe532e80740455f542
      lastState: {}
      name: event-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:18Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m4mqr
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://600da3e3e8e360b436520159c342be3c4736af929ace734c86ec95be78fa20a3
      image: sha256:df2a9d484277244c976aa45259bc61ec821e84ab27678b1cab383564671efab6
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd@sha256:2d49384c9f9a247122d52b4c6aeb89e3847877be8ffa8bb631b7ddf7fc93a56d
      lastState: {}
      name: prometheus-to-sd-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:54Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m4mqr
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.77
    podIPs:
    - ip: 10.190.128.77
    qosClass: Burstable
    startTime: "2025-07-07T04:30:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: filestorecsi
      components.gke.io/component-version: 0.15.14
    creationTimestamp: "2025-07-07T04:26:53Z"
    generateName: filestore-lock-release-controller-7c9c5dfddc-
    labels:
      component: filestorecsi
      k8s-app: filestore-lock-release-controller
      pod-template-hash: 7c9c5dfddc
    name: filestore-lock-release-controller-7c9c5dfddc-q68bt
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: filestore-lock-release-controller-7c9c5dfddc
      uid: e596a814-6b95-4581-969d-425ef7b76048
    resourceVersion: "1751862932578719013"
    uid: 0b9591d1-22a3-42c5-97a1-472dcb18ff97
  spec:
    containers:
    - args:
      - --v=5
      - --http-endpoint=:22027
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver-lockrelease:v1.8.0-gke.17@sha256:3803443d3c494fa3f08e9a409e34885f32e8a2dfd732ec1dc038c2f834f01f94
      imagePullPolicy: IfNotPresent
      name: filestore-lock-release-controller
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 65534
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k8dp8
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: filestorecsi-lockrelease-metrics-collector
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/filestorecsi-lockrelease-metrics-collector-config-data.textproto
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241103_2300_RC0@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
      imagePullPolicy: IfNotPresent
      name: filestorecsi-lockrelease-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: filestorecsi-lockrelease-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k8dp8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: filestore-lockrelease-controller-sa
    serviceAccountName: filestore-lockrelease-controller-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: filestorecsi-lockrelease-metrics-collector-config-data
          path: filestorecsi-lockrelease-metrics-collector-config-data.textproto
        name: filestorecsi-lockrelease-metrics-collector-config-map
      name: filestorecsi-lockrelease-metrics-collector-config-map-vol
    - name: kube-api-access-k8dp8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:35:32Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:35:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:35:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5210d740d177ab785434e6c15be7551e3c5debb247b062c439d1185039fb6928
      image: sha256:440e8a50d2729c6365ba79c3c7fd6e49896f7118d1221cac5bb49f373e199d03
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver-lockrelease@sha256:3803443d3c494fa3f08e9a409e34885f32e8a2dfd732ec1dc038c2f834f01f94
      lastState: {}
      name: filestore-lock-release-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:35:19Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k8dp8
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://80dba2151c191df91506f0f5b08a02ffd913801ff9b9d5350239064d9e7b8247
      image: sha256:5bd03271a99bee2bb631adb7137bf9a29c6af0a53e268bf45db00053393f165e
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
      lastState: {}
      name: filestorecsi-lockrelease-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:35:31Z"
      volumeMounts:
      - mountPath: /conf
        name: filestorecsi-lockrelease-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k8dp8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.14
    hostIPs:
    - ip: 192.168.17.14
    phase: Running
    podIP: 10.190.128.12
    podIPs:
    - ip: 10.190.128.12
    qosClass: Burstable
    startTime: "2025-07-07T04:27:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: filestorecsi
      components.gke.io/component-version: 0.15.14
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-07-07T04:27:10Z"
    generateName: filestore-node-
    labels:
      controller-revision-hash: 7c8bbbd897
      k8s-app: gcp-filestore-csi-driver
      pod-template-generation: "1"
    name: filestore-node-8tkkw
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: filestore-node
      uid: 56c34c8f-9f19-40be-a6c2-6dd84e5a8c1f
    resourceVersion: "1751862574395775023"
    uid: 4a8a4c0a-79af-4d5d-818b-feaadcb4b15a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    containers:
    - args:
      - --v=5
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/filestore.csi.storage.gke.io/csi.sock
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.38@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
      imagePullPolicy: IfNotPresent
      name: csi-driver-registrar
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zxt8g
        readOnly: true
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --node=true
      - --nodeid=$(KUBE_NODE_NAME)
      - --feature-lock-release=true
      - --feature-lock-release-standalone=true
      - --http-endpoint=:990
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver:v1.8.0-gke.17@sha256:ef4266b730f4ec4cd5571794496b956d3c43482a73918d2b06a798c17eec24e3
      imagePullPolicy: IfNotPresent
      name: gcp-filestore-driver
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zxt8g
        readOnly: true
    - command:
      - /nfs_services_start.sh
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver:v1.8.0-gke.17@sha256:ef4266b730f4ec4cd5571794496b956d3c43482a73918d2b06a798c17eec24e3
      imagePullPolicy: IfNotPresent
      name: nfs-services
      resources:
        requests:
          cpu: 10m
          memory: 110Mi
      securityContext:
        allowPrivilegeEscalation: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zxt8g
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: filestorecsi-metrics-collector
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/filestorecsi-metrics-collector-config-data.textproto
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241103_2300_RC0@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
      imagePullPolicy: IfNotPresent
      name: filestorecsi-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: filestorecsi-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zxt8g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: filestorecsi-node-sa
    serviceAccountName: filestorecsi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/filestore.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: plugin-dir
    - configMap:
        defaultMode: 420
        items:
        - key: filestorecsi-metrics-collector-config-data
          path: filestorecsi-metrics-collector-config-data.textproto
        name: filestorecsi-metrics-collector-config-map
      name: filestorecsi-metrics-collector-config-map-vol
    - name: kube-api-access-zxt8g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:29Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:29:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:29:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4a3bb842caadfceca0b80f28ca1318f6e1cc2156393d6d6599de135c0d6c9760
      image: sha256:4b29945a5e5e6c0f0e332c2fe1575e250804b36f68f54170bb29061b1c5096d0
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
      lastState:
        terminated:
          containerID: containerd://435f31610111e9465aad41e72352b7e7af3a95978f32d35ab01736d59d81a883
          exitCode: 1
          finishedAt: "2025-07-07T04:28:45Z"
          reason: Error
          startedAt: "2025-07-07T04:28:27Z"
      name: csi-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:29:32Z"
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zxt8g
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://760d98109333f98e057f75339abeb5579ee7ce2414fa0462aafbf3650627af60
      image: sha256:5bd03271a99bee2bb631adb7137bf9a29c6af0a53e268bf45db00053393f165e
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
      lastState: {}
      name: filestorecsi-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:28:06Z"
      volumeMounts:
      - mountPath: /conf
        name: filestorecsi-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zxt8g
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://b0757471fbd5603d23f83a6f51d5358bbd4184e737e86d653f8b6b930fd89636
      image: sha256:bbda4e62ce6c159cd0a85b24a0934f42df7fa134edc31378aa54ba89eaf2ca9d
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver@sha256:ef4266b730f4ec4cd5571794496b956d3c43482a73918d2b06a798c17eec24e3
      lastState: {}
      name: gcp-filestore-driver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:28:00Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zxt8g
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://ae3ce27284a0e28ad1f213009ef323ab1bbf07ceed7e456aab2d3ab653d4672d
      image: sha256:bbda4e62ce6c159cd0a85b24a0934f42df7fa134edc31378aa54ba89eaf2ca9d
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver@sha256:ef4266b730f4ec4cd5571794496b956d3c43482a73918d2b06a798c17eec24e3
      lastState: {}
      name: nfs-services
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:28:04Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zxt8g
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.14
    hostIPs:
    - ip: 192.168.17.14
    phase: Running
    podIP: 192.168.17.14
    podIPs:
    - ip: 192.168.17.14
    qosClass: Burstable
    startTime: "2025-07-07T04:27:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: filestorecsi
      components.gke.io/component-version: 0.15.14
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-07-07T04:30:07Z"
    generateName: filestore-node-
    labels:
      controller-revision-hash: 7c8bbbd897
      k8s-app: gcp-filestore-csi-driver
      pod-template-generation: "1"
    name: filestore-node-qtsw9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: filestore-node
      uid: 56c34c8f-9f19-40be-a6c2-6dd84e5a8c1f
    resourceVersion: "1751862685107167024"
    uid: 27991fea-655c-4774-9aac-4b5803b1a9b9
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    containers:
    - args:
      - --v=5
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/filestore.csi.storage.gke.io/csi.sock
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.38@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
      imagePullPolicy: IfNotPresent
      name: csi-driver-registrar
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x7jr4
        readOnly: true
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --node=true
      - --nodeid=$(KUBE_NODE_NAME)
      - --feature-lock-release=true
      - --feature-lock-release-standalone=true
      - --http-endpoint=:990
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver:v1.8.0-gke.17@sha256:ef4266b730f4ec4cd5571794496b956d3c43482a73918d2b06a798c17eec24e3
      imagePullPolicy: IfNotPresent
      name: gcp-filestore-driver
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x7jr4
        readOnly: true
    - command:
      - /nfs_services_start.sh
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver:v1.8.0-gke.17@sha256:ef4266b730f4ec4cd5571794496b956d3c43482a73918d2b06a798c17eec24e3
      imagePullPolicy: IfNotPresent
      name: nfs-services
      resources:
        requests:
          cpu: 10m
          memory: 110Mi
      securityContext:
        allowPrivilegeEscalation: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x7jr4
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: filestorecsi-metrics-collector
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/filestorecsi-metrics-collector-config-data.textproto
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241103_2300_RC0@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
      imagePullPolicy: IfNotPresent
      name: filestorecsi-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: filestorecsi-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x7jr4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: filestorecsi-node-sa
    serviceAccountName: filestorecsi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/filestore.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: plugin-dir
    - configMap:
        defaultMode: 420
        items:
        - key: filestorecsi-metrics-collector-config-data
          path: filestorecsi-metrics-collector-config-data.textproto
        name: filestorecsi-metrics-collector-config-map
      name: filestorecsi-metrics-collector-config-map-vol
    - name: kube-api-access-x7jr4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d208476cea0dab7a857b8be396548e889570acbcc45147a4562f0a252fca2b8e
      image: sha256:4b29945a5e5e6c0f0e332c2fe1575e250804b36f68f54170bb29061b1c5096d0
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
      lastState:
        terminated:
          containerID: containerd://55f51edb77c9454af56e83a8473a53301c1a9337072930c52157fc3b47b7270d
          exitCode: 1
          finishedAt: "2025-07-07T04:31:02Z"
          reason: Error
          startedAt: "2025-07-07T04:30:24Z"
      name: csi-driver-registrar
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:24Z"
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x7jr4
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://1b291b888eb61191e57fe1fefa85185e6707e126f81ca46d103f7f7e5a5f07ab
      image: sha256:5bd03271a99bee2bb631adb7137bf9a29c6af0a53e268bf45db00053393f165e
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
      lastState: {}
      name: filestorecsi-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:20Z"
      volumeMounts:
      - mountPath: /conf
        name: filestorecsi-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x7jr4
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://00a3c7dec8b21852dc0ea5a8955da6f2169f5239a6bfa535cbe5ba16dfb0d17c
      image: sha256:bbda4e62ce6c159cd0a85b24a0934f42df7fa134edc31378aa54ba89eaf2ca9d
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver@sha256:ef4266b730f4ec4cd5571794496b956d3c43482a73918d2b06a798c17eec24e3
      lastState: {}
      name: gcp-filestore-driver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:44Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x7jr4
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://bc063755e806956ea196804d3fda1e41385ae86cf707c9e0d173773f281fa2cf
      image: sha256:bbda4e62ce6c159cd0a85b24a0934f42df7fa134edc31378aa54ba89eaf2ca9d
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver@sha256:ef4266b730f4ec4cd5571794496b956d3c43482a73918d2b06a798c17eec24e3
      lastState: {}
      name: nfs-services
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:51Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x7jr4
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 192.168.17.15
    podIPs:
    - ip: 192.168.17.15
    qosClass: Burstable
    startTime: "2025-07-07T04:30:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      EnableNodeJournal: "false"
      EnablePodSecurityPolicy: "false"
      SystemOnlyLogging: "false"
      components.gke.io/component-name: fluentbit
      components.gke.io/component-version: 1.32.0-gke.7
      monitoring.gke.io/path: /api/v1/metrics/prometheus
    creationTimestamp: "2025-07-07T04:30:07Z"
    generateName: fluentbit-gke-big-
    labels:
      component: fluentbit-gke
      controller-revision-hash: 5d7844ff74
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
      nodeType: big
      pod-template-generation: "1"
    name: fluentbit-gke-big-qt9gr
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: fluentbit-gke-big
      uid: 460ac395-2946-41f6-bf8e-75ab7bff974c
    resourceVersion: "1751862720523983007"
    uid: 2af7322e-6ceb-4341-8d96-f9b1957f20cc
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    containers:
    - image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.12-gke.86@sha256:0badbc279d5ed4b391b88e1ebb4eb81c0bfda4797214f5cebc3b6a3f3a151cc8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 2020
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 5
      name: fluentbit
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
      - mountPath: /var/lib/google-fluentbit/pos-files
        name: varlibgooglefluentbitpos
      - mountPath: /fluent-bit/etc/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dldfz
        readOnly: true
    - command:
      - /fluent-bit-gke-exporter
      - --kubernetes-separator=_
      - --stackdriver-resource-model=k8s
      - --enable-pod-label-discovery
      - --pod-label-dot-replacement=_
      - --split-stdout-stderr
      - --stackdriver-timeout=60s
      - --max-inactivity-duration=600s
      - --stackdriver-address=logging.googleapis.com:443
      - --pool-size=5
      - --max-log-connections=5
      - --logtostderr
      - --node-name=$(NODE_NAME)
      - --pod-cache-size=1024
      - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.9-gke.8@sha256:b856a892648d5c5ce3bfae9d4aa2c04f5444970f9b1ef673a5a6ff2176c7002b
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 2021
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: fluentbit-gke
      ports:
      - containerPort: 2021
        hostPort: 2021
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dldfz
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/fluentbit-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: fluentbit-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250513_2300_RC0@sha256:c8bd9deb1e4181b8d6fbdac05bb5726bb0cc96cc03342e6a0f2239cd9ead7a1e
      imagePullPolicy: IfNotPresent
      name: fluentbit-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: fluentbit-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dldfz
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |-
        set -e;
        if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
          exit 0;
        fi;
        if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
          rm -rf /var/lib/google-fluentbit/pos-files.staged;
          rm -rf /var/lib/google-fluentbit/pos-files;
          cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
          mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
          rm -rf /var/run/google-fluentbit/pos-files;
        fi
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250507.00_p0@sha256:0f863362719eef67395f2cb7b484e0217a448d2739d12c4d9aa2b977ac60de2b
      imagePullPolicy: IfNotPresent
      name: fluentbit-gke-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/google-fluentbit
        name: varlibgooglefluentbit
      - mountPath: /var/run/google-fluentbit
        name: varrungooglefluentbit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dldfz
        readOnly: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: fluentbit-gke
    serviceAccountName: fluentbit-gke
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/google-fluentbit
        type: DirectoryOrCreate
      name: varrungooglefluentbit
    - hostPath:
        path: /var/log
        type: Directory
      name: varlog
    - hostPath:
        path: /var/lib/docker/containers
        type: Directory
      name: varlibdockercontainers
    - hostPath:
        path: /var/lib/google-fluentbit
        type: DirectoryOrCreate
      name: varlibgooglefluentbit
    - hostPath:
        path: /var/lib/google-fluentbit/pos-files
        type: DirectoryOrCreate
      name: varlibgooglefluentbitpos
    - configMap:
        defaultMode: 420
        name: fluentbit-gke-config-v1.4.0
      name: config-volume
    - configMap:
        defaultMode: 420
        items:
        - key: fluentbit-metrics-collector-config-data
          path: fluentbit-metrics-collector-config-data.textproto
        name: fluentbit-metrics-collector-config-map
      name: fluentbit-metrics-collector-config-map-vol
    - name: kube-api-access-dldfz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:32:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:32:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://dbbb392a810a3f3d7baada1a5cbce19351dfbc4cb1abe5822d9d90222cf471a5
      image: sha256:1185d6da44eb1fa5f191cdc7910ebfdf4e28c8f79d7b056313d8067a24e4141e
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit@sha256:0badbc279d5ed4b391b88e1ebb4eb81c0bfda4797214f5cebc3b6a3f3a151cc8
      lastState: {}
      name: fluentbit
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:12Z"
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/google-fluentbit/pos-files
        name: varlibgooglefluentbitpos
      - mountPath: /fluent-bit/etc/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dldfz
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://7de619b88598b51dadfce3a332309ca9b56f8b52cf806d3579a4b1fa7a52e603
      image: sha256:c96a568813619a5a3378cbe7477405c0b2a3f3b227d2e0816ec97a184321396c
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter@sha256:b856a892648d5c5ce3bfae9d4aa2c04f5444970f9b1ef673a5a6ff2176c7002b
      lastState: {}
      name: fluentbit-gke
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:46Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dldfz
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://1190fd743e5bf6f41924aeadd0c52adc9d26027152eee4fe29d6454d299b1379
      image: sha256:1cb54db9cbe1a8187543c47ccb8b7d750e95296e9ef8ccb7839fbc45b2d97d43
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:c8bd9deb1e4181b8d6fbdac05bb5726bb0cc96cc03342e6a0f2239cd9ead7a1e
      lastState: {}
      name: fluentbit-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:59Z"
      volumeMounts:
      - mountPath: /conf
        name: fluentbit-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dldfz
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    initContainerStatuses:
    - containerID: containerd://b59eb2a53acab2852d90e80dd9f665777c5bc63d99fa76d1ffcfcb84aeb85c2d
      image: sha256:f9e398310736fce42726822e813441d4d7c02adf0303bdcc4e476e2649152adb
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash@sha256:0f863362719eef67395f2cb7b484e0217a448d2739d12c4d9aa2b977ac60de2b
      lastState: {}
      name: fluentbit-gke-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://b59eb2a53acab2852d90e80dd9f665777c5bc63d99fa76d1ffcfcb84aeb85c2d
          exitCode: 0
          finishedAt: "2025-07-07T04:30:30Z"
          reason: Completed
          startedAt: "2025-07-07T04:30:19Z"
      volumeMounts:
      - mountPath: /var/lib/google-fluentbit
        name: varlibgooglefluentbit
      - mountPath: /var/run/google-fluentbit
        name: varrungooglefluentbit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dldfz
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 192.168.17.15
    podIPs:
    - ip: 192.168.17.15
    qosClass: Burstable
    startTime: "2025-07-07T04:30:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      EnableNodeJournal: "false"
      EnablePodSecurityPolicy: "false"
      SystemOnlyLogging: "false"
      components.gke.io/component-name: fluentbit
      components.gke.io/component-version: 1.32.0-gke.7
      monitoring.gke.io/path: /api/v1/metrics/prometheus
    creationTimestamp: "2025-07-07T04:27:10Z"
    generateName: fluentbit-gke-big-
    labels:
      component: fluentbit-gke
      controller-revision-hash: 5d7844ff74
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
      nodeType: big
      pod-template-generation: "1"
    name: fluentbit-gke-big-zsxkj
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: fluentbit-gke-big
      uid: 460ac395-2946-41f6-bf8e-75ab7bff974c
    resourceVersion: "1751862706907727017"
    uid: d90497f4-d770-48a1-9277-c0f81b16901d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    containers:
    - image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.12-gke.86@sha256:0badbc279d5ed4b391b88e1ebb4eb81c0bfda4797214f5cebc3b6a3f3a151cc8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 2020
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 5
      name: fluentbit
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
      - mountPath: /var/lib/google-fluentbit/pos-files
        name: varlibgooglefluentbitpos
      - mountPath: /fluent-bit/etc/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5k8qj
        readOnly: true
    - command:
      - /fluent-bit-gke-exporter
      - --kubernetes-separator=_
      - --stackdriver-resource-model=k8s
      - --enable-pod-label-discovery
      - --pod-label-dot-replacement=_
      - --split-stdout-stderr
      - --stackdriver-timeout=60s
      - --max-inactivity-duration=600s
      - --stackdriver-address=logging.googleapis.com:443
      - --pool-size=5
      - --max-log-connections=5
      - --logtostderr
      - --node-name=$(NODE_NAME)
      - --pod-cache-size=1024
      - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.9-gke.8@sha256:b856a892648d5c5ce3bfae9d4aa2c04f5444970f9b1ef673a5a6ff2176c7002b
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 2021
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: fluentbit-gke
      ports:
      - containerPort: 2021
        hostPort: 2021
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5k8qj
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/fluentbit-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: fluentbit-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250513_2300_RC0@sha256:c8bd9deb1e4181b8d6fbdac05bb5726bb0cc96cc03342e6a0f2239cd9ead7a1e
      imagePullPolicy: IfNotPresent
      name: fluentbit-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: fluentbit-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5k8qj
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |-
        set -e;
        if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
          exit 0;
        fi;
        if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
          rm -rf /var/lib/google-fluentbit/pos-files.staged;
          rm -rf /var/lib/google-fluentbit/pos-files;
          cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
          mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
          rm -rf /var/run/google-fluentbit/pos-files;
        fi
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250507.00_p0@sha256:0f863362719eef67395f2cb7b484e0217a448d2739d12c4d9aa2b977ac60de2b
      imagePullPolicy: IfNotPresent
      name: fluentbit-gke-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/google-fluentbit
        name: varlibgooglefluentbit
      - mountPath: /var/run/google-fluentbit
        name: varrungooglefluentbit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5k8qj
        readOnly: true
    nodeName: gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: fluentbit-gke
    serviceAccountName: fluentbit-gke
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/google-fluentbit
        type: DirectoryOrCreate
      name: varrungooglefluentbit
    - hostPath:
        path: /var/log
        type: Directory
      name: varlog
    - hostPath:
        path: /var/lib/docker/containers
        type: Directory
      name: varlibdockercontainers
    - hostPath:
        path: /var/lib/google-fluentbit
        type: DirectoryOrCreate
      name: varlibgooglefluentbit
    - hostPath:
        path: /var/lib/google-fluentbit/pos-files
        type: DirectoryOrCreate
      name: varlibgooglefluentbitpos
    - configMap:
        defaultMode: 420
        name: fluentbit-gke-config-v1.4.0
      name: config-volume
    - configMap:
        defaultMode: 420
        items:
        - key: fluentbit-metrics-collector-config-data
          path: fluentbit-metrics-collector-config-data.textproto
        name: fluentbit-metrics-collector-config-map
      name: fluentbit-metrics-collector-config-map-vol
    - name: kube-api-access-5k8qj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e34a2ba2a06e03f292114af2900a9655808a73910c803686705cd8cc62a6cce5
      image: sha256:1185d6da44eb1fa5f191cdc7910ebfdf4e28c8f79d7b056313d8067a24e4141e
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit@sha256:0badbc279d5ed4b391b88e1ebb4eb81c0bfda4797214f5cebc3b6a3f3a151cc8
      lastState: {}
      name: fluentbit
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:32Z"
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/google-fluentbit/pos-files
        name: varlibgooglefluentbitpos
      - mountPath: /fluent-bit/etc/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5k8qj
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://c09eff126d893550577303ef6cbed4b8839a532b609ac718fbbe0373a6f2e1fd
      image: sha256:c96a568813619a5a3378cbe7477405c0b2a3f3b227d2e0816ec97a184321396c
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter@sha256:b856a892648d5c5ce3bfae9d4aa2c04f5444970f9b1ef673a5a6ff2176c7002b
      lastState: {}
      name: fluentbit-gke
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:33Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5k8qj
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://b294778da3ff6f3b944c2f4960d55e640e379e24de04a8fd9f0e7122b4bd9612
      image: sha256:1cb54db9cbe1a8187543c47ccb8b7d750e95296e9ef8ccb7839fbc45b2d97d43
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:c8bd9deb1e4181b8d6fbdac05bb5726bb0cc96cc03342e6a0f2239cd9ead7a1e
      lastState: {}
      name: fluentbit-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:45Z"
      volumeMounts:
      - mountPath: /conf
        name: fluentbit-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5k8qj
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.14
    hostIPs:
    - ip: 192.168.17.14
    initContainerStatuses:
    - containerID: containerd://2c4f2343e60000a1124be39626edd2e885bc2cfa29701ebaa73a306796f1fa9d
      image: sha256:f9e398310736fce42726822e813441d4d7c02adf0303bdcc4e476e2649152adb
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash@sha256:0f863362719eef67395f2cb7b484e0217a448d2739d12c4d9aa2b977ac60de2b
      lastState: {}
      name: fluentbit-gke-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2c4f2343e60000a1124be39626edd2e885bc2cfa29701ebaa73a306796f1fa9d
          exitCode: 0
          finishedAt: "2025-07-07T04:27:56Z"
          reason: Completed
          startedAt: "2025-07-07T04:27:55Z"
      volumeMounts:
      - mountPath: /var/lib/google-fluentbit
        name: varlibgooglefluentbit
      - mountPath: /var/run/google-fluentbit
        name: varrungooglefluentbit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5k8qj
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 192.168.17.14
    podIPs:
    - ip: 192.168.17.14
    qosClass: Burstable
    startTime: "2025-07-07T04:27:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: gcsfusecsi
      components.gke.io/component-version: 0.9.25
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-07-07T04:27:10Z"
    generateName: gcsfusecsi-node-
    labels:
      controller-revision-hash: 58dd5d6584
      k8s-app: gcs-fuse-csi-driver
      pod-template-generation: "1"
    name: gcsfusecsi-node-9pnvl
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: gcsfusecsi-node
      uid: ab47ff86-9578-4a0f-9a75-f86f96971b37
    resourceVersion: "1751863029652911018"
    uid: 09359c36-c336-4b2e-add7-9d0181a00ec9
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    containers:
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --nodeid=$(KUBE_NODE_NAME)
      - --node=true
      - --identity-pool=upheld-terminus-462616-m0.svc.id.goog
      - --identity-provider=https://container.googleapis.com/v1/projects/upheld-terminus-462616-m0/locations/asia-south1/clusters/poc-gke-autopilot
      - --metrics-endpoint=:9920
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcs-fuse-csi-driver:v1.14.0-gke.3@sha256:5cd80529d319f193d5b20299a2192fcc1a55e7926cc9799e9c632980d3da4a9a
      imagePullPolicy: IfNotPresent
      name: gcs-fuse-csi-driver
      ports:
      - containerPort: 9920
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 5m
          memory: 20Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: socket-dir
      - mountPath: /sockets
        name: fuse-socket-dir
      - mountPath: /sys
        name: host-sysfs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97fff
        readOnly: true
    - args:
      - --v=5
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/gcsfuse.csi.storage.gke.io/csi.sock
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.10.1-gke.39@sha256:510154b2f9056764c8080e7e6954ca5e67bc06c3e154567344df9e876b0a7296
      imagePullPolicy: IfNotPresent
      name: csi-driver-registrar
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97fff
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/gcsfusecsi-metrics-collector-config-data.textproto
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: gcsfusecsi-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250311_2300_RC0@sha256:e6713a8266629d9e103f7b2c7715bf510170fe28ebe2dc341327fa5e6a0facde
      imagePullPolicy: IfNotPresent
      name: gcsfusecsi-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 100Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: gcsfusecsi-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97fff
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: gcsfusecsi-node-sa
    serviceAccountName: gcsfusecsi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/pods/
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/gcsfuse.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: socket-dir
    - emptyDir: {}
      name: fuse-socket-dir
    - hostPath:
        path: /sys
        type: Directory
      name: host-sysfs
    - configMap:
        defaultMode: 420
        items:
        - key: gcsfusecsi-metrics-collector-config-data
          path: gcsfusecsi-metrics-collector-config-data.textproto
        name: gcsfusecsi-metrics-collector-config-map
      name: gcsfusecsi-metrics-collector-config-map-vol
    - name: kube-api-access-97fff
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:35:37Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:37:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:37:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://85bbc79f1759a5d0336bd66754482ed5f8dc0b29611edbc5c698a8be50964215
      image: sha256:6748e9729caddea601b867091509816eca6aaa39443455b29926cff6239dfbb7
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:510154b2f9056764c8080e7e6954ca5e67bc06c3e154567344df9e876b0a7296
      lastState:
        terminated:
          containerID: containerd://a9c0dd34ccb4ce1be8085f62b9b4ac49fda0a1aa7383a42bcc70b5f8c55bfeba
          exitCode: 1
          finishedAt: "2025-07-07T04:36:52Z"
          reason: Error
          startedAt: "2025-07-07T04:36:17Z"
      name: csi-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:37:08Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97fff
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://98bd1b8efc30ac34a073dd67f3b38f71256e9dccf81c9abcd29a176698814033
      image: sha256:1b93ca3387316ba20dda49b4f19e29c181e47831c5088209886924243f5d5fab
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcs-fuse-csi-driver@sha256:5cd80529d319f193d5b20299a2192fcc1a55e7926cc9799e9c632980d3da4a9a
      lastState: {}
      name: gcs-fuse-csi-driver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:34:30Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet/pods
        name: kubelet-dir
      - mountPath: /csi
        name: socket-dir
      - mountPath: /sockets
        name: fuse-socket-dir
      - mountPath: /sys
        name: host-sysfs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97fff
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://5eea74aa1765e4f6a0766a572a65207a553726364e36c87f6d30edf4310691b0
      image: sha256:e2974bbde01e58f2b84d1c5462ab84cf03f95a252da3f1ec39ec42b6efb3fc76
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:e6713a8266629d9e103f7b2c7715bf510170fe28ebe2dc341327fa5e6a0facde
      lastState: {}
      name: gcsfusecsi-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:35:37Z"
      volumeMounts:
      - mountPath: /conf
        name: gcsfusecsi-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97fff
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.14
    hostIPs:
    - ip: 192.168.17.14
    phase: Running
    podIP: 10.190.128.11
    podIPs:
    - ip: 10.190.128.11
    qosClass: Burstable
    startTime: "2025-07-07T04:27:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: gcsfusecsi
      components.gke.io/component-version: 0.9.25
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-07-07T04:30:06Z"
    generateName: gcsfusecsi-node-
    labels:
      controller-revision-hash: 58dd5d6584
      k8s-app: gcs-fuse-csi-driver
      pod-template-generation: "1"
    name: gcsfusecsi-node-dgbbz
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: gcsfusecsi-node
      uid: ab47ff86-9578-4a0f-9a75-f86f96971b37
    resourceVersion: "1751862718459791011"
    uid: de8632ab-8e6d-4dac-bc04-691ccb8601f4
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    containers:
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --nodeid=$(KUBE_NODE_NAME)
      - --node=true
      - --identity-pool=upheld-terminus-462616-m0.svc.id.goog
      - --identity-provider=https://container.googleapis.com/v1/projects/upheld-terminus-462616-m0/locations/asia-south1/clusters/poc-gke-autopilot
      - --metrics-endpoint=:9920
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcs-fuse-csi-driver:v1.14.0-gke.3@sha256:5cd80529d319f193d5b20299a2192fcc1a55e7926cc9799e9c632980d3da4a9a
      imagePullPolicy: IfNotPresent
      name: gcs-fuse-csi-driver
      ports:
      - containerPort: 9920
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 5m
          memory: 20Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: socket-dir
      - mountPath: /sockets
        name: fuse-socket-dir
      - mountPath: /sys
        name: host-sysfs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h9nc4
        readOnly: true
    - args:
      - --v=5
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/gcsfuse.csi.storage.gke.io/csi.sock
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.10.1-gke.39@sha256:510154b2f9056764c8080e7e6954ca5e67bc06c3e154567344df9e876b0a7296
      imagePullPolicy: IfNotPresent
      name: csi-driver-registrar
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h9nc4
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/gcsfusecsi-metrics-collector-config-data.textproto
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: gcsfusecsi-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250311_2300_RC0@sha256:e6713a8266629d9e103f7b2c7715bf510170fe28ebe2dc341327fa5e6a0facde
      imagePullPolicy: IfNotPresent
      name: gcsfusecsi-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 100Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: gcsfusecsi-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h9nc4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: gcsfusecsi-node-sa
    serviceAccountName: gcsfusecsi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/pods/
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/gcsfuse.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: socket-dir
    - emptyDir: {}
      name: fuse-socket-dir
    - hostPath:
        path: /sys
        type: Directory
      name: host-sysfs
    - configMap:
        defaultMode: 420
        items:
        - key: gcsfusecsi-metrics-collector-config-data
          path: gcsfusecsi-metrics-collector-config-data.textproto
        name: gcsfusecsi-metrics-collector-config-map
      name: gcsfusecsi-metrics-collector-config-map-vol
    - name: kube-api-access-h9nc4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://892cd9b5fb150e477e0ec72da0d7810cecb17a94fe9bcaeb5d9ecf2945897db1
      image: sha256:6748e9729caddea601b867091509816eca6aaa39443455b29926cff6239dfbb7
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:510154b2f9056764c8080e7e6954ca5e67bc06c3e154567344df9e876b0a7296
      lastState: {}
      name: csi-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:46Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h9nc4
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://e4a6a4ea2d0c031744d5a4f6f096db1d1207ee5d8f668cfb0b7dfe36c6626451
      image: sha256:1b93ca3387316ba20dda49b4f19e29c181e47831c5088209886924243f5d5fab
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcs-fuse-csi-driver@sha256:5cd80529d319f193d5b20299a2192fcc1a55e7926cc9799e9c632980d3da4a9a
      lastState: {}
      name: gcs-fuse-csi-driver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:17Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet/pods
        name: kubelet-dir
      - mountPath: /csi
        name: socket-dir
      - mountPath: /sockets
        name: fuse-socket-dir
      - mountPath: /sys
        name: host-sysfs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h9nc4
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://8ca1153d8b0132e720aa9fd8867eadd1bb648a75c586ef8b47a8e3a4fc1b068f
      image: sha256:e2974bbde01e58f2b84d1c5462ab84cf03f95a252da3f1ec39ec42b6efb3fc76
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:e6713a8266629d9e103f7b2c7715bf510170fe28ebe2dc341327fa5e6a0facde
      lastState: {}
      name: gcsfusecsi-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:57Z"
      volumeMounts:
      - mountPath: /conf
        name: gcsfusecsi-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h9nc4
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.80
    podIPs:
    - ip: 10.190.128.80
    qosClass: Burstable
    startTime: "2025-07-07T04:30:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: gke-metadata-server
      components.gke.io/component-version: 0.4.316
      monitoring.gke.io/path: /metricz
    creationTimestamp: "2025-07-07T04:30:08Z"
    generateName: gke-metadata-server-
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      controller-revision-hash: d86fdb8f6
      k8s-app: gke-metadata-server
      pod-template-generation: "1"
    name: gke-metadata-server-8tqgx
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: gke-metadata-server
      uid: 942dfb4e-a42d-4c87-b00a-957f067297bf
    resourceVersion: "1751862670779055007"
    uid: 83028c51-32bc-4d54-be3f-9c85015678a6
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    containers:
    - command:
      - /gke-metadata-server
      - --logtostderr
      - --token-exchange-endpoint=https://securetoken.googleapis.com/v1/identitybindingtoken
      - --workload-pool=upheld-terminus-462616-m0.svc.id.goog
      - --alts-service-suffixes-using-node-identity=storage.googleapis.com,bigtable.googleapis.com,bigtable2.googleapis.com,bigtablerls.googleapis.com,spanner.googleapis.com,spanner2.googleapis.com,spanner-rls.googleapis.com,grpclb.directpath.google.internal,grpclb-dualstack.directpath.google.internal,grpc-directpath-dualstack.googleapis.com,staging-wrenchworks.sandbox.googleapis.com,preprod-spanner.sandbox.googleapis.com,wrenchworks-loadtest.googleapis.com,wrenchworks-nonprod.googleapis.com
      - --identity-provider=https://container.googleapis.com/v1/projects/upheld-terminus-462616-m0/locations/asia-south1/clusters/poc-gke-autopilot
      - --passthrough-ksa-list=anthos-identity-service:gke-oidc-envoy-sa,anthos-identity-service:gke-oidc-service-sa,gke-managed-dpv2-observability:hubble-relay,kube-system:antrea-controller,kube-system:container-watcher-pod-reader,kube-system:coredns,kube-system:egress-nat-controller,kube-system:event-exporter-sa,kube-system:filestore-lockrelease-controller-sa,kube-system:fluentd-gcp-scaler,kube-system:gke-metrics-agent,kube-system:gke-spiffe-node-agent,kube-system:heapster,kube-system:konnectivity-agent,kube-system:kube-dns,kube-system:maintenance-handler,kube-system:metadata-agent,kube-system:network-metering-agent,kube-system:node-local-dns,kube-system:pkgextract-service,kube-system:pkgextract-cleanup-service,kube-system:securityprofile-controller,istio-system:istio-ingressgateway-service-account,istio-system:cluster-local-gateway-service-account,csm:csm-sync-agent,knative-serving:controller,kube-system:pdcsi-node-sa,kube-system:gcsfusecsi-node-sa,gmp-system:collector,gke-gmp-system:collector,gke-managed-cim:kube-state-metrics,gke-mcs:gke-mcs-importer
      - --attributes=cluster-name=poc-gke-autopilot,cluster-uid=b8b78fe07b044f7e8350e01d51fbd4a789068bbed3d643b8a3e15c6a4138832d,cluster-location=asia-south1
      - --cluster-uid=b8b78fe07b044f7e8350e01d51fbd4a789068bbed3d643b8a3e15c6a4138832d
      - --sts-endpoint=https://sts.googleapis.com
      - --token-exchange-mode=sts
      - --cloud-monitoring-endpoint=monitoring.googleapis.com:443
      - --iam-cred-service-endpoint=https://iamcredentials.googleapis.com
      - --cluster-project-number=388364419893
      - --cluster-location=asia-south1
      - --cluster-name=poc-gke-autopilot
      - --component-version=0.4.316
      - --ksa-cache-mode=watchchecker
      - --kcp-allow-watch-checker=true
      - --enable-mds-csi-driver=true
      - --enable-alts-bound-token=true
      - --csi-socket=/csi/csi.sock
      - --volumes-db=/var/run/gkemds.gke.io/csi/volumes.boltdb
      - --write-trust-map=true
      env:
      - name: GOMEMLIMIT
        value: "94371840"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metadata-server:gke_metadata_server_20250115.00_p0@sha256:a6301b00a8c2f7091c361c6439f01e20e066aa951e04ef6195e5894b2c5dcf84
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 989
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: gke-metadata-server
      ports:
      - containerPort: 987
        hostPort: 987
        name: alts
        protocol: TCP
      - containerPort: 988
        hostPort: 988
        name: metadata-server
        protocol: TCP
      - containerPort: 989
        hostPort: 989
        name: debug-port
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 989
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/kubeconfig
        name: kubelet-credentials
        readOnly: true
      - mountPath: /var/lib/kubelet/pki/
        name: kubelet-certs
        readOnly: true
      - mountPath: /var/run/
        name: container-runtime-interface
      - mountPath: /etc/srv/kubernetes/pki
        name: kubelet-pki
        readOnly: true
      - mountPath: /etc/ssl/certs/
        name: ca-certificates
        readOnly: true
      - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
        name: gke-exec-auth-plugin
        readOnly: true
      - mountPath: /sys/firmware/efi/efivars/
        name: efivars
        readOnly: true
      - mountPath: /dev/tpm0
        name: vtpm
        readOnly: true
      - mountPath: /csi
        name: csi-socket-dir
      - mountPath: /var/run/gkemds.gke.io/csi
        name: state-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: pods-dir
      - mountPath: /registration
        name: kubelet-registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dctts
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      iam.gke.io/gke-metadata-server-enabled: "true"
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: gke-metadata-server
    serviceAccountName: gke-metadata-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/pki/
        type: Directory
      name: kubelet-certs
    - hostPath:
        path: /var/lib/kubelet/kubeconfig
        type: File
      name: kubelet-credentials
    - hostPath:
        path: /var/run/
        type: Directory
      name: container-runtime-interface
    - hostPath:
        path: /etc/srv/kubernetes/pki/
        type: Directory
      name: kubelet-pki
    - hostPath:
        path: /etc/ssl/certs/
        type: Directory
      name: ca-certificates
    - hostPath:
        path: /home/kubernetes/bin/gke-exec-auth-plugin
        type: File
      name: gke-exec-auth-plugin
    - hostPath:
        path: /sys/firmware/efi/efivars/
        type: Directory
      name: efivars
    - hostPath:
        path: /dev/tpm0
        type: CharDevice
      name: vtpm
    - hostPath:
        path: /var/lib/kubelet/plugins/gkemds.gke.io
        type: DirectoryOrCreate
      name: csi-socket-dir
    - hostPath:
        path: /var/lib/kubelet/pods
        type: Directory
      name: pods-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry
        type: Directory
      name: kubelet-registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins
        type: Directory
      name: kubelet-plugins-dir
    - hostPath:
        path: /var/run/gkemds.gke.io/csi
        type: DirectoryOrCreate
      name: state-dir
    - name: kube-api-access-dctts
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:29Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f2346ee0ba08aec7dafbe526da43db5b2dbbe0cef25026ce19b3ff9180ecce38
      image: sha256:1042ef8f29381686d87d392016b02794c1f89a35ed3b48fc1fb2edde84e4ab17
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metadata-server@sha256:a6301b00a8c2f7091c361c6439f01e20e066aa951e04ef6195e5894b2c5dcf84
      lastState: {}
      name: gke-metadata-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:29Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet/kubeconfig
        name: kubelet-credentials
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/kubelet/pki/
        name: kubelet-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/
        name: container-runtime-interface
      - mountPath: /etc/srv/kubernetes/pki
        name: kubelet-pki
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/ssl/certs/
        name: ca-certificates
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
        name: gke-exec-auth-plugin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /sys/firmware/efi/efivars/
        name: efivars
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /dev/tpm0
        name: vtpm
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /csi
        name: csi-socket-dir
      - mountPath: /var/run/gkemds.gke.io/csi
        name: state-dir
      - mountPath: /var/lib/kubelet/pods
        name: pods-dir
      - mountPath: /registration
        name: kubelet-registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dctts
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 192.168.17.15
    podIPs:
    - ip: 192.168.17.15
    qosClass: Burstable
    startTime: "2025-07-07T04:30:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: gke-metadata-server
      components.gke.io/component-version: 0.4.316
      monitoring.gke.io/path: /metricz
    creationTimestamp: "2025-07-07T04:27:11Z"
    generateName: gke-metadata-server-
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      controller-revision-hash: d86fdb8f6
      k8s-app: gke-metadata-server
      pod-template-generation: "1"
    name: gke-metadata-server-hth6w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: gke-metadata-server
      uid: 942dfb4e-a42d-4c87-b00a-957f067297bf
    resourceVersion: "1751862484720639023"
    uid: 4d99b003-c2df-4a5f-8100-ef8bd6fd4deb
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    containers:
    - command:
      - /gke-metadata-server
      - --logtostderr
      - --token-exchange-endpoint=https://securetoken.googleapis.com/v1/identitybindingtoken
      - --workload-pool=upheld-terminus-462616-m0.svc.id.goog
      - --alts-service-suffixes-using-node-identity=storage.googleapis.com,bigtable.googleapis.com,bigtable2.googleapis.com,bigtablerls.googleapis.com,spanner.googleapis.com,spanner2.googleapis.com,spanner-rls.googleapis.com,grpclb.directpath.google.internal,grpclb-dualstack.directpath.google.internal,grpc-directpath-dualstack.googleapis.com,staging-wrenchworks.sandbox.googleapis.com,preprod-spanner.sandbox.googleapis.com,wrenchworks-loadtest.googleapis.com,wrenchworks-nonprod.googleapis.com
      - --identity-provider=https://container.googleapis.com/v1/projects/upheld-terminus-462616-m0/locations/asia-south1/clusters/poc-gke-autopilot
      - --passthrough-ksa-list=anthos-identity-service:gke-oidc-envoy-sa,anthos-identity-service:gke-oidc-service-sa,gke-managed-dpv2-observability:hubble-relay,kube-system:antrea-controller,kube-system:container-watcher-pod-reader,kube-system:coredns,kube-system:egress-nat-controller,kube-system:event-exporter-sa,kube-system:filestore-lockrelease-controller-sa,kube-system:fluentd-gcp-scaler,kube-system:gke-metrics-agent,kube-system:gke-spiffe-node-agent,kube-system:heapster,kube-system:konnectivity-agent,kube-system:kube-dns,kube-system:maintenance-handler,kube-system:metadata-agent,kube-system:network-metering-agent,kube-system:node-local-dns,kube-system:pkgextract-service,kube-system:pkgextract-cleanup-service,kube-system:securityprofile-controller,istio-system:istio-ingressgateway-service-account,istio-system:cluster-local-gateway-service-account,csm:csm-sync-agent,knative-serving:controller,kube-system:pdcsi-node-sa,kube-system:gcsfusecsi-node-sa,gmp-system:collector,gke-gmp-system:collector,gke-managed-cim:kube-state-metrics,gke-mcs:gke-mcs-importer
      - --attributes=cluster-name=poc-gke-autopilot,cluster-uid=b8b78fe07b044f7e8350e01d51fbd4a789068bbed3d643b8a3e15c6a4138832d,cluster-location=asia-south1
      - --cluster-uid=b8b78fe07b044f7e8350e01d51fbd4a789068bbed3d643b8a3e15c6a4138832d
      - --sts-endpoint=https://sts.googleapis.com
      - --token-exchange-mode=sts
      - --cloud-monitoring-endpoint=monitoring.googleapis.com:443
      - --iam-cred-service-endpoint=https://iamcredentials.googleapis.com
      - --cluster-project-number=388364419893
      - --cluster-location=asia-south1
      - --cluster-name=poc-gke-autopilot
      - --component-version=0.4.316
      - --ksa-cache-mode=watchchecker
      - --kcp-allow-watch-checker=true
      - --enable-mds-csi-driver=true
      - --enable-alts-bound-token=true
      - --csi-socket=/csi/csi.sock
      - --volumes-db=/var/run/gkemds.gke.io/csi/volumes.boltdb
      - --write-trust-map=true
      env:
      - name: GOMEMLIMIT
        value: "94371840"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metadata-server:gke_metadata_server_20250115.00_p0@sha256:a6301b00a8c2f7091c361c6439f01e20e066aa951e04ef6195e5894b2c5dcf84
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 989
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: gke-metadata-server
      ports:
      - containerPort: 987
        hostPort: 987
        name: alts
        protocol: TCP
      - containerPort: 988
        hostPort: 988
        name: metadata-server
        protocol: TCP
      - containerPort: 989
        hostPort: 989
        name: debug-port
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 989
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/kubeconfig
        name: kubelet-credentials
        readOnly: true
      - mountPath: /var/lib/kubelet/pki/
        name: kubelet-certs
        readOnly: true
      - mountPath: /var/run/
        name: container-runtime-interface
      - mountPath: /etc/srv/kubernetes/pki
        name: kubelet-pki
        readOnly: true
      - mountPath: /etc/ssl/certs/
        name: ca-certificates
        readOnly: true
      - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
        name: gke-exec-auth-plugin
        readOnly: true
      - mountPath: /sys/firmware/efi/efivars/
        name: efivars
        readOnly: true
      - mountPath: /dev/tpm0
        name: vtpm
        readOnly: true
      - mountPath: /csi
        name: csi-socket-dir
      - mountPath: /var/run/gkemds.gke.io/csi
        name: state-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: pods-dir
      - mountPath: /registration
        name: kubelet-registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qb795
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    nodeSelector:
      iam.gke.io/gke-metadata-server-enabled: "true"
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: gke-metadata-server
    serviceAccountName: gke-metadata-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/pki/
        type: Directory
      name: kubelet-certs
    - hostPath:
        path: /var/lib/kubelet/kubeconfig
        type: File
      name: kubelet-credentials
    - hostPath:
        path: /var/run/
        type: Directory
      name: container-runtime-interface
    - hostPath:
        path: /etc/srv/kubernetes/pki/
        type: Directory
      name: kubelet-pki
    - hostPath:
        path: /etc/ssl/certs/
        type: Directory
      name: ca-certificates
    - hostPath:
        path: /home/kubernetes/bin/gke-exec-auth-plugin
        type: File
      name: gke-exec-auth-plugin
    - hostPath:
        path: /sys/firmware/efi/efivars/
        type: Directory
      name: efivars
    - hostPath:
        path: /dev/tpm0
        type: CharDevice
      name: vtpm
    - hostPath:
        path: /var/lib/kubelet/plugins/gkemds.gke.io
        type: DirectoryOrCreate
      name: csi-socket-dir
    - hostPath:
        path: /var/lib/kubelet/pods
        type: Directory
      name: pods-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry
        type: Directory
      name: kubelet-registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins
        type: Directory
      name: kubelet-plugins-dir
    - hostPath:
        path: /var/run/gkemds.gke.io/csi
        type: DirectoryOrCreate
      name: state-dir
    - name: kube-api-access-qb795
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b12a60f3a2da91796f526089f49fc3f2b54db60bb040244280f08d65b9d677b1
      image: sha256:1042ef8f29381686d87d392016b02794c1f89a35ed3b48fc1fb2edde84e4ab17
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metadata-server@sha256:a6301b00a8c2f7091c361c6439f01e20e066aa951e04ef6195e5894b2c5dcf84
      lastState: {}
      name: gke-metadata-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:27:52Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet/kubeconfig
        name: kubelet-credentials
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/kubelet/pki/
        name: kubelet-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/
        name: container-runtime-interface
      - mountPath: /etc/srv/kubernetes/pki
        name: kubelet-pki
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/ssl/certs/
        name: ca-certificates
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
        name: gke-exec-auth-plugin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /sys/firmware/efi/efivars/
        name: efivars
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /dev/tpm0
        name: vtpm
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /csi
        name: csi-socket-dir
      - mountPath: /var/run/gkemds.gke.io/csi
        name: state-dir
      - mountPath: /var/lib/kubelet/pods
        name: pods-dir
      - mountPath: /registration
        name: kubelet-registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qb795
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.14
    hostIPs:
    - ip: 192.168.17.14
    phase: Running
    podIP: 192.168.17.14
    podIPs:
    - ip: 192.168.17.14
    qosClass: Burstable
    startTime: "2025-07-07T04:27:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: gke-metrics-agent
      components.gke.io/component-version: 2.132.17-gke.1
      configHash: /6T+c7yPRHHKMhT4+FQp3xU3EJkwPjRd2g3RGwBUpVA=
    creationTimestamp: "2025-07-07T04:27:13Z"
    generateName: gke-metrics-agent-
    labels:
      component: gke-metrics-agent
      controller-revision-hash: 79df5996cb
      k8s-app: gke-metrics-agent
      pod-template-generation: "1"
    name: gke-metrics-agent-d8nss
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: gke-metrics-agent
      uid: 1a1c670f-3cbc-4b19-ac15-18937ff77577
    resourceVersion: "1751862485836319020"
    uid: 2eac99af-b65f-4d90-91ab-ae9239fa0e67
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    containers:
    - command:
      - /otelsvc
      - --config=/conf/gke-metrics-agent-config.yaml
      - --metrics-prefix=
      - --log-profile=prod
      - --log-format=json
      - --metrics-addr=localhost:8200
      - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
      - --enable-uas-sink=true
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: GKE_COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: GKE_COMPONENT_NAME
        value: gke-metrics-agent
      - name: GOMAXPROCS
        value: "1"
      - name: GODEBUG
        value: memprofilerate=0
      - name: ARG1
        value: ${1}
      - name: ARG2
        value: ${2}
      - name: WINDOWS_JOB_ACTION
        value: drop
      - name: LINUX_JOB_ACTION
        value: keep
      - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
        value: "true"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /
          port: 8201
          scheme: HTTP
        initialDelaySeconds: 50
        periodSeconds: 50
        successThreshold: 1
        timeoutSeconds: 3
      name: gke-metrics-agent
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 8m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: gke-metrics-agent-config-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ks9jx
        readOnly: true
    - command:
      - /otelsvc
      - --config=/conf/core-metrics-exporter-config.yaml
      - --metrics-prefix=
      - --log-profile=prod
      - --log-format=json
      - --metrics-addr=localhost:8202
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: GKE_COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: GKE_COMPONENT_NAME
        value: core-metrics-exporter
      - name: GOMAXPROCS
        value: "1"
      - name: GODEBUG
        value: memprofilerate=0
      - name: ARG1
        value: ${1}
      - name: ARG2
        value: ${2}
      - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
        value: "true"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /
          port: 8203
          scheme: HTTP
        initialDelaySeconds: 50
        periodSeconds: 50
        successThreshold: 1
        timeoutSeconds: 3
      name: core-metrics-exporter
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 6m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: core-metrics-exporter-config-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ks9jx
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: prometheus-metrics-collector
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
      imagePullPolicy: IfNotPresent
      name: prometheus-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 80Mi
        requests:
          cpu: 10m
          memory: 45Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: prometheus-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ks9jx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: gke-metrics-agent
    serviceAccountName: gke-metrics-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: gke-metrics-agent-config
          path: gke-metrics-agent-config.yaml
        name: gke-metrics-agent-conf
      name: gke-metrics-agent-config-vol
    - configMap:
        defaultMode: 420
        items:
        - key: core-metrics-exporter-config
          path: core-metrics-exporter-config.yaml
        name: core-metrics-exporter-conf
      name: core-metrics-exporter-config-vol
    - configMap:
        defaultMode: 420
        items:
        - key: kubelet-metrics-collector-config-data
          path: kubelet-metrics-collector-config-data.textproto
        - key: containerd-metrics-collector-config-data
          path: containerd-metrics-collector-config-data.textproto
        - key: kubelet-prober-metrics-collector-config-data
          path: kubelet-prober-metrics-collector-config-data.textproto
        - key: kube-proxy-metrics-collector-config-data
          path: kube-proxy-metrics-collector-config-data.textproto
        - key: node-problem-detector-metrics-collector-config-data
          path: node-problem-detector-metrics-collector-config-data.textproto
        name: prometheus-metrics-collector-config-map
      name: prometheus-metrics-collector-config-map-vol
    - name: kube-api-access-ks9jx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:30Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://847787022f5fb55d967e54acb5f7437f29026eb39b585a932ba3913ac4034047
      image: sha256:56a22e9923a144380a4aa0a9004d855dda547f4eae88a8723f2d96d156b8371a
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
      lastState: {}
      name: core-metrics-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:28:03Z"
      volumeMounts:
      - mountPath: /conf
        name: core-metrics-exporter-config-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ks9jx
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://59108cf406cac426205cdb20d64eb26a73bc3cbf114eef355c0fcb46fabb8dd3
      image: sha256:56a22e9923a144380a4aa0a9004d855dda547f4eae88a8723f2d96d156b8371a
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
      lastState: {}
      name: gke-metrics-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:28:01Z"
      volumeMounts:
      - mountPath: /conf
        name: gke-metrics-agent-config-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ks9jx
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://6e8a767d2ce299aac6422671c7e53fd3c292d6d32be354ddaddc6d416ff29251
      image: sha256:fe8c5599878f8e73e388bc2daa018e15456daab45a205942a5385b0a7b857554
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
      lastState: {}
      name: prometheus-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:28:05Z"
      volumeMounts:
      - mountPath: /conf
        name: prometheus-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ks9jx
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.14
    hostIPs:
    - ip: 192.168.17.14
    phase: Running
    podIP: 192.168.17.14
    podIPs:
    - ip: 192.168.17.14
    qosClass: Burstable
    startTime: "2025-07-07T04:27:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: gke-metrics-agent
      components.gke.io/component-version: 2.132.17-gke.1
      configHash: /6T+c7yPRHHKMhT4+FQp3xU3EJkwPjRd2g3RGwBUpVA=
    creationTimestamp: "2025-07-07T04:30:06Z"
    generateName: gke-metrics-agent-
    labels:
      component: gke-metrics-agent
      controller-revision-hash: 79df5996cb
      k8s-app: gke-metrics-agent
      pod-template-generation: "1"
    name: gke-metrics-agent-lvdll
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: gke-metrics-agent
      uid: 1a1c670f-3cbc-4b19-ac15-18937ff77577
    resourceVersion: "1751862637859839003"
    uid: 80ad5a22-08c9-4c7f-8347-af93f471cbb5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    containers:
    - command:
      - /otelsvc
      - --config=/conf/gke-metrics-agent-config.yaml
      - --metrics-prefix=
      - --log-profile=prod
      - --log-format=json
      - --metrics-addr=localhost:8200
      - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
      - --enable-uas-sink=true
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: GKE_COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: GKE_COMPONENT_NAME
        value: gke-metrics-agent
      - name: GOMAXPROCS
        value: "1"
      - name: GODEBUG
        value: memprofilerate=0
      - name: ARG1
        value: ${1}
      - name: ARG2
        value: ${2}
      - name: WINDOWS_JOB_ACTION
        value: drop
      - name: LINUX_JOB_ACTION
        value: keep
      - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
        value: "true"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /
          port: 8201
          scheme: HTTP
        initialDelaySeconds: 50
        periodSeconds: 50
        successThreshold: 1
        timeoutSeconds: 3
      name: gke-metrics-agent
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 8m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: gke-metrics-agent-config-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8zw9q
        readOnly: true
    - command:
      - /otelsvc
      - --config=/conf/core-metrics-exporter-config.yaml
      - --metrics-prefix=
      - --log-profile=prod
      - --log-format=json
      - --metrics-addr=localhost:8202
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: GKE_COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: GKE_COMPONENT_NAME
        value: core-metrics-exporter
      - name: GOMAXPROCS
        value: "1"
      - name: GODEBUG
        value: memprofilerate=0
      - name: ARG1
        value: ${1}
      - name: ARG2
        value: ${2}
      - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
        value: "true"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /
          port: 8203
          scheme: HTTP
        initialDelaySeconds: 50
        periodSeconds: 50
        successThreshold: 1
        timeoutSeconds: 3
      name: core-metrics-exporter
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 6m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: core-metrics-exporter-config-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8zw9q
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: prometheus-metrics-collector
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
      imagePullPolicy: IfNotPresent
      name: prometheus-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 80Mi
        requests:
          cpu: 10m
          memory: 45Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: prometheus-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8zw9q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: gke-metrics-agent
    serviceAccountName: gke-metrics-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: gke-metrics-agent-config
          path: gke-metrics-agent-config.yaml
        name: gke-metrics-agent-conf
      name: gke-metrics-agent-config-vol
    - configMap:
        defaultMode: 420
        items:
        - key: core-metrics-exporter-config
          path: core-metrics-exporter-config.yaml
        name: core-metrics-exporter-conf
      name: core-metrics-exporter-config-vol
    - configMap:
        defaultMode: 420
        items:
        - key: kubelet-metrics-collector-config-data
          path: kubelet-metrics-collector-config-data.textproto
        - key: containerd-metrics-collector-config-data
          path: containerd-metrics-collector-config-data.textproto
        - key: kubelet-prober-metrics-collector-config-data
          path: kubelet-prober-metrics-collector-config-data.textproto
        - key: kube-proxy-metrics-collector-config-data
          path: kube-proxy-metrics-collector-config-data.textproto
        - key: node-problem-detector-metrics-collector-config-data
          path: node-problem-detector-metrics-collector-config-data.textproto
        name: prometheus-metrics-collector-config-map
      name: prometheus-metrics-collector-config-map-vol
    - name: kube-api-access-8zw9q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:37Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e24cbeab3cbe4fbb7eca2e237eba0760f78cc1de74cdcec0f3890698491675b8
      image: sha256:56a22e9923a144380a4aa0a9004d855dda547f4eae88a8723f2d96d156b8371a
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
      lastState: {}
      name: core-metrics-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:29Z"
      volumeMounts:
      - mountPath: /conf
        name: core-metrics-exporter-config-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8zw9q
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://ce7e042880de4718c85dc8d272259ed421bad02872c5282722355fe9bd0a7c37
      image: sha256:56a22e9923a144380a4aa0a9004d855dda547f4eae88a8723f2d96d156b8371a
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
      lastState: {}
      name: gke-metrics-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:23Z"
      volumeMounts:
      - mountPath: /conf
        name: gke-metrics-agent-config-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8zw9q
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://509bdef4f5c9185b0057a80bab11222148f9a1db3b862e7e183fed98e62a94ea
      image: sha256:fe8c5599878f8e73e388bc2daa018e15456daab45a205942a5385b0a7b857554
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
      lastState: {}
      name: prometheus-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:37Z"
      volumeMounts:
      - mountPath: /conf
        name: prometheus-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8zw9q
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 192.168.17.15
    podIPs:
    - ip: 192.168.17.15
    qosClass: Burstable
    startTime: "2025-07-07T04:30:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: netd-combined
      components.gke.io/component-version: 12.3.1
    creationTimestamp: "2025-07-07T04:30:07Z"
    generateName: ip-masq-agent-
    labels:
      controller-revision-hash: 6966c88998
      k8s-app: ip-masq-agent
      pod-template-generation: "1"
    name: ip-masq-agent-dwzfn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ip-masq-agent
      uid: 46880e9f-274c-4035-98db-3a77c170f993
    resourceVersion: "1751862612735359015"
    uid: a62aede3-f890-4ed4-b431-6d9d3e952ce7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    containers:
    - args:
      - --v=2
      - --logtostderr=false
      - --log_file=/dev/stdout
      - --log_file_max_size=0
      - --masq-chain=IP-MASQ
      - --nomasq-all-reserved-ranges
      - --random-fully=$(GKE_INTERNAL_ip_masq_agent_random_fully)
      - --to-ports=$(GKE_INTERNAL_ip_masq_agent_to_ports)
      env:
      - name: GKE_INTERNAL_ip_masq_agent_random_fully
        valueFrom:
          configMapKeyRef:
            key: ip_masq_agent_random_fully_override
            name: netd-config
            optional: true
      - name: GKE_INTERNAL_ip_masq_agent_to_ports
        valueFrom:
          configMapKeyRef:
            key: ip_masq_agent_to_ports_override
            name: netd-config
            optional: true
      envFrom:
      - configMapRef:
          name: netd-config
        prefix: GKE_INTERNAL_
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/ip-masq-agent:v2.12.3-gke.7@sha256:03740fda40585fd458d7d9b9187d1a0d369c861ec51ed74f0962d90a01c2e9e3
      imagePullPolicy: IfNotPresent
      name: ip-masq-agent
      resources:
        requests:
          cpu: 10m
          memory: 16Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
        privileged: false
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vkgm9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      kubernetes.io/os: linux
      node.kubernetes.io/masq-agent-ds-ready: "true"
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ip-masq-agent
    serviceAccountName: ip-masq-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: config
          path: ip-masq-agent
        name: ip-masq-agent
        optional: true
      name: config
    - name: kube-api-access-vkgm9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3b37230907d68e0d87972231429dfd33391a4f1283d1b59e7c619caf7e281c0c
      image: asia.gke.gcr.io/ip-masq-agent:v2.12.3-gke.7
      imageID: asia.gcr.io/gke-release-staging/ip-masq-agent:v2.12.3-gke.7@sha256:03740fda40585fd458d7d9b9187d1a0d369c861ec51ed74f0962d90a01c2e9e3
      lastState: {}
      name: ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:11Z"
      volumeMounts:
      - mountPath: /etc/config
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vkgm9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 192.168.17.15
    podIPs:
    - ip: 192.168.17.15
    qosClass: Burstable
    startTime: "2025-07-07T04:30:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: netd-combined
      components.gke.io/component-version: 12.3.1
    creationTimestamp: "2025-07-07T04:27:54Z"
    generateName: ip-masq-agent-
    labels:
      controller-revision-hash: 6966c88998
      k8s-app: ip-masq-agent
      pod-template-generation: "1"
    name: ip-masq-agent-gj5bj
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ip-masq-agent
      uid: 46880e9f-274c-4035-98db-3a77c170f993
    resourceVersion: "1751862477953471013"
    uid: e313ace5-c52b-426b-9dd6-cada47e78f18
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    containers:
    - args:
      - --v=2
      - --logtostderr=false
      - --log_file=/dev/stdout
      - --log_file_max_size=0
      - --masq-chain=IP-MASQ
      - --nomasq-all-reserved-ranges
      - --random-fully=$(GKE_INTERNAL_ip_masq_agent_random_fully)
      - --to-ports=$(GKE_INTERNAL_ip_masq_agent_to_ports)
      env:
      - name: GKE_INTERNAL_ip_masq_agent_random_fully
        valueFrom:
          configMapKeyRef:
            key: ip_masq_agent_random_fully_override
            name: netd-config
            optional: true
      - name: GKE_INTERNAL_ip_masq_agent_to_ports
        valueFrom:
          configMapKeyRef:
            key: ip_masq_agent_to_ports_override
            name: netd-config
            optional: true
      envFrom:
      - configMapRef:
          name: netd-config
        prefix: GKE_INTERNAL_
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/ip-masq-agent:v2.12.3-gke.7@sha256:03740fda40585fd458d7d9b9187d1a0d369c861ec51ed74f0962d90a01c2e9e3
      imagePullPolicy: IfNotPresent
      name: ip-masq-agent
      resources:
        requests:
          cpu: 10m
          memory: 16Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
        privileged: false
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zq9ml
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    nodeSelector:
      kubernetes.io/os: linux
      node.kubernetes.io/masq-agent-ds-ready: "true"
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ip-masq-agent
    serviceAccountName: ip-masq-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: config
          path: ip-masq-agent
        name: ip-masq-agent
        optional: true
      name: config
    - name: kube-api-access-zq9ml
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://567509727d878561f19298713180386726fa0cb9c0f68e5cb3b338ae8a3f056e
      image: asia.gke.gcr.io/ip-masq-agent:v2.12.3-gke.7
      imageID: asia.gcr.io/gke-release-staging/ip-masq-agent:v2.12.3-gke.7@sha256:03740fda40585fd458d7d9b9187d1a0d369c861ec51ed74f0962d90a01c2e9e3
      lastState: {}
      name: ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:27:57Z"
      volumeMounts:
      - mountPath: /etc/config
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zq9ml
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.14
    hostIPs:
    - ip: 192.168.17.14
    phase: Running
    podIP: 192.168.17.14
    podIPs:
    - ip: 192.168.17.14
    qosClass: Burstable
    startTime: "2025-07-07T04:27:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: konnectivitynetworkproxy-combined
      components.gke.io/component-version: 1.13.11
    creationTimestamp: "2025-07-07T04:27:26Z"
    generateName: konnectivity-agent-8468b858cb-
    labels:
      k8s-app: konnectivity-agent
      pod-template-hash: 8468b858cb
    name: konnectivity-agent-8468b858cb-9cmp2
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-8468b858cb
      uid: a88ab23a-e3bb-4599-b04c-2a748df1b72b
    resourceVersion: "1751862703998063007"
    uid: 42037fbe-fef5-4eaa-a68b-a19a3e0d6770
  spec:
    containers:
    - args:
      - --logtostderr=true
      - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      - --proxy-server-host=192.168.17.13
      - --proxy-server-port=8132
      - --health-server-port=8093
      - --admin-server-port=8094
      - --sync-interval=5s
      - --sync-interval-cap=30s
      - --sync-forever=true
      - --probe-interval=5s
      - --keepalive-time=60s
      - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
      - --enable-profiling
      - --count-server-leases
      - --server-count-source=max
      - --v=3
      command:
      - /proxy-agent
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.1@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8093
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: konnectivity-agent
      resources:
        limits:
          memory: 125Mi
        requests:
          cpu: 10m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: konnectivity-agent-token
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zd5jl
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: konnectivity-agent-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240717_2300_RC0@sha256:d460e6b5088332f62b990f8a1f7bf6d9eca7c3f41cb974e3db493d6b0fc4ad70
      imagePullPolicy: IfNotPresent
      name: konnectivity-agent-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 30Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: konnectivity-agent-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zd5jl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: konnectivity-agent
    serviceAccountName: konnectivity-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: sandbox.gke.io/runtime
      operator: Equal
      value: gvisor
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: konnectivity-agent
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          k8s-app: konnectivity-agent
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - name: konnectivity-agent-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: system:konnectivity-server
            expirationSeconds: 3600
            path: konnectivity-agent-token
    - configMap:
        defaultMode: 420
        items:
        - key: konnectivity-agent-metrics-collector-config-data
          path: konnectivity-agent-metrics-collector-config-data.textproto
        name: konnectivity-agent-metrics-collector-config-map
      name: konnectivity-agent-metrics-collector-config-map-vol
    - name: kube-api-access-zd5jl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://027fc091f4f11604207df3f17717d1e2fc83819e2ba9303861a1bd83d6f89bb8
      image: sha256:772a355da43e12d19bc39d1ef94c6893576a0ba4a47d3b1df5b4ba4dd7bc5dbe
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
      lastState: {}
      name: konnectivity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:17Z"
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: konnectivity-agent-token
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zd5jl
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://507f5a5005bbf0fd87f1352b5ee79cf0ddcb5e7cc8624ea3fdd438f37d2ccff5
      image: sha256:73fce251be0bb71b38a642a3eed2831e5cb26e02f49023bf89fa76ce7ab2ca7d
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:d460e6b5088332f62b990f8a1f7bf6d9eca7c3f41cb974e3db493d6b0fc4ad70
      lastState: {}
      name: konnectivity-agent-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:43Z"
      volumeMounts:
      - mountPath: /conf
        name: konnectivity-agent-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zd5jl
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.74
    podIPs:
    - ip: 10.190.128.74
    qosClass: Burstable
    startTime: "2025-07-07T04:30:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: konnectivitynetworkproxy-combined
      components.gke.io/component-version: 1.13.11
    creationTimestamp: "2025-07-07T04:31:08Z"
    generateName: konnectivity-agent-8468b858cb-
    labels:
      k8s-app: konnectivity-agent
      pod-template-hash: 8468b858cb
    name: konnectivity-agent-8468b858cb-9dch4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-8468b858cb
      uid: a88ab23a-e3bb-4599-b04c-2a748df1b72b
    resourceVersion: "1751862705085823014"
    uid: a9082057-ba2e-4afe-8bb5-e2ff72fbe168
  spec:
    containers:
    - args:
      - --logtostderr=true
      - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      - --proxy-server-host=192.168.17.13
      - --proxy-server-port=8132
      - --health-server-port=8093
      - --admin-server-port=8094
      - --sync-interval=5s
      - --sync-interval-cap=30s
      - --sync-forever=true
      - --probe-interval=5s
      - --keepalive-time=60s
      - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
      - --enable-profiling
      - --count-server-leases
      - --server-count-source=max
      - --v=3
      command:
      - /proxy-agent
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.1@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8093
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: konnectivity-agent
      resources:
        limits:
          memory: 125Mi
        requests:
          cpu: 10m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: konnectivity-agent-token
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b2rbm
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: konnectivity-agent-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240717_2300_RC0@sha256:d460e6b5088332f62b990f8a1f7bf6d9eca7c3f41cb974e3db493d6b0fc4ad70
      imagePullPolicy: IfNotPresent
      name: konnectivity-agent-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 30Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: konnectivity-agent-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b2rbm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: konnectivity-agent
    serviceAccountName: konnectivity-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: sandbox.gke.io/runtime
      operator: Equal
      value: gvisor
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: konnectivity-agent
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          k8s-app: konnectivity-agent
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - name: konnectivity-agent-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: system:konnectivity-server
            expirationSeconds: 3600
            path: konnectivity-agent-token
    - configMap:
        defaultMode: 420
        items:
        - key: konnectivity-agent-metrics-collector-config-data
          path: konnectivity-agent-metrics-collector-config-data.textproto
        name: konnectivity-agent-metrics-collector-config-map
      name: konnectivity-agent-metrics-collector-config-map-vol
    - name: kube-api-access-b2rbm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://920acf3eee559c76c9285a7838fe9fb9e042d8084daab91928c94e0ce5408fb3
      image: sha256:772a355da43e12d19bc39d1ef94c6893576a0ba4a47d3b1df5b4ba4dd7bc5dbe
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
      lastState: {}
      name: konnectivity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:32Z"
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: konnectivity-agent-token
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b2rbm
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://047487f8e06c8be91d1b8cf28ef150861d9a0bcebb2a04c17a3d28ae17d29264
      image: sha256:73fce251be0bb71b38a642a3eed2831e5cb26e02f49023bf89fa76ce7ab2ca7d
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:d460e6b5088332f62b990f8a1f7bf6d9eca7c3f41cb974e3db493d6b0fc4ad70
      lastState: {}
      name: konnectivity-agent-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:44Z"
      volumeMounts:
      - mountPath: /conf
        name: konnectivity-agent-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b2rbm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.81
    podIPs:
    - ip: 10.190.128.81
    qosClass: Burstable
    startTime: "2025-07-07T04:31:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: konnectivitynetworkproxy-combined
      components.gke.io/component-version: 1.13.11
    creationTimestamp: "2025-07-07T04:27:28Z"
    generateName: konnectivity-agent-autoscaler-f4694b9fb-
    labels:
      k8s-app: konnectivity-agent-autoscaler
      pod-template-hash: f4694b9fb
    name: konnectivity-agent-autoscaler-f4694b9fb-67qws
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-autoscaler-f4694b9fb
      uid: 533d1438-36ed-433b-a1c1-1a87c75d4a3a
    resourceVersion: "1751862666011247014"
    uid: 2a25c0e1-2278-423d-b7ae-9a4279ef905e
  spec:
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=konnectivity-agent-autoscaler-config
      - --target=deployment/konnectivity-agent
      - --logtostderr=true
      - --v=2
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.1-gke.6@sha256:0c3e6735169688e40655864255ce1c680d6d2a6e6daebb1e249084eabaadcf60
      imagePullPolicy: IfNotPresent
      name: autoscaler
      resources:
        requests:
          cpu: 10m
          memory: 10M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-46vwt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: konnectivity-agent-cpha
    serviceAccountName: konnectivity-agent-cpha
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-46vwt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:05Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://389cd674afe36157106c2415ea11b5eba1f6250de6c8a3100dad17e14faa620a
      image: sha256:f8ebc81f752975ad6480c83662aa1c819efb4bfb098492fe731eab69c221898b
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler@sha256:0c3e6735169688e40655864255ce1c680d6d2a6e6daebb1e249084eabaadcf60
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:05Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-46vwt
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.68
    podIPs:
    - ip: 10.190.128.68
    qosClass: Burstable
    startTime: "2025-07-07T04:30:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: kubedns
      components.gke.io/component-version: 32.7.6
      prometheus.io/port: "10054"
      prometheus.io/scrape: "true"
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: "2025-07-07T04:26:35Z"
    generateName: kube-dns-6f7f8bdc54-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 6f7f8bdc54
    name: kube-dns-6f7f8bdc54-bw4r8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-dns-6f7f8bdc54
      uid: 5d61cccb-c74a-4420-97d6-a1d9f495d10b
    resourceVersion: "1751862722827567006"
    uid: 95cac14a-463e-4e41-bc74-a3981a5b5de2
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --domain=cluster.local.
      - --dns-port=10053
      - --config-dir=/kube-dns-config
      - --v=2
      env:
      - name: PROMETHEUS_PORT
        value: "10055"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.25.0-gke.14@sha256:c79d68a251c849be75ba251afcbb52f3b50fef8f30a88cbe3d7879617858f03c
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/kubedns
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kubedns
      ports:
      - containerPort: 10053
        name: dns-local
        protocol: UDP
      - containerPort: 10053
        name: dns-tcp-local
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 210Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /kube-dns-config
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8tm5p
        readOnly: true
    - args:
      - -v=2
      - -logtostderr
      - -configDir=/etc/k8s/dns/dnsmasq-nanny
      - -restartDnsmasq=true
      - --
      - -k
      - --cache-size=1000
      - --no-negcache
      - --dns-forward-max=1500
      - --log-facility=-
      - --server=/cluster.local/127.0.0.1#10053
      - --server=/in-addr.arpa/127.0.0.1#10053
      - --server=/ip6.arpa/127.0.0.1#10053
      - --max-ttl=30
      - --max-cache-ttl=30
      - --max-tcp-connections=200
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.25.0-gke.14@sha256:aa5d69a968cfda82b3c59c1c7b8e1a182b4ccd8c3ffcd85712deb4276dc593e8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/dnsmasq
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: dnsmasq
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      resources:
        requests:
          cpu: 150m
          memory: 20Mi
      securityContext:
        capabilities:
          add:
          - NET_BIND_SERVICE
          - SETGID
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/k8s/dns/dnsmasq-nanny
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8tm5p
        readOnly: true
    - args:
      - --v=2
      - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
      - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.25.0-gke.14@sha256:b7acd811263d51d2945324a8f77dfc0c6a9f1dc82bdd007b93026d7ca2495e36
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /metrics
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: sidecar
      ports:
      - containerPort: 10054
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8tm5p
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: kubedns-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250520_2300_RC0@sha256:71c01de8211397365c21449ba6ae01299445e1e16766fbd20bfd986b91d91241
      imagePullPolicy: IfNotPresent
      name: kubedns-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 45Mi
        requests:
          cpu: 10m
          memory: 45Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: kubedns-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8tm5p
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 65534
    serviceAccount: kube-dns
    serviceAccountName: kube-dns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-dns
        optional: true
      name: kube-dns-config
    - configMap:
        defaultMode: 420
        items:
        - key: kubedns-metrics-collector-config-data
          path: kubedns-metrics-collector-config-data.textproto
        - key: sidecar-metrics-collector-config-data
          path: sidecar-metrics-collector-config-data.textproto
        name: kubedns-metrics-collector-config-map
      name: kubedns-metrics-collector-config-map-vol
    - name: kube-api-access-8tm5p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:32:02Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:32:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:32:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://09b2cd20b3ec72f9af27adb67e761a3ff4f40c3900cea513976e7c9077fe0137
      image: sha256:0394599f46638988d070a87b3fd50b3170099b800b6e9a16df48294891bc91b2
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny@sha256:aa5d69a968cfda82b3c59c1c7b8e1a182b4ccd8c3ffcd85712deb4276dc593e8
      lastState: {}
      name: dnsmasq
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:33Z"
      volumeMounts:
      - mountPath: /etc/k8s/dns/dnsmasq-nanny
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8tm5p
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://148b5196db2d6a74215f01552959ee06d887a20a7b6da1eb1ad9c4f6175f21fd
      image: sha256:6a3e0cd6b6bbd3e7edfd60e3bdb524ccd45676ef62665e7682ddf63f603d36ec
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns@sha256:c79d68a251c849be75ba251afcbb52f3b50fef8f30a88cbe3d7879617858f03c
      lastState: {}
      name: kubedns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:56Z"
      volumeMounts:
      - mountPath: /kube-dns-config
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8tm5p
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://47ca18a3b935e0dc678ad8338018866052b967cdc6c65aced429ba7a20487f5a
      image: sha256:774772904c0402efe80cc548b5900c06d069fa625f3d1019584854ebe959ba94
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:71c01de8211397365c21449ba6ae01299445e1e16766fbd20bfd986b91d91241
      lastState: {}
      name: kubedns-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:32:02Z"
      volumeMounts:
      - mountPath: /conf
        name: kubedns-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8tm5p
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://3c52e0f2e79af39d5bf202ae57389aafc57b4ae8ac31c12cda4bdc13c785febf
      image: sha256:f4b3ddb72f0f27c7c428714680cda6a0ca337ffef20cb28bba4439d29f914a28
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar@sha256:b7acd811263d51d2945324a8f77dfc0c6a9f1dc82bdd007b93026d7ca2495e36
      lastState: {}
      name: sidecar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:56Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8tm5p
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.66
    podIPs:
    - ip: 10.190.128.66
    qosClass: Burstable
    startTime: "2025-07-07T04:30:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: kubedns
      components.gke.io/component-version: 32.7.6
      prometheus.io/port: "10054"
      prometheus.io/scrape: "true"
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: "2025-07-07T04:31:10Z"
    generateName: kube-dns-6f7f8bdc54-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 6f7f8bdc54
    name: kube-dns-6f7f8bdc54-wz92l
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-dns-6f7f8bdc54
      uid: 5d61cccb-c74a-4420-97d6-a1d9f495d10b
    resourceVersion: "1751862722709871015"
    uid: 208215c5-7cc3-46e9-a9cf-2828f8817b19
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --domain=cluster.local.
      - --dns-port=10053
      - --config-dir=/kube-dns-config
      - --v=2
      env:
      - name: PROMETHEUS_PORT
        value: "10055"
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.25.0-gke.14@sha256:c79d68a251c849be75ba251afcbb52f3b50fef8f30a88cbe3d7879617858f03c
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/kubedns
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kubedns
      ports:
      - containerPort: 10053
        name: dns-local
        protocol: UDP
      - containerPort: 10053
        name: dns-tcp-local
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 210Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /kube-dns-config
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tmfhm
        readOnly: true
    - args:
      - -v=2
      - -logtostderr
      - -configDir=/etc/k8s/dns/dnsmasq-nanny
      - -restartDnsmasq=true
      - --
      - -k
      - --cache-size=1000
      - --no-negcache
      - --dns-forward-max=1500
      - --log-facility=-
      - --server=/cluster.local/127.0.0.1#10053
      - --server=/in-addr.arpa/127.0.0.1#10053
      - --server=/ip6.arpa/127.0.0.1#10053
      - --max-ttl=30
      - --max-cache-ttl=30
      - --max-tcp-connections=200
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.25.0-gke.14@sha256:aa5d69a968cfda82b3c59c1c7b8e1a182b4ccd8c3ffcd85712deb4276dc593e8
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/dnsmasq
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: dnsmasq
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      resources:
        requests:
          cpu: 150m
          memory: 20Mi
      securityContext:
        capabilities:
          add:
          - NET_BIND_SERVICE
          - SETGID
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/k8s/dns/dnsmasq-nanny
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tmfhm
        readOnly: true
    - args:
      - --v=2
      - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
      - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.25.0-gke.14@sha256:b7acd811263d51d2945324a8f77dfc0c6a9f1dc82bdd007b93026d7ca2495e36
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /metrics
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: sidecar
      ports:
      - containerPort: 10054
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tmfhm
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: kubedns-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250520_2300_RC0@sha256:71c01de8211397365c21449ba6ae01299445e1e16766fbd20bfd986b91d91241
      imagePullPolicy: IfNotPresent
      name: kubedns-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 45Mi
        requests:
          cpu: 10m
          memory: 45Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: kubedns-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tmfhm
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 65534
    serviceAccount: kube-dns
    serviceAccountName: kube-dns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-dns
        optional: true
      name: kube-dns-config
    - configMap:
        defaultMode: 420
        items:
        - key: kubedns-metrics-collector-config-data
          path: kubedns-metrics-collector-config-data.textproto
        - key: sidecar-metrics-collector-config-data
          path: sidecar-metrics-collector-config-data.textproto
        name: kubedns-metrics-collector-config-map
      name: kubedns-metrics-collector-config-map-vol
    - name: kube-api-access-tmfhm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:32:02Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:32:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:32:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://57d33a27638c6f32c051d6f34d7101cd445d99d91f5b9a666529a6248efbe757
      image: sha256:0394599f46638988d070a87b3fd50b3170099b800b6e9a16df48294891bc91b2
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny@sha256:aa5d69a968cfda82b3c59c1c7b8e1a182b4ccd8c3ffcd85712deb4276dc593e8
      lastState: {}
      name: dnsmasq
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:39Z"
      volumeMounts:
      - mountPath: /etc/k8s/dns/dnsmasq-nanny
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tmfhm
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://36fcfd1a526cc0cf2208842fd2ba6d6fd43e7dee2df5588dd6b16ed19b3f5620
      image: sha256:6a3e0cd6b6bbd3e7edfd60e3bdb524ccd45676ef62665e7682ddf63f603d36ec
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns@sha256:c79d68a251c849be75ba251afcbb52f3b50fef8f30a88cbe3d7879617858f03c
      lastState: {}
      name: kubedns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:13Z"
      volumeMounts:
      - mountPath: /kube-dns-config
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tmfhm
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://82f501485f93025cfe48be464a181b15b28748f25129eb0bc814103262fb3005
      image: sha256:774772904c0402efe80cc548b5900c06d069fa625f3d1019584854ebe959ba94
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:71c01de8211397365c21449ba6ae01299445e1e16766fbd20bfd986b91d91241
      lastState: {}
      name: kubedns-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:32:02Z"
      volumeMounts:
      - mountPath: /conf
        name: kubedns-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tmfhm
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://d20c0f2a90db4beaca22c976eb0b0b9ea529da3ca6e395ec602031b481d1681e
      image: sha256:f4b3ddb72f0f27c7c428714680cda6a0ca337ffef20cb28bba4439d29f914a28
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar@sha256:b7acd811263d51d2945324a8f77dfc0c6a9f1dc82bdd007b93026d7ca2495e36
      lastState: {}
      name: sidecar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:56Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tmfhm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.82
    podIPs:
    - ip: 10.190.128.82
    qosClass: Burstable
    startTime: "2025-07-07T04:31:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: kubedns
      components.gke.io/component-version: 32.7.6
    creationTimestamp: "2025-07-07T04:27:30Z"
    generateName: kube-dns-autoscaler-5548979c6-
    labels:
      k8s-app: kube-dns-autoscaler
      pod-template-hash: 5548979c6
    name: kube-dns-autoscaler-5548979c6-666jn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-dns-autoscaler-5548979c6
      uid: 86822b8f-6e02-4646-bb18-e393accd0e66
    resourceVersion: "1751862668068911006"
    uid: 9465d6f3-6bfd-445b-bb79-d7ef4989fed9
  spec:
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=kube-dns-autoscaler
      - --target=Deployment/kube-dns
      - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"includeUnschedulableNodes":true}}
      - --logtostderr=true
      - --v=2
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.10.2-gke.7@sha256:7b26154ea8bcc71d07c5db1e6ee1e86aa89146dbbc07f22e1a18a1c6f4aee87e
      imagePullPolicy: IfNotPresent
      name: autoscaler
      resources:
        requests:
          cpu: 20m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jf6t8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 65534
    serviceAccount: kube-dns-autoscaler
    serviceAccountName: kube-dns-autoscaler
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jf6t8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:08Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7b89601b0e20667af97472e8c2699c56553be3e13c2a15b51e7582c4ac22706a
      image: sha256:9b4275d49068f262083b910c097d445ae6146962100d15c53667be47c453cfef
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler@sha256:7b26154ea8bcc71d07c5db1e6ee1e86aa89146dbbc07f22e1a18a1c6f4aee87e
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:07Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jf6t8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.70
    podIPs:
    - ip: 10.190.128.70
    qosClass: Burstable
    startTime: "2025-07-07T04:30:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: l7-lb-controller-combined
      components.gke.io/component-version: 1.34.2-gke.0
    creationTimestamp: "2025-07-07T04:27:33Z"
    generateName: l7-default-backend-c74968c4b-
    labels:
      k8s-app: glbc
      name: glbc
      pod-template-hash: c74968c4b
    name: l7-default-backend-c74968c4b-llqtw
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: l7-default-backend-c74968c4b
      uid: 7ee9f7a8-74ea-4506-94ba-4c6960d5ef7b
    resourceVersion: "1751862669078303003"
    uid: 9db08f7c-e213-42dc-95b7-157b326eec52
  spec:
    automountServiceAccountToken: false
    containers:
    - image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics:v1.34.2@sha256:79870c8c149fd62f93caa1fb33dcc20d0a13e2badd3f74775c1cf82ec5e5b2b2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: default-http-backend
      ports:
      - containerPort: 8080
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7194c0b38f5ae44b8fc5e297f6f4b2501d749d870a19d176289543e7064e3e42
      image: sha256:fae41dfbf4abc3760fa32c1f4e07761498f88079260f3059984a7f4a46bd638b
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics@sha256:79870c8c149fd62f93caa1fb33dcc20d0a13e2badd3f74775c1cf82ec5e5b2b2
      lastState: {}
      name: default-http-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:08Z"
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.69
    podIPs:
    - ip: 10.190.128.69
    qosClass: Burstable
    startTime: "2025-07-07T04:30:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: metrics-server
      components.gke.io/component-version: 1.32.2-gke.3
    creationTimestamp: "2025-07-07T04:27:51Z"
    generateName: metrics-server-v1.32.2-74cf94946d-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 74cf94946d
      version: v1.32.2
    name: metrics-server-v1.32.2-74cf94946d-gmnfm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-v1.32.2-74cf94946d
      uid: 8def4ae1-0470-4797-a64b-8aa36c06673c
    resourceVersion: "1751862854702655013"
    uid: 9a890804-ff62-47d7-a0ca-3d88e1b440cb
  spec:
    containers:
    - command:
      - /metrics-server
      - --metric-resolution=30s
      - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
      - --cert-dir=/tmp
      - --secure-port=10250
      - --kubelet-allow-working-set-bytes-zero=false
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.41@sha256:beeec177afb527fe8d22ebaebdcf41d8928f74e0d35fa51cece2ca8a1ef3fe65
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        initialDelaySeconds: 50
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 10250
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        initialDelaySeconds: 50
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 43m
          memory: 55Mi
        requests:
          cpu: 43m
          memory: 55Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jqkg2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: metrics-server-config
      name: metrics-server-config-volume
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-jqkg2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:34:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:34:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://aeeb4a4e5ece95762396c5bbc3fbde65a1a3b0b2d92b7fc9da8514b1c6eb6d36
      image: sha256:a7b04b6291c65a1b590e32aa6b7298b44b57e466ab51781c45d3422456d2918a
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server@sha256:beeec177afb527fe8d22ebaebdcf41d8928f74e0d35fa51cece2ca8a1ef3fe65
      lastState:
        terminated:
          containerID: containerd://6176a26c44e677385350b9d78ccf49ba1d96a34c96ddb7d06a74cf1605d7b794
          exitCode: 0
          finishedAt: "2025-07-07T04:33:11Z"
          reason: Completed
          startedAt: "2025-07-07T04:31:20Z"
      name: metrics-server
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:33:12Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jqkg2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.76
    podIPs:
    - ip: 10.190.128.76
    qosClass: Guaranteed
    startTime: "2025-07-07T04:30:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: netd-combined
      components.gke.io/component-version: 12.3.1
    creationTimestamp: "2025-07-07T04:27:52Z"
    generateName: netd-
    labels:
      controller-revision-hash: 7444bb8868
      k8s-app: netd
      pod-template-generation: "1"
    name: netd-qh7cq
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: netd
      uid: 9555349e-738c-43eb-a682-d532bc8df67c
    resourceVersion: "1751862477877999003"
    uid: 12357c8c-111c-4626-b8a5-40ab9f7b174b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    containers:
    - args:
      - --enable-policy-routing=$(ENABLE_POLICY_ROUTING)
      - --enable-source-valid-mark=$(ENABLE_SOURCE_VALID_MARK)
      - --exclude-dns=$(EXCLUDE_DNS)
      - --logtostderr
      - --reconcile-interval-seconds=$(RECONCILE_INTERVAL_SECONDS)
      - --metrics-collectors=$(METRICS_COLLECTORS)
      - --metrics-address=$(METRICS_ADDRESS)
      - --stack-type=$(STACK_TYPE)
      env:
      - name: ENABLE_POLICY_ROUTING
        value: "true"
      - name: ENABLE_SOURCE_VALID_MARK
        value: "false"
      - name: EXCLUDE_DNS
        value: "false"
      - name: RECONCILE_INTERVAL_SECONDS
        valueFrom:
          configMapKeyRef:
            key: reconcile_interval_seconds
            name: netd-config
      - name: METRICS_COLLECTORS
        valueFrom:
          configMapKeyRef:
            key: metrics_collectors
            name: networking-metrics-config
      - name: METRICS_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: metrics_address
            name: networking-metrics-config
      - name: STACK_TYPE
        valueFrom:
          configMapKeyRef:
            key: stack_type
            name: networking-metrics-config
      - name: CURRENT_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/netd:v0.9.8-gke.3@sha256:a033bb89bd3a0550cb000e3d26c22bf3108c3165100269e08fece6c1d8398457
      imagePullPolicy: IfNotPresent
      name: netd
      resources:
        requests:
          cpu: 2m
          memory: 30Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/var/lib/cni/networks/gke-pod-network
        name: gke-pod-network
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wq5cl
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/netd-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: METRICS_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: metrics_address
            name: networking-metrics-config
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: netd-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250219_2300_RC0@sha256:417803914b2912d9d64e2df7b9cfc8770675076ed912b3ec1f52a0e4104f6f5f
      imagePullPolicy: IfNotPresent
      name: netd-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: netd-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wq5cl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - env:
      - name: MIGRATE_TO_DPV2
        value: "false"
      - name: CNI_SPEC_TEMPLATE
        valueFrom:
          configMapKeyRef:
            key: cni_spec_template
            name: netd-config
      - name: CNI_SPEC_NAME
        valueFrom:
          configMapKeyRef:
            key: cni_spec_name
            name: netd-config
      - name: CNI_SPEC_IPV6_ROUTE
        valueFrom:
          configMapKeyRef:
            key: cni_spec_ipv6_route
            name: netd-config
      - name: ENABLE_CALICO_NETWORK_POLICY
        valueFrom:
          configMapKeyRef:
            key: enable_calico_network_policy
            name: netd-config
      - name: WRITE_CALICO_CONFIG_FILE
        value: "false"
      - name: ENABLE_IPV6
        valueFrom:
          configMapKeyRef:
            key: enable_ipv6
            name: netd-config
      - name: ENABLE_CILIUM_PLUGIN
        valueFrom:
          configMapKeyRef:
            key: enable_cilium_plugin
            name: netd-config
      - name: ISTIO_CNI_CONFIG
        valueFrom:
          configMapKeyRef:
            key: cni_network_config
            name: istio-cni-plugin-config
            optional: true
      - name: KUBERNETES_SERVICE_HOST
        valueFrom:
          configMapKeyRef:
            key: master_ip
            name: netd-config
      - name: CILIUM_CHAINING_MODE
        valueFrom:
          configMapKeyRef:
            key: cilium_chaining_mode
            name: netd-config
      - name: CURRENT_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CILIUM_FAST_START_NAMESPACES
        valueFrom:
          configMapKeyRef:
            key: fast-start-namespaces
            name: dpv2-fast-start-config
            optional: true
      - name: RUN_CNI_WATCHDOG
        value: "true"
      - name: CILIUM_WATCHDOG_SUCCESS_WAIT
        valueFrom:
          configMapKeyRef:
            key: cilium_watchdog_success_wait_seconds
            name: netd-config
      - name: CILIUM_WATCHDOG_FAILURE_RETRY
        valueFrom:
          configMapKeyRef:
            key: cilium_watchdog_failure_retry_seconds
            name: netd-config
      - name: CILIUM_WATCHDOG_FAST_START_WAIT
        valueFrom:
          configMapKeyRef:
            key: cilium_watchdog_fast_start_wait_seconds
            name: netd-config
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/netd-init:v0.9.8-gke.3@sha256:3fed6ef6b5e3bacdb8f0374760f032d66e02edf4121f9797bb5898174b4e701e
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
      restartPolicy: Always
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/home/kubernetes/bin
        name: kubernetes-bin
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wq5cl
        readOnly: true
    nodeName: gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: netd
    serviceAccountName: netd
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/cni/net.d
        type: Directory
      name: cni-net-dir
    - hostPath:
        path: /home/kubernetes/bin
        type: Directory
      name: kubernetes-bin
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /var/lib/cni/networks/gke-pod-network
        type: DirectoryOrCreate
      name: gke-pod-network
    - configMap:
        defaultMode: 420
        items:
        - key: netd-metrics-collector-config-data
          path: netd-metrics-collector-config-data.textproto
        name: netd-metrics-collector-config-map
      name: netd-metrics-collector-config-map-vol
    - name: kube-api-access-wq5cl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:54Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:27:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://28f13a0a85ff31a0e1b5a4b686511e12fd7a78d3c9277be12a6e7d3025f4c0ce
      image: asia.gke.gcr.io/netd:v0.9.8-gke.3
      imageID: asia.gcr.io/gke-release-staging/netd:v0.9.8-gke.3@sha256:a033bb89bd3a0550cb000e3d26c22bf3108c3165100269e08fece6c1d8398457
      lastState: {}
      name: netd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:27:55Z"
      volumeMounts:
      - mountPath: /host/var/lib/cni/networks/gke-pod-network
        name: gke-pod-network
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wq5cl
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://fd5fc9819acc3796921525702d816fb0bbfb8001284689e1eb9dd4e3e2788404
      image: asia.gke.gcr.io/gke-metrics-collector:20250219_2300_RC0
      imageID: asia.gcr.io/gke-release-staging/gke-metrics-collector:20250219_2300_RC0@sha256:417803914b2912d9d64e2df7b9cfc8770675076ed912b3ec1f52a0e4104f6f5f
      lastState: {}
      name: netd-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:27:56Z"
      volumeMounts:
      - mountPath: /conf
        name: netd-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wq5cl
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.14
    hostIPs:
    - ip: 192.168.17.14
    initContainerStatuses:
    - containerID: containerd://d4f45d12c4cafa297eea9c54addc0e3f238699fe2a4599789017bdb2aa0d7bf8
      image: asia.gke.gcr.io/netd-init:v0.9.8-gke.3
      imageID: asia.gcr.io/gke-release-staging/netd-init:v0.9.8-gke.3@sha256:3fed6ef6b5e3bacdb8f0374760f032d66e02edf4121f9797bb5898174b4e701e
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:27:54Z"
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/home/kubernetes/bin
        name: kubernetes-bin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wq5cl
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 192.168.17.14
    podIPs:
    - ip: 192.168.17.14
    qosClass: Burstable
    startTime: "2025-07-07T04:27:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: netd-combined
      components.gke.io/component-version: 12.3.1
    creationTimestamp: "2025-07-07T04:30:08Z"
    generateName: netd-
    labels:
      controller-revision-hash: 7444bb8868
      k8s-app: netd
      pod-template-generation: "1"
    name: netd-v5zjc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: netd
      uid: 9555349e-738c-43eb-a682-d532bc8df67c
    resourceVersion: "1751862630720255004"
    uid: 8373d228-21f7-42b3-aba7-23addd787ce9
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    containers:
    - args:
      - --enable-policy-routing=$(ENABLE_POLICY_ROUTING)
      - --enable-source-valid-mark=$(ENABLE_SOURCE_VALID_MARK)
      - --exclude-dns=$(EXCLUDE_DNS)
      - --logtostderr
      - --reconcile-interval-seconds=$(RECONCILE_INTERVAL_SECONDS)
      - --metrics-collectors=$(METRICS_COLLECTORS)
      - --metrics-address=$(METRICS_ADDRESS)
      - --stack-type=$(STACK_TYPE)
      env:
      - name: ENABLE_POLICY_ROUTING
        value: "true"
      - name: ENABLE_SOURCE_VALID_MARK
        value: "false"
      - name: EXCLUDE_DNS
        value: "false"
      - name: RECONCILE_INTERVAL_SECONDS
        valueFrom:
          configMapKeyRef:
            key: reconcile_interval_seconds
            name: netd-config
      - name: METRICS_COLLECTORS
        valueFrom:
          configMapKeyRef:
            key: metrics_collectors
            name: networking-metrics-config
      - name: METRICS_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: metrics_address
            name: networking-metrics-config
      - name: STACK_TYPE
        valueFrom:
          configMapKeyRef:
            key: stack_type
            name: networking-metrics-config
      - name: CURRENT_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/netd:v0.9.8-gke.3@sha256:a033bb89bd3a0550cb000e3d26c22bf3108c3165100269e08fece6c1d8398457
      imagePullPolicy: IfNotPresent
      name: netd
      resources:
        requests:
          cpu: 2m
          memory: 30Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/var/lib/cni/networks/gke-pod-network
        name: gke-pod-network
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wnfhc
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/netd-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: METRICS_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: metrics_address
            name: networking-metrics-config
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: netd-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250219_2300_RC0@sha256:417803914b2912d9d64e2df7b9cfc8770675076ed912b3ec1f52a0e4104f6f5f
      imagePullPolicy: IfNotPresent
      name: netd-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: netd-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wnfhc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - env:
      - name: MIGRATE_TO_DPV2
        value: "false"
      - name: CNI_SPEC_TEMPLATE
        valueFrom:
          configMapKeyRef:
            key: cni_spec_template
            name: netd-config
      - name: CNI_SPEC_NAME
        valueFrom:
          configMapKeyRef:
            key: cni_spec_name
            name: netd-config
      - name: CNI_SPEC_IPV6_ROUTE
        valueFrom:
          configMapKeyRef:
            key: cni_spec_ipv6_route
            name: netd-config
      - name: ENABLE_CALICO_NETWORK_POLICY
        valueFrom:
          configMapKeyRef:
            key: enable_calico_network_policy
            name: netd-config
      - name: WRITE_CALICO_CONFIG_FILE
        value: "false"
      - name: ENABLE_IPV6
        valueFrom:
          configMapKeyRef:
            key: enable_ipv6
            name: netd-config
      - name: ENABLE_CILIUM_PLUGIN
        valueFrom:
          configMapKeyRef:
            key: enable_cilium_plugin
            name: netd-config
      - name: ISTIO_CNI_CONFIG
        valueFrom:
          configMapKeyRef:
            key: cni_network_config
            name: istio-cni-plugin-config
            optional: true
      - name: KUBERNETES_SERVICE_HOST
        valueFrom:
          configMapKeyRef:
            key: master_ip
            name: netd-config
      - name: CILIUM_CHAINING_MODE
        valueFrom:
          configMapKeyRef:
            key: cilium_chaining_mode
            name: netd-config
      - name: CURRENT_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CILIUM_FAST_START_NAMESPACES
        valueFrom:
          configMapKeyRef:
            key: fast-start-namespaces
            name: dpv2-fast-start-config
            optional: true
      - name: RUN_CNI_WATCHDOG
        value: "true"
      - name: CILIUM_WATCHDOG_SUCCESS_WAIT
        valueFrom:
          configMapKeyRef:
            key: cilium_watchdog_success_wait_seconds
            name: netd-config
      - name: CILIUM_WATCHDOG_FAILURE_RETRY
        valueFrom:
          configMapKeyRef:
            key: cilium_watchdog_failure_retry_seconds
            name: netd-config
      - name: CILIUM_WATCHDOG_FAST_START_WAIT
        valueFrom:
          configMapKeyRef:
            key: cilium_watchdog_fast_start_wait_seconds
            name: netd-config
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/netd-init:v0.9.8-gke.3@sha256:3fed6ef6b5e3bacdb8f0374760f032d66e02edf4121f9797bb5898174b4e701e
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
      restartPolicy: Always
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/home/kubernetes/bin
        name: kubernetes-bin
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wnfhc
        readOnly: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: netd
    serviceAccountName: netd
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/cni/net.d
        type: Directory
      name: cni-net-dir
    - hostPath:
        path: /home/kubernetes/bin
        type: Directory
      name: kubernetes-bin
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /var/lib/cni/networks/gke-pod-network
        type: DirectoryOrCreate
      name: gke-pod-network
    - configMap:
        defaultMode: 420
        items:
        - key: netd-metrics-collector-config-data
          path: netd-metrics-collector-config-data.textproto
        name: netd-metrics-collector-config-map
      name: netd-metrics-collector-config-map-vol
    - name: kube-api-access-wnfhc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://322d0012044133237201f0101dbd7c3681910f6deed1b2550c46ce65b7c3c726
      image: asia.gke.gcr.io/netd:v0.9.8-gke.3
      imageID: asia.gcr.io/gke-release-staging/netd:v0.9.8-gke.3@sha256:a033bb89bd3a0550cb000e3d26c22bf3108c3165100269e08fece6c1d8398457
      lastState: {}
      name: netd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:23Z"
      volumeMounts:
      - mountPath: /host/var/lib/cni/networks/gke-pod-network
        name: gke-pod-network
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wnfhc
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://cf50591a04bc05fb389ab936579c5bd7e9305c66476348f730a6019c19ff0f7b
      image: asia.gke.gcr.io/gke-metrics-collector:20250219_2300_RC0
      imageID: asia.gcr.io/gke-release-staging/gke-metrics-collector:20250219_2300_RC0@sha256:417803914b2912d9d64e2df7b9cfc8770675076ed912b3ec1f52a0e4104f6f5f
      lastState: {}
      name: netd-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:29Z"
      volumeMounts:
      - mountPath: /conf
        name: netd-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wnfhc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    initContainerStatuses:
    - containerID: containerd://c158bc2e3b7ae6d0377fbec86e1d2d1924946bfe1f88446237f25f3f099e3d15
      image: asia.gke.gcr.io/netd-init:v0.9.8-gke.3
      imageID: asia.gcr.io/gke-release-staging/netd-init:v0.9.8-gke.3@sha256:3fed6ef6b5e3bacdb8f0374760f032d66e02edf4121f9797bb5898174b4e701e
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:16Z"
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/home/kubernetes/bin
        name: kubernetes-bin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wnfhc
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 192.168.17.15
    podIPs:
    - ip: 192.168.17.15
    qosClass: Burstable
    startTime: "2025-07-07T04:30:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      components.gke.io/component-name: nodelocaldns
      components.gke.io/component-version: 32.3.3
      prometheus.io/port: "9253"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-07-07T04:30:07Z"
    generateName: node-local-dns-
    labels:
      controller-revision-hash: 54775d4675
      k8s-app: node-local-dns
      networking.gke.io/dns-provider: cloud-dns
      pod-template-generation: "1"
    name: node-local-dns-7cg9w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-local-dns
      uid: 9ff3105a-26b9-4160-bf69-eb664dca4ca1
    resourceVersion: "1751862628645727014"
    uid: 21e96604-df9e-4eeb-ad2b-5d0a5ed01557
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    containers:
    - args:
      - -localip
      - 169.254.20.10,34.118.224.10
      - -conf
      - /etc/Corefile
      - -kubednscm
      - /etc/kube-dns
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-node-cache:1.25.0-gke.14@sha256:2f435898ee4835ca55ce755401f17c718d7ac6b9d8778fb1b5989e304b08487c
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 169.254.20.10
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: node-cache
      ports:
      - containerPort: 53
        hostPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        hostPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9253
        hostPort: 9253
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 25m
          memory: 20Mi
      securityContext:
        capabilities:
          add:
          - NET_BIND_SERVICE
          - NET_ADMIN
          - NET_RAW
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /etc/coredns
        name: config-volume
      - mountPath: /etc/kube-dns
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fhqcn
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/nodelocaldns-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: nodelocaldns-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250515_2300_RC0@sha256:43aa8ca949c6f716e9bc8aee1fb6019b291145633e8bb4b9c1de4619b5d8c78e
      imagePullPolicy: IfNotPresent
      name: nodelocaldns-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: nodelocaldns-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fhqcn
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      addon.gke.io/node-local-dns-ds-ready: "true"
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: node-local-dns
    serviceAccountName: node-local-dns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - configMap:
        defaultMode: 420
        name: kube-dns
        optional: true
      name: kube-dns-config
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile.base
        name: node-local-dns
      name: config-volume
    - configMap:
        defaultMode: 420
        items:
        - key: nodelocaldns-metrics-collector-config-data
          path: nodelocaldns-metrics-collector-config-data.textproto
        name: nodelocaldns-metrics-collector-config-map
      name: nodelocaldns-metrics-collector-config-map-vol
    - name: kube-api-access-fhqcn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:28Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://07f133b536548df814efc56acfdc08d4f2322f2543cca44accdc5c54316f2857
      image: sha256:09e73906b796a385164c84e482eb9ccf168eee229728c622951edf2c10ba441b
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-node-cache@sha256:2f435898ee4835ca55ce755401f17c718d7ac6b9d8778fb1b5989e304b08487c
      lastState: {}
      name: node-cache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:12Z"
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /etc/coredns
        name: config-volume
      - mountPath: /etc/kube-dns
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fhqcn
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://0fd6e1b71d09272eda3a8b959e03d39b085298d4b05426550d2d8a97a0da680b
      image: sha256:87ad533627d770e635c487cb5d9618f3b2e151997a194c2359cc8c88705deed1
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:43aa8ca949c6f716e9bc8aee1fb6019b291145633e8bb4b9c1de4619b5d8c78e
      lastState: {}
      name: nodelocaldns-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:30:26Z"
      volumeMounts:
      - mountPath: /conf
        name: nodelocaldns-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fhqcn
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 192.168.17.15
    podIPs:
    - ip: 192.168.17.15
    qosClass: Burstable
    startTime: "2025-07-07T04:30:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      components.gke.io/component-name: nodelocaldns
      components.gke.io/component-version: 32.3.3
      prometheus.io/port: "9253"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-07-07T04:28:02Z"
    generateName: node-local-dns-
    labels:
      controller-revision-hash: 54775d4675
      k8s-app: node-local-dns
      networking.gke.io/dns-provider: cloud-dns
      pod-template-generation: "1"
    name: node-local-dns-d9mdl
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-local-dns
      uid: 9ff3105a-26b9-4160-bf69-eb664dca4ca1
    resourceVersion: "1751862723911935006"
    uid: be54b799-839f-489a-a3e4-dcef63dc2375
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    containers:
    - args:
      - -localip
      - 169.254.20.10,34.118.224.10
      - -conf
      - /etc/Corefile
      - -kubednscm
      - /etc/kube-dns
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-node-cache:1.25.0-gke.14@sha256:2f435898ee4835ca55ce755401f17c718d7ac6b9d8778fb1b5989e304b08487c
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 169.254.20.10
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: node-cache
      ports:
      - containerPort: 53
        hostPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        hostPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9253
        hostPort: 9253
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 25m
          memory: 20Mi
      securityContext:
        capabilities:
          add:
          - NET_BIND_SERVICE
          - NET_ADMIN
          - NET_RAW
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /etc/coredns
        name: config-volume
      - mountPath: /etc/kube-dns
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cmzwg
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/nodelocaldns-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "388364419893"
      - name: LOCATION
        value: asia-south1
      - name: CLUSTER_NAME
        value: poc-gke-autopilot
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: nodelocaldns-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250515_2300_RC0@sha256:43aa8ca949c6f716e9bc8aee1fb6019b291145633e8bb4b9c1de4619b5d8c78e
      imagePullPolicy: IfNotPresent
      name: nodelocaldns-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: nodelocaldns-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cmzwg
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    nodeSelector:
      addon.gke.io/node-local-dns-ds-ready: "true"
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: node-local-dns
    serviceAccountName: node-local-dns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - configMap:
        defaultMode: 420
        name: kube-dns
        optional: true
      name: kube-dns-config
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile.base
        name: node-local-dns
      name: config-volume
    - configMap:
        defaultMode: 420
        items:
        - key: nodelocaldns-metrics-collector-config-data
          path: nodelocaldns-metrics-collector-config-data.textproto
        name: nodelocaldns-metrics-collector-config-map
      name: nodelocaldns-metrics-collector-config-map-vol
    - name: kube-api-access-cmzwg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:18Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9877a7c357317bc2902c0068750a0ca324fa0993345d480dc23b392c3215333a
      image: sha256:09e73906b796a385164c84e482eb9ccf168eee229728c622951edf2c10ba441b
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-node-cache@sha256:2f435898ee4835ca55ce755401f17c718d7ac6b9d8778fb1b5989e304b08487c
      lastState: {}
      name: node-cache
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:32:03Z"
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /etc/coredns
        name: config-volume
      - mountPath: /etc/kube-dns
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cmzwg
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://d671655d6e040ce3239d0a6445f70a90116f6df722af778a4d7b9438ffc9ff20
      image: sha256:87ad533627d770e635c487cb5d9618f3b2e151997a194c2359cc8c88705deed1
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:43aa8ca949c6f716e9bc8aee1fb6019b291145633e8bb4b9c1de4619b5d8c78e
      lastState: {}
      name: nodelocaldns-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:28:17Z"
      volumeMounts:
      - mountPath: /conf
        name: nodelocaldns-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cmzwg
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.14
    hostIPs:
    - ip: 192.168.17.14
    phase: Running
    podIP: 192.168.17.14
    podIPs:
    - ip: 192.168.17.14
    qosClass: Burstable
    startTime: "2025-07-07T04:28:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: parallelstorecsi
      components.gke.io/component-version: 0.4.27
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-07-07T04:28:07Z"
    generateName: parallelstore-csi-node-
    labels:
      controller-revision-hash: 5d95c8c8cb
      k8s-app: parallelstore-csi-driver
      pod-template-generation: "1"
    name: parallelstore-csi-node-5mfvh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: parallelstore-csi-node
      uid: b7a95adf-0411-4eb2-b490-699c7adae3cc
    resourceVersion: "1751863127036175011"
    uid: e5be461e-48aa-4c21-a30d-a462e0dd27e5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    containers:
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --nodeid=$(KUBE_NODE_NAME)
      - --node=true
      - --cluster-network=devops-vpcnw
      - --network-project-id=upheld-terminus-462616-m0
      - --sidecar-image=$(SIDECAR_IMAGE)
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: SIDECAR_IMAGE
        valueFrom:
          configMapKeyRef:
            key: sidecar-image
            name: parallelstorecsi-image-config
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/parallelstore-csi-driver:v0.2.6-gke.5@sha256:b3539ef81552c8de30d399d26a4e3d43dc30cecd8f96a84cf6f75d8e217ab30b
      imagePullPolicy: Always
      name: parallelstore-csi-driver
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: socket-dir
      - mountPath: /sys
        name: host-sysfs
      - mountPath: /gke-parallelstore-tmp
        name: gke-parallelstore-tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jdvh5
        readOnly: true
    - args:
      - --v=3
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/parallelstore.csi.storage.gke.io/csi.sock
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.38@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
      imagePullPolicy: IfNotPresent
      name: csi-driver-registrar
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jdvh5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    nodeSelector:
      kubernetes.io/arch: amd64
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: parallelstore-csi-node-sa
    serviceAccountName: parallelstore-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/parallelstore.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /sys
        type: Directory
      name: host-sysfs
    - emptyDir: {}
      name: gke-parallelstore-tmp
    - name: kube-api-access-jdvh5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:38:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:38:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c48f8b6c89a9321d3dfa12b4f28f030513e3faa63135f9c814252f5385105574
      image: sha256:4b29945a5e5e6c0f0e332c2fe1575e250804b36f68f54170bb29061b1c5096d0
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
      lastState:
        terminated:
          containerID: containerd://863fac6de892131adb7b89c0108d4f189b3e3c6c135542ef5789b6568a1f1805
          exitCode: 1
          finishedAt: "2025-07-07T04:35:57Z"
          reason: Error
          startedAt: "2025-07-07T04:35:42Z"
      name: csi-driver-registrar
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:38:46Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jdvh5
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://77fed82ddb4591d8df608edca6b35fe5b71d832506ed1ddddaa3f2511565ae63
      image: sha256:c79920d060a093e16fb824bb000ad25c94f01ce3bde9cf775d85fa104d8c6a5c
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/parallelstore-csi-driver@sha256:b3539ef81552c8de30d399d26a4e3d43dc30cecd8f96a84cf6f75d8e217ab30b
      lastState: {}
      name: parallelstore-csi-driver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:29:53Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: socket-dir
      - mountPath: /sys
        name: host-sysfs
      - mountPath: /gke-parallelstore-tmp
        name: gke-parallelstore-tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jdvh5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.14
    hostIPs:
    - ip: 192.168.17.14
    phase: Running
    podIP: 10.190.128.2
    podIPs:
    - ip: 10.190.128.2
    qosClass: Burstable
    startTime: "2025-07-07T04:28:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: parallelstorecsi
      components.gke.io/component-version: 0.4.27
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-07-07T04:30:07Z"
    generateName: parallelstore-csi-node-
    labels:
      controller-revision-hash: 5d95c8c8cb
      k8s-app: parallelstore-csi-driver
      pod-template-generation: "1"
    name: parallelstore-csi-node-svnnl
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: parallelstore-csi-node
      uid: b7a95adf-0411-4eb2-b490-699c7adae3cc
    resourceVersion: "1751862742989279005"
    uid: 72a3f1e6-09bf-4242-9f01-b7b8b4176209
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    containers:
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --nodeid=$(KUBE_NODE_NAME)
      - --node=true
      - --cluster-network=devops-vpcnw
      - --network-project-id=upheld-terminus-462616-m0
      - --sidecar-image=$(SIDECAR_IMAGE)
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: SIDECAR_IMAGE
        valueFrom:
          configMapKeyRef:
            key: sidecar-image
            name: parallelstorecsi-image-config
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/parallelstore-csi-driver:v0.2.6-gke.5@sha256:b3539ef81552c8de30d399d26a4e3d43dc30cecd8f96a84cf6f75d8e217ab30b
      imagePullPolicy: Always
      name: parallelstore-csi-driver
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: socket-dir
      - mountPath: /sys
        name: host-sysfs
      - mountPath: /gke-parallelstore-tmp
        name: gke-parallelstore-tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gtwcv
        readOnly: true
    - args:
      - --v=3
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/parallelstore.csi.storage.gke.io/csi.sock
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.38@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
      imagePullPolicy: IfNotPresent
      name: csi-driver-registrar
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gtwcv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      kubernetes.io/arch: amd64
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: parallelstore-csi-node-sa
    serviceAccountName: parallelstore-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/parallelstore.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /sys
        type: Directory
      name: host-sysfs
    - emptyDir: {}
      name: gke-parallelstore-tmp
    - name: kube-api-access-gtwcv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:31:46Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:32:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:32:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://413335bbd88f3f660efaf4e2317e61c354a3893ac0cf3e9dc85e8e7c55979bc1
      image: sha256:4b29945a5e5e6c0f0e332c2fe1575e250804b36f68f54170bb29061b1c5096d0
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
      lastState:
        terminated:
          containerID: containerd://e4523f034a192dd592f604d243628d0549a65fccbb4b85650628b5dc90562992
          exitCode: 1
          finishedAt: "2025-07-07T04:32:16Z"
          reason: Error
          startedAt: "2025-07-07T04:31:45Z"
      name: csi-driver-registrar
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:32:22Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gtwcv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://e2c95b849297c4078cef40d70129e43e65af462b6d5e64900a60e4836ec49c29
      image: sha256:c79920d060a093e16fb824bb000ad25c94f01ce3bde9cf775d85fa104d8c6a5c
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/parallelstore-csi-driver@sha256:b3539ef81552c8de30d399d26a4e3d43dc30cecd8f96a84cf6f75d8e217ab30b
      lastState: {}
      name: parallelstore-csi-driver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:31:39Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: socket-dir
      - mountPath: /sys
        name: host-sysfs
      - mountPath: /gke-parallelstore-tmp
        name: gke-parallelstore-tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gtwcv
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.78
    podIPs:
    - ip: 10.190.128.78
    qosClass: Burstable
    startTime: "2025-07-07T04:30:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: pdcsi
      components.gke.io/component-version: 0.21.32
    creationTimestamp: "2025-07-07T04:28:13Z"
    generateName: pdcsi-node-
    labels:
      controller-revision-hash: 69c68ff4d5
      k8s-app: gcp-compute-persistent-disk-csi-driver
      pod-template-generation: "1"
    name: pdcsi-node-96zs7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: pdcsi-node
      uid: 39f37c83-50b5-4d27-bdb9-433f888bfc0f
    resourceVersion: "1751862840803231009"
    uid: 78221575-7d44-4c78-8a37-0cc90b92d0f9
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    containers:
    - args:
      - --v=5
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.38@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: csi-driver-registrar
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-856br
        readOnly: true
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --run-controller-service=false
      - --run-node-service=true
      - --enable-data-cache
      - --enable-data-cache=true
      - --node-name=$(KUBE_NODE_NAME)
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.17.12-gke.1@sha256:a6160af79c706f467ed565672e75e9310474d00f89da7e433665015baec33fa3
      imagePullPolicy: IfNotPresent
      name: gce-pd-driver
      resources:
        limits:
          memory: 450Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /etc/udev
        name: udev-rules-etc
      - mountPath: /lib/udev
        name: udev-rules-lib
      - mountPath: /run/udev
        name: udev-socket
      - mountPath: /sys
        name: sys
      - mountPath: /tmp
        name: tmp
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /etc/lvm
        name: lvm-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-856br
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-poc-gke-autopilot-default-pool-5d1c0701-q45d
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: pdcsi-node-sa
    serviceAccountName: pdcsi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/pd.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /etc/udev
        type: Directory
      name: udev-rules-etc
    - hostPath:
        path: /lib/udev
        type: Directory
      name: udev-rules-lib
    - hostPath:
        path: /run/udev
        type: Directory
      name: udev-socket
    - hostPath:
        path: /sys
        type: Directory
      name: sys
    - emptyDir:
        sizeLimit: 5Mi
      name: tmp
    - emptyDir:
        sizeLimit: 5Mi
      name: lvm-dir
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-856br
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:33:00Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:34:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:34:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:28:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7085b38ac46e335e6e961dd210dc95780cde50f61d739668a47fd3ecf2a373f1
      image: sha256:4b29945a5e5e6c0f0e332c2fe1575e250804b36f68f54170bb29061b1c5096d0
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
      lastState:
        terminated:
          containerID: containerd://28ef7fbde94a78457af64eeb67fd7d2f6ccf25fe77be9c9c1236eeac28d8eeed
          exitCode: 1
          finishedAt: "2025-07-07T04:33:40Z"
          reason: Error
          startedAt: "2025-07-07T04:33:08Z"
      name: csi-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:33:59Z"
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-856br
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://f9ed02091b0488c28d0410075cce9da4936dce52a6f4d6435deeb5eb54890366
      image: sha256:b4e6d9ecb7f242a8001b1cf9c1f61d2cbd82377805cdebc5fedf835a3a3ea997
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver@sha256:a6160af79c706f467ed565672e75e9310474d00f89da7e433665015baec33fa3
      lastState: {}
      name: gce-pd-driver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:32:59Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /etc/udev
        name: udev-rules-etc
      - mountPath: /lib/udev
        name: udev-rules-lib
      - mountPath: /run/udev
        name: udev-socket
      - mountPath: /sys
        name: sys
      - mountPath: /tmp
        name: tmp
      - mountPath: /lib/modules
        name: modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/lvm
        name: lvm-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-856br
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.14
    hostIPs:
    - ip: 192.168.17.14
    phase: Running
    podIP: 192.168.17.14
    podIPs:
    - ip: 192.168.17.14
    qosClass: Burstable
    startTime: "2025-07-07T04:28:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: pdcsi
      components.gke.io/component-version: 0.21.32
    creationTimestamp: "2025-07-07T04:30:08Z"
    generateName: pdcsi-node-
    labels:
      controller-revision-hash: 69c68ff4d5
      k8s-app: gcp-compute-persistent-disk-csi-driver
      pod-template-generation: "1"
    name: pdcsi-node-ccq8t
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: pdcsi-node
      uid: 39f37c83-50b5-4d27-bdb9-433f888bfc0f
    resourceVersion: "1751862772547183020"
    uid: a59470d9-8d53-453c-82fe-22eae1f6b86a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    containers:
    - args:
      - --v=5
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.38@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: csi-driver-registrar
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9dwfw
        readOnly: true
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --run-controller-service=false
      - --run-node-service=true
      - --enable-data-cache
      - --enable-data-cache=true
      - --node-name=$(KUBE_NODE_NAME)
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.17.12-gke.1@sha256:a6160af79c706f467ed565672e75e9310474d00f89da7e433665015baec33fa3
      imagePullPolicy: IfNotPresent
      name: gce-pd-driver
      resources:
        limits:
          memory: 450Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /etc/udev
        name: udev-rules-etc
      - mountPath: /lib/udev
        name: udev-rules-lib
      - mountPath: /run/udev
        name: udev-socket
      - mountPath: /sys
        name: sys
      - mountPath: /tmp
        name: tmp
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /etc/lvm
        name: lvm-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9dwfw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: pdcsi-node-sa
    serviceAccountName: pdcsi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/pd.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /etc/udev
        type: Directory
      name: udev-rules-etc
    - hostPath:
        path: /lib/udev
        type: Directory
      name: udev-rules-lib
    - hostPath:
        path: /run/udev
        type: Directory
      name: udev-socket
    - hostPath:
        path: /sys
        type: Directory
      name: sys
    - emptyDir:
        sizeLimit: 5Mi
      name: tmp
    - emptyDir:
        sizeLimit: 5Mi
      name: lvm-dir
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-9dwfw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:32:06Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:32:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:32:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:30:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6c146d5246992cdc431d402d5c47aaa4445295b051021cdd66c47778b8823da0
      image: sha256:4b29945a5e5e6c0f0e332c2fe1575e250804b36f68f54170bb29061b1c5096d0
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
      lastState:
        terminated:
          containerID: containerd://afc456225448d2fbfdf91271d1ebe24acdc33251a7685887330be80a27fa26ec
          exitCode: 1
          finishedAt: "2025-07-07T04:32:39Z"
          reason: Error
          startedAt: "2025-07-07T04:32:09Z"
      name: csi-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:32:52Z"
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9dwfw
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://74f4d2e60e0baf7459abe8a9dd6fe2e9c2a5551ca19fe390247c6b91586c9238
      image: sha256:b4e6d9ecb7f242a8001b1cf9c1f61d2cbd82377805cdebc5fedf835a3a3ea997
      imageID: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver@sha256:a6160af79c706f467ed565672e75e9310474d00f89da7e433665015baec33fa3
      lastState: {}
      name: gce-pd-driver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:32:06Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /etc/udev
        name: udev-rules-etc
      - mountPath: /lib/udev
        name: udev-rules-lib
      - mountPath: /run/udev
        name: udev-socket
      - mountPath: /sys
        name: sys
      - mountPath: /tmp
        name: tmp
      - mountPath: /lib/modules
        name: modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/lvm
        name: lvm-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9dwfw
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 192.168.17.15
    podIPs:
    - ip: 192.168.17.15
    qosClass: Burstable
    startTime: "2025-07-07T04:30:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-07-07T04:48:10Z"
    generateName: nginx-5fb97cbb55-
    labels:
      app: nginx
      pod-template-hash: 5fb97cbb55
    name: nginx-5fb97cbb55-hfcfp
    namespace: poc-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-5fb97cbb55
      uid: d392cfba-ab61-4452-8744-59f55b2f5904
    resourceVersion: "1751863765656591019"
    uid: 4b100c00-0c0c-44fc-885d-767ee68fb340
  spec:
    containers:
    - image: asia-south1-docker.pkg.dev/upheld-terminus-462616-m0/poc-images/nginx-secure:1.25
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          ephemeral-storage: 1Gi
        requests:
          cpu: 500m
          ephemeral-storage: 1Gi
          memory: 2Gi
      securityContext:
        capabilities:
          drop:
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7ddtx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-poc-gke-autopilot-pool-2-f4d1f95d-68rc
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: gke.io/optimize-utilization-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: amd64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7ddtx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:49:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:49:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:49:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:49:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-07T04:49:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a2c2a887411bdef78345fb481cc85c94632f44159ee5cbddcf2a0181d77bb7a0
      image: asia-south1-docker.pkg.dev/upheld-terminus-462616-m0/poc-images/nginx-secure:1.25
      imageID: asia-south1-docker.pkg.dev/upheld-terminus-462616-m0/poc-images/nginx-secure@sha256:160500b5179ac4c1fe0e503a0be18fda8f69483e3b45989aece8afbdf46918ae
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-07T04:49:25Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7ddtx
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.17.15
    hostIPs:
    - ip: 192.168.17.15
    phase: Running
    podIP: 10.190.128.84
    podIPs:
    - ip: 10.190.128.84
    qosClass: Burstable
    startTime: "2025-07-07T04:49:22Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-07-07T04:23:35Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "1751862215515567006"
    uid: 75996771-3f3f-4d70-8853-a3e85f9a3119
  spec:
    clusterIP: 34.118.224.1
    clusterIPs:
    - 34.118.224.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.3-gke.1
      components.gke.io/layer: addon
    creationTimestamp: "2025-07-07T04:27:40Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: alertmanager
    namespace: gke-gmp-system
    resourceVersion: "1751862460375391017"
    uid: 7a1a2159-4c3e-45e4-befd-4e5eb3a46252
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: alertmanager
      port: 9093
      protocol: TCP
      targetPort: 9093
    selector:
      app: managed-prometheus-alertmanager
      app.kubernetes.io/name: alertmanager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.3-gke.1
      components.gke.io/layer: addon
    creationTimestamp: "2025-07-07T04:27:40Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: gmp-operator
    namespace: gke-gmp-system
    resourceVersion: "1751862460997983014"
    uid: 59f6a8ea-c269-4797-b0f9-f79801406512
  spec:
    clusterIP: 34.118.232.182
    clusterIPs:
    - 34.118.232.182
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: legacy
      port: 8443
      protocol: TCP
      targetPort: webhook
    - name: webhook
      port: 443
      protocol: TCP
      targetPort: web
    selector:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.3-gke.1
      components.gke.io/layer: addon
    creationTimestamp: "2025-07-07T04:27:40Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: rule-evaluator
    namespace: gke-gmp-system
    resourceVersion: "1751862460691215000"
    uid: e9c1f247-1ad2-4f6c-bb82-b3622488b052
  spec:
    clusterIP: 34.118.236.237
    clusterIPs:
    - 34.118.236.237
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: rule-evaluator
      port: 19092
      protocol: TCP
      targetPort: 19092
    selector:
      app.kubernetes.io/name: rule-evaluator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: networkpolicy-antrea
      components.gke.io/component-version: 0.4.3
    creationTimestamp: "2025-07-07T04:27:58Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: antrea
    name: antrea
    namespace: kube-system
    resourceVersion: "1751862478507439020"
    uid: 8aff429b-e8fe-4c9c-ab1c-a233012b9662
  spec:
    clusterIP: 34.118.235.198
    clusterIPs:
    - 34.118.235.198
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: api
    selector:
      app: antrea
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: l7-lb-controller-combined
      components.gke.io/component-version: 1.34.2-gke.0
      components.gke.io/layer: addon
    creationTimestamp: "2025-07-07T04:27:33Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: glbc
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: GLBCDefaultBackend
    name: default-http-backend
    namespace: kube-system
    resourceVersion: "1751862453941535023"
    uid: c75eb564-626e-40ca-afd6-319c2efdbb30
  spec:
    clusterIP: 34.118.232.19
    clusterIPs:
    - 34.118.232.19
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 31897
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      k8s-app: glbc
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-07-07T04:26:18Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: KubeDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "1751862378238319020"
    uid: af68fcf7-b551-45dc-9243-704d8c0f0eae
  spec:
    clusterIP: 34.118.224.10
    clusterIPs:
    - 34.118.224.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: metrics-server
      components.gke.io/component-version: 1.32.2-gke.3
      components.gke.io/layer: addon
    creationTimestamp: "2025-07-07T04:27:46Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "1751862466993903011"
    uid: 19e9202b-7cc7-4842-8bdf-873c3b471d8f
  spec:
    clusterIP: 34.118.233.74
    clusterIPs:
    - 34.118.233.74
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: nginx-chart
      meta.helm.sh/release-namespace: poc-test
    creationTimestamp: "2025-07-07T04:28:17Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/managed-by: Helm
    name: nginx-service
    namespace: poc-test
    resourceVersion: "1751862539213167009"
    uid: c9e5d300-2aea-4089-8643-a7b1cb3e541c
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 34.118.230.202
    clusterIPs:
    - 34.118.230.202
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 31825
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: nginx
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 34.47.157.3
        ipMode: VIP
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:41Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: collector
    namespace: gke-gmp-system
    resourceVersion: "1751863030703279007"
    uid: 7f497a65-0287-4273-92d4-08758b583c74
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: collector
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.3-gke.1
        creationTimestamp: null
        labels:
          app: managed-prometheus-collector
          app.kubernetes.io/name: collector
          app.kubernetes.io/version: 0.15.3
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --config.file=/prometheus/config_out/config.yaml
          - --enable-feature=exemplar-storage
          - --enable-feature=google-kubernetes-secret-provider
          - --storage.tsdb.path=/prometheus/data
          - --storage.tsdb.no-lockfile
          - --gmp.storage.delete-data-on-start
          - --storage.tsdb.retention.time=30m
          - --storage.tsdb.wal-compression
          - --storage.tsdb.min-block-duration=10m
          - --storage.tsdb.max-block-duration=10m
          - --web.listen-address=:19090
          - --web.enable-lifecycle
          - --web.route-prefix=/
          - --export.user-agent-mode=gke
          - --log.format=json
          env:
          - name: GOGC
            value: "25"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus:v2.45.3-gmp.11-gke.0@sha256:3ba777873a3267c008049297c4e2292a27e7dbeebdae292f99b7af261175c54f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 19090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus
          ports:
          - containerPort: 19090
            name: prom-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 19090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 1G
            requests:
              cpu: 4m
              memory: 32M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/data
            name: storage
          - mountPath: /prometheus/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/secrets
            name: collection-secret
            readOnly: true
        - args:
          - --config-file=/prometheus/config/config.yaml
          - --config-file-output=/prometheus/config_out/config.yaml
          - --reload-url=http://127.0.0.1:19090/-/reload
          - --ready-url=http://127.0.0.1:19090/-/ready
          - --listen-address=:19091
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.3-gke.0@sha256:084a78cf04fc50523ba37639d3cac8d33a6a07de5cf641c85b9c9ef71f653d51
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19091
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config
            name: config
            readOnly: true
          - mountPath: /prometheus/config_out
            name: config-out
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - touch /prometheus/config_out/config.yaml
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250407.00_p0@sha256:b903ad51976ccd68a817f445c5b6df8bf3655bfd1b30ca989472f7a99f930fc5
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: collector
        serviceAccountName: collector
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: storage
        - configMap:
            defaultMode: 420
            name: collector
          name: config
        - emptyDir: {}
          name: config-out
        - name: collection-secret
          secret:
            defaultMode: 420
            secretName: collection
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      autopilot.gke.io/resource-adjustment: '{"input":{"initContainers":[{"name":"nvml-wait"}],"containers":[{"limits":{"memory":"350Mi"},"requests":{"cpu":"100m","memory":"350Mi"},"name":"dcgm-exporter"}]},"output":{"initContainers":[{"limits":{"ephemeral-storage":"100Mi"},"requests":{"cpu":"100m","ephemeral-storage":"100Mi","memory":"350Mi"},"name":"nvml-wait"}],"containers":[{"limits":{"ephemeral-storage":"100Mi","memory":"350Mi"},"requests":{"cpu":"100m","ephemeral-storage":"100Mi","memory":"350Mi"},"name":"dcgm-exporter"}]},"computeClassAtAdmission":"Default","modified":true}'
      autopilot.gke.io/warden-version: 32.38.0-gke.4
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app.kubernetes.io/name: gke-managed-dcgm-exporter
    name: dcgm-exporter
    namespace: gke-managed-system
    resourceVersion: "1751862442780959000"
    uid: fc4c8684-5332-4d84-ba0a-1b5df6a2ca66
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: gke-managed-dcgm-exporter
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: gpu-dcgm
          components.gke.io/component-version: 1.32.4-gke.1
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: gke-managed-dcgm-exporter
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: cloud.google.com/gke-gpu-driver-version
                  operator: In
                  values:
                  - default
                  - latest
        automountServiceAccountToken: false
        containers:
        - args:
          - --enable-dcgm-log
          - --dcgm-log-level
          - ERROR
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: DCGM_EXPORTER_KUBERNETES_GPU_ID_TYPE
            value: device-name
          - name: DCGM_EXPORTER_KUBERNETES
            value: "true"
          - name: DCGM_EXPORTER_LISTEN
            value: :9400
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/nvidia/gke-dcgm-exporter:3.3.9-3.6.1-gke.10@sha256:e2f21f4f2661322f26ff97be7953ce71ae238e8c6d0e2fa48ade0f65539aea17
          imagePullPolicy: IfNotPresent
          name: dcgm-exporter
          ports:
          - containerPort: 9400
            name: metrics
            protocol: TCP
          resources:
            limits:
              ephemeral-storage: 100Mi
              memory: 350Mi
            requests:
              cpu: 100m
              ephemeral-storage: 100Mi
              memory: 350Mi
          securityContext:
            capabilities:
              drop:
              - NET_RAW
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/dcgm-exporter
            name: dcgm-exporter-metrics
            readOnly: true
          - mountPath: /usr/local/nvidia
            name: nvidia-install-dir-host
            readOnly: true
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |
            cleanup() {
              echo "caught stop signal, exiting..."
              exit 0
            }
            trap cleanup SIGINT SIGTERM
            echo "checking for drivers"
            while true; do
              if ls "/usr/local/nvidia/lib64/libnvidia-ml.so.1" &>/dev/null; then
                echo "nvml drivers found!"
                break
              fi
              echo "waiting for nvml drivers"
              sleep 1
            done
            echo "checking for MIG partitions"
            if [[ -f "/etc/nvidia/gpu_config.json" ]]; then
              content=$(</etc/nvidia/gpu_config.json)
              if [[ -z "${content##*GPUPartitionSize*}" ]]; then
                while true; do
                  output=$(LD_LIBRARY_PATH=/usr/local/nvidia/lib64 /usr/local/nvidia/bin/nvidia-smi -L)
                  echo $output
                  if [[ -z "${output##*MIG*MIG-*}" ]]; then
                    echo "MIG partitions found, exiting"
                    break
                  fi
                  echo "waiting for MIG partitions"
                  sleep 2
                done
              else
                echo "GPUPartitionSize is empty"
              fi
            else
              echo "no gpu config"
            fi
            echo "checking for gpu-device-plugin socket"
            while true; do
              if [[ $(ls /var/lib/kubelet/device-plugins/nvidiaGPU*.sock) ]]; then
                ls -la /var/lib/kubelet/device-plugins/nvidiaGPU*.sock
                echo "gpu-device-plugin socket found, exiting"
                exit 0
              fi
              echo "waiting for gpu-device-plugin socket"
              sleep 1
            done
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250321.00_p0@sha256:7f776c36ecf7426b9d461b2b9690ff6b6c7fc1d00c78eb050da3e039d431b760
          imagePullPolicy: IfNotPresent
          name: nvml-wait
          resources:
            limits:
              ephemeral-storage: 100Mi
            requests:
              cpu: 100m
              ephemeral-storage: 100Mi
              memory: 350Mi
          securityContext:
            capabilities:
              drop:
              - NET_RAW
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/nvidia
            name: nvidia-install-dir-host
            readOnly: true
          - mountPath: /etc/nvidia
            name: nvidia-config
            readOnly: true
          - mountPath: /var/lib/kubelet/device-plugins
            name: device-plugins
            readOnly: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        volumes:
        - hostPath:
            path: /home/kubernetes/bin/nvidia
            type: Directory
          name: nvidia-install-dir-host
        - configMap:
            defaultMode: 420
            name: dcgm-exporter-metrics
          name: dcgm-exporter-metrics
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugins
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:26:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cilium
    name: anetd
    namespace: kube-system
    resourceVersion: "1751862624557039021"
    uid: 71517f30-66c4-4024-a44e-d2674a521516
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cilium
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
          components.gke.io/component-name: advanceddatapath
          components.gke.io/component-version: 32.3.32
          prometheus.io/port: "9990"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          k8s-app: cilium
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/machine-family
                  operator: NotIn
                  values:
                  - ek
        automountServiceAccountToken: false
        containers:
        - args:
          - |
            exec {BASH_XTRACEFD}>&1 && set -x

            if [[ -n "$${CILIUM_CONFIG_MAP}" ]] \
                && [[ ! -f "$${CILIUM_CONFIG_MAP}/mtu" ]] \
                && [[ -n "$${MTU_DEVICE_IP}" ]]; then
              # Get mtu of the interface which has ip address '$${MTU_DEVICE_IP}'
              mtu="$$(ip addr show to "$${MTU_DEVICE_IP}" | grep mtu | awk '{for (I=1;I<NF;I++) if ($$I == "mtu") print $$(I+1)}')"

              # Check if we could retrive a number in 'mtu'
              if [[ "$${mtu}" =~ ^[0-9]+$$ ]]; then
                mtuArg="--mtu=$${mtu}"
              fi
            fi

            exec /usr/bin/cilium-agent \
              --k8s-kubeconfig-path=/var/lib/kubelet/kubeconfig \
              --config-dir="$${CILIUM_CONFIG_MAP}" \
              $${mtuArg:-}
          command:
          - bash
          - -euc
          env:
          - name: GOPS_CONFIG_DIR
            value: /.config
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CILIUM_FLANNEL_MASTER_DEVICE
            valueFrom:
              configMapKeyRef:
                key: flannel-master-device
                name: cilium-config
                optional: true
          - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
            valueFrom:
              configMapKeyRef:
                key: flannel-uninstall-on-exit
                name: cilium-config
                optional: true
          - name: MTU_DEVICE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CILIUM_CONFIG_MAP
            value: /tmp/cilium/config-map
          - name: CILIUM_CLUSTERMESH_CONFIG
            value: /var/lib/cilium/clustermesh/
          - name: CILIUM_CNI_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cni-chaining-mode
                name: cilium-config
                optional: true
          - name: CILIUM_CUSTOM_CNI_CONF
            valueFrom:
              configMapKeyRef:
                key: custom-cni-conf
                name: cilium-config
                optional: true
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 60
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
          - containerPort: 9965
            hostPort: 9965
            name: flowmetrics
            protocol: TCP
          - containerPort: 9879
            hostPort: 9879
            name: agenthealth
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
            privileged: true
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.config
            name: gops-config-dir
          - mountPath: /sys/fs/bpf
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
          - mountPath: /host/etc/cni/net.d
            name: etc-cni-netd
          - mountPath: /var/lib/cilium/clustermesh
            name: clustermesh-secrets
            readOnly: true
          - mountPath: /tmp/cilium/config-map
            name: cilium-config-path
            readOnly: true
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/log/network
            name: network-log
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/cilium-agent-metrics-collector-config-data.textproto,/conf/cilium-agent-hubble-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: cilium-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240508_2300_RC0@sha256:1593f1e9570b99b1843cc886b723d4e291e2281fe2b9e45f565064cac379e4cf
          imagePullPolicy: IfNotPresent
          name: cilium-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: cilium-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /install-plugin.sh
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-path
        - command:
          - /init-container.sh
          env:
          - name: CILIUM_ALL_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-state
                name: cilium-config
                optional: true
          - name: CILIUM_BPF_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-bpf-state
                name: cilium-config
                optional: true
          - name: CILIUM_WAIT_BPF_MOUNT
            valueFrom:
              configMapKeyRef:
                key: wait-bpf-mount
                name: cilium-config
                optional: true
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys/fs/bpf
            mountPropagation: HostToContainer
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 1
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: gops-config-dir
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/ca-certificates.crt
            type: File
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /home/kubernetes/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
            type: DirectoryOrCreate
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/log/network
            type: DirectoryOrCreate
          name: network-log
        - name: clustermesh-secrets
          secret:
            defaultMode: 420
            optional: true
            secretName: cilium-clustermesh
        - name: cilium-config-path
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: cilium-config
            - configMap:
                name: cilium-hubble-config
            - configMap:
                name: cilium-config-emergency-override
        - configMap:
            defaultMode: 420
            items:
            - key: cilium-agent-metrics-collector-config-data
              path: cilium-agent-metrics-collector-config-data.textproto
            - key: cilium-agent-hubble-metrics-collector-config-data
              path: cilium-agent-hubble-metrics-collector-config-data.textproto
            name: cilium-agent-metrics-collector-config-map
          name: cilium-agent-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:26:23Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cilium
    name: anetd-l
    namespace: kube-system
    resourceVersion: "1751862396371839003"
    uid: 319b5b51-7ac2-4295-aca6-df455f8b75c9
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cilium
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
          components.gke.io/component-name: advanceddatapath
          components.gke.io/component-version: 32.3.32
          prometheus.io/port: "9990"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          k8s-app: cilium
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/machine-family
                  operator: In
                  values:
                  - ek
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Gt
                  values:
                  - "64"
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Lt
                  values:
                  - "257"
        automountServiceAccountToken: false
        containers:
        - args:
          - |
            exec {BASH_XTRACEFD}>&1 && set -x

            if [[ -n "$${CILIUM_CONFIG_MAP}" ]] \
                && [[ ! -f "$${CILIUM_CONFIG_MAP}/mtu" ]] \
                && [[ -n "$${MTU_DEVICE_IP}" ]]; then
              # Get mtu of the interface which has ip address '$${MTU_DEVICE_IP}'
              mtu="$$(ip addr show to "$${MTU_DEVICE_IP}" | grep mtu | awk '{for (I=1;I<NF;I++) if ($$I == "mtu") print $$(I+1)}')"

              # Check if we could retrive a number in 'mtu'
              if [[ "$${mtu}" =~ ^[0-9]+$$ ]]; then
                mtuArg="--mtu=$${mtu}"
              fi
            fi

            exec /usr/bin/cilium-agent \
              --k8s-kubeconfig-path=/var/lib/kubelet/kubeconfig \
              --config-dir="$${CILIUM_CONFIG_MAP}" \
              $${mtuArg:-}
          command:
          - bash
          - -euc
          env:
          - name: GOPS_CONFIG_DIR
            value: /.config
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CILIUM_FLANNEL_MASTER_DEVICE
            valueFrom:
              configMapKeyRef:
                key: flannel-master-device
                name: cilium-config
                optional: true
          - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
            valueFrom:
              configMapKeyRef:
                key: flannel-uninstall-on-exit
                name: cilium-config
                optional: true
          - name: MTU_DEVICE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CILIUM_CONFIG_MAP
            value: /tmp/cilium/config-map
          - name: CILIUM_CLUSTERMESH_CONFIG
            value: /var/lib/cilium/clustermesh/
          - name: CILIUM_CNI_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cni-chaining-mode
                name: cilium-config
                optional: true
          - name: CILIUM_CUSTOM_CNI_CONF
            valueFrom:
              configMapKeyRef:
                key: custom-cni-conf
                name: cilium-config
                optional: true
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 60
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
          - containerPort: 9965
            hostPort: 9965
            name: flowmetrics
            protocol: TCP
          - containerPort: 9879
            hostPort: 9879
            name: agenthealth
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 700Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
            privileged: true
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.config
            name: gops-config-dir
          - mountPath: /sys/fs/bpf
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
          - mountPath: /host/etc/cni/net.d
            name: etc-cni-netd
          - mountPath: /var/lib/cilium/clustermesh
            name: clustermesh-secrets
            readOnly: true
          - mountPath: /tmp/cilium/config-map
            name: cilium-config-path
            readOnly: true
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/log/network
            name: network-log
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/cilium-agent-metrics-collector-config-data.textproto,/conf/cilium-agent-hubble-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: cilium-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240508_2300_RC0@sha256:1593f1e9570b99b1843cc886b723d4e291e2281fe2b9e45f565064cac379e4cf
          imagePullPolicy: IfNotPresent
          name: cilium-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: cilium-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /install-plugin.sh
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-path
        - command:
          - /init-container.sh
          env:
          - name: CILIUM_ALL_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-state
                name: cilium-config
                optional: true
          - name: CILIUM_BPF_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-bpf-state
                name: cilium-config
                optional: true
          - name: CILIUM_WAIT_BPF_MOUNT
            valueFrom:
              configMapKeyRef:
                key: wait-bpf-mount
                name: cilium-config
                optional: true
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys/fs/bpf
            mountPropagation: HostToContainer
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 1
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: gops-config-dir
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/ca-certificates.crt
            type: File
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /home/kubernetes/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
            type: DirectoryOrCreate
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/log/network
            type: DirectoryOrCreate
          name: network-log
        - name: clustermesh-secrets
          secret:
            defaultMode: 420
            optional: true
            secretName: cilium-clustermesh
        - name: cilium-config-path
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: cilium-config
            - configMap:
                name: cilium-hubble-config
            - configMap:
                name: cilium-config-emergency-override
        - configMap:
            defaultMode: 420
            items:
            - key: cilium-agent-metrics-collector-config-data
              path: cilium-agent-metrics-collector-config-data.textproto
            - key: cilium-agent-hubble-metrics-collector-config-data
              path: cilium-agent-hubble-metrics-collector-config-data.textproto
            name: cilium-agent-metrics-collector-config-map
          name: cilium-agent-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:26:23Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cilium
    name: anetd-m
    namespace: kube-system
    resourceVersion: "1751862396518159023"
    uid: 4f221648-37ab-42af-bd9a-cd366220a991
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cilium
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
          components.gke.io/component-name: advanceddatapath
          components.gke.io/component-version: 32.3.32
          prometheus.io/port: "9990"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          k8s-app: cilium
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/machine-family
                  operator: In
                  values:
                  - ek
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Gt
                  values:
                  - "8"
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Lt
                  values:
                  - "65"
        automountServiceAccountToken: false
        containers:
        - args:
          - |
            exec {BASH_XTRACEFD}>&1 && set -x

            if [[ -n "$${CILIUM_CONFIG_MAP}" ]] \
                && [[ ! -f "$${CILIUM_CONFIG_MAP}/mtu" ]] \
                && [[ -n "$${MTU_DEVICE_IP}" ]]; then
              # Get mtu of the interface which has ip address '$${MTU_DEVICE_IP}'
              mtu="$$(ip addr show to "$${MTU_DEVICE_IP}" | grep mtu | awk '{for (I=1;I<NF;I++) if ($$I == "mtu") print $$(I+1)}')"

              # Check if we could retrive a number in 'mtu'
              if [[ "$${mtu}" =~ ^[0-9]+$$ ]]; then
                mtuArg="--mtu=$${mtu}"
              fi
            fi

            exec /usr/bin/cilium-agent \
              --k8s-kubeconfig-path=/var/lib/kubelet/kubeconfig \
              --config-dir="$${CILIUM_CONFIG_MAP}" \
              $${mtuArg:-}
          command:
          - bash
          - -euc
          env:
          - name: GOPS_CONFIG_DIR
            value: /.config
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CILIUM_FLANNEL_MASTER_DEVICE
            valueFrom:
              configMapKeyRef:
                key: flannel-master-device
                name: cilium-config
                optional: true
          - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
            valueFrom:
              configMapKeyRef:
                key: flannel-uninstall-on-exit
                name: cilium-config
                optional: true
          - name: MTU_DEVICE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CILIUM_CONFIG_MAP
            value: /tmp/cilium/config-map
          - name: CILIUM_CLUSTERMESH_CONFIG
            value: /var/lib/cilium/clustermesh/
          - name: CILIUM_CNI_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cni-chaining-mode
                name: cilium-config
                optional: true
          - name: CILIUM_CUSTOM_CNI_CONF
            valueFrom:
              configMapKeyRef:
                key: custom-cni-conf
                name: cilium-config
                optional: true
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 60
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
          - containerPort: 9965
            hostPort: 9965
            name: flowmetrics
            protocol: TCP
          - containerPort: 9879
            hostPort: 9879
            name: agenthealth
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 400Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
            privileged: true
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.config
            name: gops-config-dir
          - mountPath: /sys/fs/bpf
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
          - mountPath: /host/etc/cni/net.d
            name: etc-cni-netd
          - mountPath: /var/lib/cilium/clustermesh
            name: clustermesh-secrets
            readOnly: true
          - mountPath: /tmp/cilium/config-map
            name: cilium-config-path
            readOnly: true
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/log/network
            name: network-log
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/cilium-agent-metrics-collector-config-data.textproto,/conf/cilium-agent-hubble-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: cilium-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240508_2300_RC0@sha256:1593f1e9570b99b1843cc886b723d4e291e2281fe2b9e45f565064cac379e4cf
          imagePullPolicy: IfNotPresent
          name: cilium-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: cilium-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /install-plugin.sh
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-path
        - command:
          - /init-container.sh
          env:
          - name: CILIUM_ALL_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-state
                name: cilium-config
                optional: true
          - name: CILIUM_BPF_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-bpf-state
                name: cilium-config
                optional: true
          - name: CILIUM_WAIT_BPF_MOUNT
            valueFrom:
              configMapKeyRef:
                key: wait-bpf-mount
                name: cilium-config
                optional: true
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys/fs/bpf
            mountPropagation: HostToContainer
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 1
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: gops-config-dir
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/ca-certificates.crt
            type: File
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /home/kubernetes/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
            type: DirectoryOrCreate
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/log/network
            type: DirectoryOrCreate
          name: network-log
        - name: clustermesh-secrets
          secret:
            defaultMode: 420
            optional: true
            secretName: cilium-clustermesh
        - name: cilium-config-path
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: cilium-config
            - configMap:
                name: cilium-hubble-config
            - configMap:
                name: cilium-config-emergency-override
        - configMap:
            defaultMode: 420
            items:
            - key: cilium-agent-metrics-collector-config-data
              path: cilium-agent-metrics-collector-config-data.textproto
            - key: cilium-agent-hubble-metrics-collector-config-data
              path: cilium-agent-hubble-metrics-collector-config-data.textproto
            name: cilium-agent-metrics-collector-config-map
          name: cilium-agent-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:26:23Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cilium
    name: anetd-s
    namespace: kube-system
    resourceVersion: "1751862396932511005"
    uid: c80831da-bd73-43e8-91a5-7ce7ed9c0e51
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cilium
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
          components.gke.io/component-name: advanceddatapath
          components.gke.io/component-version: 32.3.32
          prometheus.io/port: "9990"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          k8s-app: cilium
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/machine-family
                  operator: In
                  values:
                  - ek
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Gt
                  values:
                  - "1"
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Lt
                  values:
                  - "9"
        automountServiceAccountToken: false
        containers:
        - args:
          - |
            exec {BASH_XTRACEFD}>&1 && set -x

            if [[ -n "$${CILIUM_CONFIG_MAP}" ]] \
                && [[ ! -f "$${CILIUM_CONFIG_MAP}/mtu" ]] \
                && [[ -n "$${MTU_DEVICE_IP}" ]]; then
              # Get mtu of the interface which has ip address '$${MTU_DEVICE_IP}'
              mtu="$$(ip addr show to "$${MTU_DEVICE_IP}" | grep mtu | awk '{for (I=1;I<NF;I++) if ($$I == "mtu") print $$(I+1)}')"

              # Check if we could retrive a number in 'mtu'
              if [[ "$${mtu}" =~ ^[0-9]+$$ ]]; then
                mtuArg="--mtu=$${mtu}"
              fi
            fi

            exec /usr/bin/cilium-agent \
              --k8s-kubeconfig-path=/var/lib/kubelet/kubeconfig \
              --config-dir="$${CILIUM_CONFIG_MAP}" \
              $${mtuArg:-}
          command:
          - bash
          - -euc
          env:
          - name: GOPS_CONFIG_DIR
            value: /.config
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CILIUM_FLANNEL_MASTER_DEVICE
            valueFrom:
              configMapKeyRef:
                key: flannel-master-device
                name: cilium-config
                optional: true
          - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
            valueFrom:
              configMapKeyRef:
                key: flannel-uninstall-on-exit
                name: cilium-config
                optional: true
          - name: MTU_DEVICE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CILIUM_CONFIG_MAP
            value: /tmp/cilium/config-map
          - name: CILIUM_CLUSTERMESH_CONFIG
            value: /var/lib/cilium/clustermesh/
          - name: CILIUM_CNI_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cni-chaining-mode
                name: cilium-config
                optional: true
          - name: CILIUM_CUSTOM_CNI_CONF
            valueFrom:
              configMapKeyRef:
                key: custom-cni-conf
                name: cilium-config
                optional: true
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 60
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
          - containerPort: 9965
            hostPort: 9965
            name: flowmetrics
            protocol: TCP
          - containerPort: 9879
            hostPort: 9879
            name: agenthealth
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
            privileged: true
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.config
            name: gops-config-dir
          - mountPath: /sys/fs/bpf
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
          - mountPath: /host/etc/cni/net.d
            name: etc-cni-netd
          - mountPath: /var/lib/cilium/clustermesh
            name: clustermesh-secrets
            readOnly: true
          - mountPath: /tmp/cilium/config-map
            name: cilium-config-path
            readOnly: true
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/log/network
            name: network-log
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/cilium-agent-metrics-collector-config-data.textproto,/conf/cilium-agent-hubble-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: cilium-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240508_2300_RC0@sha256:1593f1e9570b99b1843cc886b723d4e291e2281fe2b9e45f565064cac379e4cf
          imagePullPolicy: IfNotPresent
          name: cilium-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: cilium-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /install-plugin.sh
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-path
        - command:
          - /init-container.sh
          env:
          - name: CILIUM_ALL_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-state
                name: cilium-config
                optional: true
          - name: CILIUM_BPF_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-bpf-state
                name: cilium-config
                optional: true
          - name: CILIUM_WAIT_BPF_MOUNT
            valueFrom:
              configMapKeyRef:
                key: wait-bpf-mount
                name: cilium-config
                optional: true
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys/fs/bpf
            mountPropagation: HostToContainer
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 1
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: gops-config-dir
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/ca-certificates.crt
            type: File
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /home/kubernetes/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
            type: DirectoryOrCreate
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/log/network
            type: DirectoryOrCreate
          name: network-log
        - name: clustermesh-secrets
          secret:
            defaultMode: 420
            optional: true
            secretName: cilium-clustermesh
        - name: cilium-config-path
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: cilium-config
            - configMap:
                name: cilium-hubble-config
            - configMap:
                name: cilium-config-emergency-override
        - configMap:
            defaultMode: 420
            items:
            - key: cilium-agent-metrics-collector-config-data
              path: cilium-agent-metrics-collector-config-data.textproto
            - key: cilium-agent-hubble-metrics-collector-config-data
              path: cilium-agent-hubble-metrics-collector-config-data.textproto
            name: cilium-agent-metrics-collector-config-map
          name: cilium-agent-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:58Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: anetd-win
      prometheus.io/port: "9990"
      prometheus.io/scrape: "true"
    name: anetd-win
    namespace: kube-system
    resourceVersion: "1751862478839087007"
    uid: 95a2a1dd-57b8-456a-b3d9-8d5b4e077f19
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: anetd-win
    template:
      metadata:
        annotations:
          components.gke.io/component-name: networkpolicy-antrea
          components.gke.io/component-version: 0.4.3
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: anetd-win
      spec:
        containers:
        - command:
          - anet-agent.exe
          env:
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium-win-multi:v1.9.5-gke.68@sha256:b53695ec654355db2b7d08929f8dd45b18e041d13f0e80ca668df83d5e5cd12f
          imagePullPolicy: IfNotPresent
          name: cilium-agent
          resources:
            requests:
              cpu: 2m
              memory: 15Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: private-registry-creds
        nodeSelector:
          kubernetes.io/os: windows
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: cilium-win
        serviceAccountName: cilium-win
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:26:23Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cilium
    name: anetd-xl
    namespace: kube-system
    resourceVersion: "1751862396979103015"
    uid: 4275ab14-f07e-4e40-8a08-5a7ea243e5fc
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cilium
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
          components.gke.io/component-name: advanceddatapath
          components.gke.io/component-version: 32.3.32
          prometheus.io/port: "9990"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          k8s-app: cilium
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/machine-family
                  operator: In
                  values:
                  - ek
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Gt
                  values:
                  - "256"
        automountServiceAccountToken: false
        containers:
        - args:
          - |
            exec {BASH_XTRACEFD}>&1 && set -x

            if [[ -n "$${CILIUM_CONFIG_MAP}" ]] \
                && [[ ! -f "$${CILIUM_CONFIG_MAP}/mtu" ]] \
                && [[ -n "$${MTU_DEVICE_IP}" ]]; then
              # Get mtu of the interface which has ip address '$${MTU_DEVICE_IP}'
              mtu="$$(ip addr show to "$${MTU_DEVICE_IP}" | grep mtu | awk '{for (I=1;I<NF;I++) if ($$I == "mtu") print $$(I+1)}')"

              # Check if we could retrive a number in 'mtu'
              if [[ "$${mtu}" =~ ^[0-9]+$$ ]]; then
                mtuArg="--mtu=$${mtu}"
              fi
            fi

            exec /usr/bin/cilium-agent \
              --k8s-kubeconfig-path=/var/lib/kubelet/kubeconfig \
              --config-dir="$${CILIUM_CONFIG_MAP}" \
              $${mtuArg:-}
          command:
          - bash
          - -euc
          env:
          - name: GOPS_CONFIG_DIR
            value: /.config
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CILIUM_FLANNEL_MASTER_DEVICE
            valueFrom:
              configMapKeyRef:
                key: flannel-master-device
                name: cilium-config
                optional: true
          - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
            valueFrom:
              configMapKeyRef:
                key: flannel-uninstall-on-exit
                name: cilium-config
                optional: true
          - name: MTU_DEVICE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CILIUM_CONFIG_MAP
            value: /tmp/cilium/config-map
          - name: CILIUM_CLUSTERMESH_CONFIG
            value: /var/lib/cilium/clustermesh/
          - name: CILIUM_CNI_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cni-chaining-mode
                name: cilium-config
                optional: true
          - name: CILIUM_CUSTOM_CNI_CONF
            valueFrom:
              configMapKeyRef:
                key: custom-cni-conf
                name: cilium-config
                optional: true
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 60
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
          - containerPort: 9965
            hostPort: 9965
            name: flowmetrics
            protocol: TCP
          - containerPort: 9879
            hostPort: 9879
            name: agenthealth
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 1500Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
            privileged: true
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.config
            name: gops-config-dir
          - mountPath: /sys/fs/bpf
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
          - mountPath: /host/etc/cni/net.d
            name: etc-cni-netd
          - mountPath: /var/lib/cilium/clustermesh
            name: clustermesh-secrets
            readOnly: true
          - mountPath: /tmp/cilium/config-map
            name: cilium-config-path
            readOnly: true
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/log/network
            name: network-log
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/cilium-agent-metrics-collector-config-data.textproto,/conf/cilium-agent-hubble-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: cilium-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240508_2300_RC0@sha256:1593f1e9570b99b1843cc886b723d4e291e2281fe2b9e45f565064cac379e4cf
          imagePullPolicy: IfNotPresent
          name: cilium-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: cilium-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /install-plugin.sh
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-path
        - command:
          - /init-container.sh
          env:
          - name: CILIUM_ALL_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-state
                name: cilium-config
                optional: true
          - name: CILIUM_BPF_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-bpf-state
                name: cilium-config
                optional: true
          - name: CILIUM_WAIT_BPF_MOUNT
            valueFrom:
              configMapKeyRef:
                key: wait-bpf-mount
                name: cilium-config
                optional: true
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys/fs/bpf
            mountPropagation: HostToContainer
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 1
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: gops-config-dir
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/ca-certificates.crt
            type: File
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /home/kubernetes/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
            type: DirectoryOrCreate
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/log/network
            type: DirectoryOrCreate
          name: network-log
        - name: clustermesh-secrets
          secret:
            defaultMode: 420
            optional: true
            secretName: cilium-clustermesh
        - name: cilium-config-path
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: cilium-config
            - configMap:
                name: cilium-hubble-config
            - configMap:
                name: cilium-config-emergency-override
        - configMap:
            defaultMode: 420
            items:
            - key: cilium-agent-metrics-collector-config-data
              path: cilium-agent-metrics-collector-config-data.textproto
            - key: cilium-agent-hubble-metrics-collector-config-data
              path: cilium-agent-hubble-metrics-collector-config-data.textproto
            name: cilium-agent-metrics-collector-config-map
          name: cilium-agent-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:26:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cilium
    name: anetd-xs
    namespace: kube-system
    resourceVersion: "1751862395695695005"
    uid: 1499d424-ee66-4801-bf4c-0fa2c5e713b0
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cilium
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
          components.gke.io/component-name: advanceddatapath
          components.gke.io/component-version: 32.3.32
          prometheus.io/port: "9990"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          k8s-app: cilium
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/machine-family
                  operator: In
                  values:
                  - ek
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Lt
                  values:
                  - "2"
        automountServiceAccountToken: false
        containers:
        - args:
          - |
            exec {BASH_XTRACEFD}>&1 && set -x

            if [[ -n "$${CILIUM_CONFIG_MAP}" ]] \
                && [[ ! -f "$${CILIUM_CONFIG_MAP}/mtu" ]] \
                && [[ -n "$${MTU_DEVICE_IP}" ]]; then
              # Get mtu of the interface which has ip address '$${MTU_DEVICE_IP}'
              mtu="$$(ip addr show to "$${MTU_DEVICE_IP}" | grep mtu | awk '{for (I=1;I<NF;I++) if ($$I == "mtu") print $$(I+1)}')"

              # Check if we could retrive a number in 'mtu'
              if [[ "$${mtu}" =~ ^[0-9]+$$ ]]; then
                mtuArg="--mtu=$${mtu}"
              fi
            fi

            exec /usr/bin/cilium-agent \
              --k8s-kubeconfig-path=/var/lib/kubelet/kubeconfig \
              --config-dir="$${CILIUM_CONFIG_MAP}" \
              $${mtuArg:-}
          command:
          - bash
          - -euc
          env:
          - name: GOPS_CONFIG_DIR
            value: /.config
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CILIUM_FLANNEL_MASTER_DEVICE
            valueFrom:
              configMapKeyRef:
                key: flannel-master-device
                name: cilium-config
                optional: true
          - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
            valueFrom:
              configMapKeyRef:
                key: flannel-uninstall-on-exit
                name: cilium-config
                optional: true
          - name: MTU_DEVICE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CILIUM_CONFIG_MAP
            value: /tmp/cilium/config-map
          - name: CILIUM_CLUSTERMESH_CONFIG
            value: /var/lib/cilium/clustermesh/
          - name: CILIUM_CNI_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cni-chaining-mode
                name: cilium-config
                optional: true
          - name: CILIUM_CUSTOM_CNI_CONF
            valueFrom:
              configMapKeyRef:
                key: custom-cni-conf
                name: cilium-config
                optional: true
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 60
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
          - containerPort: 9965
            hostPort: 9965
            name: flowmetrics
            protocol: TCP
          - containerPort: 9879
            hostPort: 9879
            name: agenthealth
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
            privileged: true
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.config
            name: gops-config-dir
          - mountPath: /sys/fs/bpf
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
          - mountPath: /host/etc/cni/net.d
            name: etc-cni-netd
          - mountPath: /var/lib/cilium/clustermesh
            name: clustermesh-secrets
            readOnly: true
          - mountPath: /tmp/cilium/config-map
            name: cilium-config-path
            readOnly: true
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/log/network
            name: network-log
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/cilium-agent-metrics-collector-config-data.textproto,/conf/cilium-agent-hubble-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: cilium-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240508_2300_RC0@sha256:1593f1e9570b99b1843cc886b723d4e291e2281fe2b9e45f565064cac379e4cf
          imagePullPolicy: IfNotPresent
          name: cilium-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: cilium-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /install-plugin.sh
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-path
        - command:
          - /init-container.sh
          env:
          - name: CILIUM_ALL_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-state
                name: cilium-config
                optional: true
          - name: CILIUM_BPF_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-bpf-state
                name: cilium-config
                optional: true
          - name: CILIUM_WAIT_BPF_MOUNT
            valueFrom:
              configMapKeyRef:
                key: wait-bpf-mount
                name: cilium-config
                optional: true
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys/fs/bpf
            mountPropagation: HostToContainer
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 1
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: gops-config-dir
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/ca-certificates.crt
            type: File
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /home/kubernetes/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
            type: DirectoryOrCreate
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/log/network
            type: DirectoryOrCreate
          name: network-log
        - name: clustermesh-secrets
          secret:
            defaultMode: 420
            optional: true
            secretName: cilium-clustermesh
        - name: cilium-config-path
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: cilium-config
            - configMap:
                name: cilium-hubble-config
            - configMap:
                name: cilium-config-emergency-override
        - configMap:
            defaultMode: 420
            items:
            - key: cilium-agent-metrics-collector-config-data
              path: cilium-agent-metrics-collector-config-data.textproto
            - key: cilium-agent-hubble-metrics-collector-config-data
              path: cilium-agent-hubble-metrics-collector-config-data.textproto
            name: cilium-agent-metrics-collector-config-map
          name: cilium-agent-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:26:45Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: efficiency-daemon
    name: efficiency-daemon
    namespace: kube-system
    resourceVersion: "1751862647721823018"
    uid: 04b46f68-9c5d-4de3-8ed3-f62b12b4f80f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: efficiency-daemon
    template:
      metadata:
        annotations:
          components.gke.io/component-name: efficiency-daemon
          components.gke.io/component-version: 32.1.1
        creationTimestamp: null
        labels:
          k8s-app: efficiency-daemon
          name: efficiency-daemon
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/slice-of-hardware
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-accelerator
                  operator: DoesNotExist
        containers:
        - args:
          - -host_prefix=/host
          - -config_path=/config/efficiency-daemon-config.yaml
          - -config_overrides=efficiency-daemon-config-overrides
          - -eviction_hard_memory_available=100Mi
          - -log_level=info
          command:
          - /efficiency_daemon
          env:
          - name: CLUSTER_PROJECT
            value: "388364419893"
          - name: CLUSTER_LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: efficiency-daemon
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/efficiency-daemon:v32.1.0-gke.0@sha256:730ea76188d686b0e6343ce3bd4b9c8f8e7db984736587cd40aca0dac9676d6b
          imagePullPolicy: Always
          name: efficiency-daemon
          resources:
            requests:
              cpu: 5m
              memory: 50Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/etc/kubernetes/manifests
            name: k8s-manifests
            readOnly: true
          - mountPath: /host/run/containerd/containerd.sock
            name: containerd-sock
          - mountPath: /host/run/nri/nri.sock
            name: nri-sock
          - mountPath: /host/sys/fs/cgroup
            name: sys-cgroup
          - mountPath: /host/sys/devices/system/cpu
            name: sys-cpu
          - mountPath: /config
            name: efficiency-daemon-config
          - mountPath: /host/home/kubernetes/bin/kubelet
            name: kubelet-exec
          - mountPath: /var/run/dbus/system_bus_socket
            name: dbus-sock
          - mountPath: /host/sys/module
            name: sys-module
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: efficiency-daemon
        serviceAccountName: efficiency-daemon
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/kubernetes/manifests
            type: Directory
          name: k8s-manifests
        - hostPath:
            path: /run/containerd/containerd.sock
            type: Socket
          name: containerd-sock
        - hostPath:
            path: /run/nri/nri.sock
            type: Socket
          name: nri-sock
        - hostPath:
            path: /sys/fs/cgroup
            type: Directory
          name: sys-cgroup
        - hostPath:
            path: /sys/devices/system/cpu
            type: Directory
          name: sys-cpu
        - configMap:
            defaultMode: 420
            name: efficiency-daemon-config
          name: efficiency-daemon-config
        - hostPath:
            path: /home/kubernetes/bin/kubelet
            type: File
          name: kubelet-exec
        - hostPath:
            path: /var/run/dbus/system_bus_socket
            type: Socket
          name: dbus-sock
        - hostPath:
            path: /sys/module
            type: Directory
          name: sys-module
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:26:54Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gcp-filestore-csi-driver
    name: filestore-node
    namespace: kube-system
    resourceVersion: "1751862685149327013"
    uid: 56c34c8f-9f19-40be-a6c2-6dd84e5a8c1f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gcp-filestore-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: filestorecsi
          components.gke.io/component-version: 0.15.14
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: gcp-filestore-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=/csi/csi.sock
          - --kubelet-registration-path=/var/lib/kubelet/plugins/filestore.csi.storage.gke.io/csi.sock
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.38@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
          imagePullPolicy: IfNotPresent
          name: csi-driver-registrar
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --node=true
          - --nodeid=$(KUBE_NODE_NAME)
          - --feature-lock-release=true
          - --feature-lock-release-standalone=true
          - --http-endpoint=:990
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver:v1.8.0-gke.17@sha256:ef4266b730f4ec4cd5571794496b956d3c43482a73918d2b06a798c17eec24e3
          imagePullPolicy: IfNotPresent
          name: gcp-filestore-driver
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: kubelet-dir
          - mountPath: /csi
            name: plugin-dir
        - command:
          - /nfs_services_start.sh
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver:v1.8.0-gke.17@sha256:ef4266b730f4ec4cd5571794496b956d3c43482a73918d2b06a798c17eec24e3
          imagePullPolicy: IfNotPresent
          name: nfs-services
          resources:
            requests:
              cpu: 10m
              memory: 110Mi
          securityContext:
            allowPrivilegeEscalation: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: filestorecsi-metrics-collector
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/filestorecsi-metrics-collector-config-data.textproto
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241103_2300_RC0@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
          imagePullPolicy: IfNotPresent
          name: filestorecsi-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: filestorecsi-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: filestorecsi-node-sa
        serviceAccountName: filestorecsi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/filestore.csi.storage.gke.io/
            type: DirectoryOrCreate
          name: plugin-dir
        - configMap:
            defaultMode: 420
            items:
            - key: filestorecsi-metrics-collector-config-data
              path: filestorecsi-metrics-collector-config-data.textproto
            name: filestorecsi-metrics-collector-config-map
          name: filestorecsi-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:26:56Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
      nodeType: big
    name: fluentbit-gke-big
    namespace: kube-system
    resourceVersion: "1751862720560431013"
    uid: 460ac395-2946-41f6-bf8e-75ab7bff974c
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: fluentbit-gke
        k8s-app: fluentbit-gke
        nodeType: big
    template:
      metadata:
        annotations:
          EnableNodeJournal: "false"
          EnablePodSecurityPolicy: "false"
          SystemOnlyLogging: "false"
          components.gke.io/component-name: fluentbit
          components.gke.io/component-version: 1.32.0-gke.7
          monitoring.gke.io/path: /api/v1/metrics/prometheus
        creationTimestamp: null
        labels:
          component: fluentbit-gke
          k8s-app: fluentbit-gke
          kubernetes.io/cluster-service: "true"
          nodeType: big
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node.kubernetes.io/instance-type
                  operator: NotIn
                  values:
                  - e2-medium
        containers:
        - image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.12-gke.86@sha256:0badbc279d5ed4b391b88e1ebb4eb81c0bfda4797214f5cebc3b6a3f3a151cc8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentbit
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/google-fluentbit/pos-files
            name: varlibgooglefluentbitpos
          - mountPath: /fluent-bit/etc/
            name: config-volume
        - command:
          - /fluent-bit-gke-exporter
          - --kubernetes-separator=_
          - --stackdriver-resource-model=k8s
          - --enable-pod-label-discovery
          - --pod-label-dot-replacement=_
          - --split-stdout-stderr
          - --stackdriver-timeout=60s
          - --max-inactivity-duration=600s
          - --stackdriver-address=logging.googleapis.com:443
          - --pool-size=5
          - --max-log-connections=5
          - --logtostderr
          - --node-name=$(NODE_NAME)
          - --pod-cache-size=1024
          - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.9-gke.8@sha256:b856a892648d5c5ce3bfae9d4aa2c04f5444970f9b1ef673a5a6ff2176c7002b
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 2021
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: fluentbit-gke
          ports:
          - containerPort: 2021
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/fluentbit-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: fluentbit-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250513_2300_RC0@sha256:c8bd9deb1e4181b8d6fbdac05bb5726bb0cc96cc03342e6a0f2239cd9ead7a1e
          imagePullPolicy: IfNotPresent
          name: fluentbit-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: fluentbit-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |-
            set -e;
            if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
              exit 0;
            fi;
            if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
              rm -rf /var/lib/google-fluentbit/pos-files.staged;
              rm -rf /var/lib/google-fluentbit/pos-files;
              cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
              mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
              rm -rf /var/run/google-fluentbit/pos-files;
            fi
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250507.00_p0@sha256:0f863362719eef67395f2cb7b484e0217a448d2739d12c4d9aa2b977ac60de2b
          imagePullPolicy: IfNotPresent
          name: fluentbit-gke-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/google-fluentbit
            name: varlibgooglefluentbit
          - mountPath: /var/run/google-fluentbit
            name: varrungooglefluentbit
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: fluentbit-gke
        serviceAccountName: fluentbit-gke
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/run/google-fluentbit
            type: DirectoryOrCreate
          name: varrungooglefluentbit
        - hostPath:
            path: /var/log
            type: Directory
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: Directory
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/google-fluentbit
            type: DirectoryOrCreate
          name: varlibgooglefluentbit
        - hostPath:
            path: /var/lib/google-fluentbit/pos-files
            type: DirectoryOrCreate
          name: varlibgooglefluentbitpos
        - configMap:
            defaultMode: 420
            name: fluentbit-gke-config-v1.4.0
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: fluentbit-metrics-collector-config-data
              path: fluentbit-metrics-collector-config-data.textproto
            name: fluentbit-metrics-collector-config-map
          name: fluentbit-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:26:56Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
      nodeType: small
    name: fluentbit-gke-small
    namespace: kube-system
    resourceVersion: "1751862416874815014"
    uid: d3b63fbc-ad4d-4dc0-a8fe-3fe18bcec542
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: fluentbit-gke
        k8s-app: fluentbit-gke
        nodeType: small
    template:
      metadata:
        annotations:
          EnableNodeJournal: "false"
          EnablePodSecurityPolicy: "false"
          SystemOnlyLogging: "false"
          components.gke.io/component-name: fluentbit
          components.gke.io/component-version: 1.32.0-gke.7
          monitoring.gke.io/path: /api/v1/metrics/prometheus
        creationTimestamp: null
        labels:
          component: fluentbit-gke
          k8s-app: fluentbit-gke
          kubernetes.io/cluster-service: "true"
          nodeType: small
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node.kubernetes.io/instance-type
                  operator: In
                  values:
                  - e2-medium
        containers:
        - image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.12-gke.86@sha256:0badbc279d5ed4b391b88e1ebb4eb81c0bfda4797214f5cebc3b6a3f3a151cc8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentbit
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 20m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/google-fluentbit/pos-files
            name: varlibgooglefluentbitpos
          - mountPath: /fluent-bit/etc/
            name: config-volume
        - command:
          - /fluent-bit-gke-exporter
          - --kubernetes-separator=_
          - --stackdriver-resource-model=k8s
          - --enable-pod-label-discovery
          - --pod-label-dot-replacement=_
          - --split-stdout-stderr
          - --stackdriver-timeout=60s
          - --max-inactivity-duration=600s
          - --stackdriver-address=logging.googleapis.com:443
          - --pool-size=5
          - --max-log-connections=5
          - --logtostderr
          - --node-name=$(NODE_NAME)
          - --pod-cache-size=1024
          - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.9-gke.8@sha256:b856a892648d5c5ce3bfae9d4aa2c04f5444970f9b1ef673a5a6ff2176c7002b
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 2021
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: fluentbit-gke
          ports:
          - containerPort: 2021
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 20m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/fluentbit-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: fluentbit-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250513_2300_RC0@sha256:c8bd9deb1e4181b8d6fbdac05bb5726bb0cc96cc03342e6a0f2239cd9ead7a1e
          imagePullPolicy: IfNotPresent
          name: fluentbit-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: fluentbit-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |-
            set -e;
            if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
              exit 0;
            fi;
            if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
              rm -rf /var/lib/google-fluentbit/pos-files.staged;
              rm -rf /var/lib/google-fluentbit/pos-files;
              cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
              mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
              rm -rf /var/run/google-fluentbit/pos-files;
            fi
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250507.00_p0@sha256:0f863362719eef67395f2cb7b484e0217a448d2739d12c4d9aa2b977ac60de2b
          imagePullPolicy: IfNotPresent
          name: fluentbit-gke-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/google-fluentbit
            name: varlibgooglefluentbit
          - mountPath: /var/run/google-fluentbit
            name: varrungooglefluentbit
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: fluentbit-gke
        serviceAccountName: fluentbit-gke
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/run/google-fluentbit
            type: DirectoryOrCreate
          name: varrungooglefluentbit
        - hostPath:
            path: /var/log
            type: Directory
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: Directory
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/google-fluentbit
            type: DirectoryOrCreate
          name: varlibgooglefluentbit
        - hostPath:
            path: /var/lib/google-fluentbit/pos-files
            type: DirectoryOrCreate
          name: varlibgooglefluentbitpos
        - configMap:
            defaultMode: 420
            name: fluentbit-gke-config-v1.4.0
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: fluentbit-metrics-collector-config-data
              path: fluentbit-metrics-collector-config-data.textproto
            name: fluentbit-metrics-collector-config-map
          name: fluentbit-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:03Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gcs-fuse-csi-driver
    name: gcsfusecsi-node
    namespace: kube-system
    resourceVersion: "1751863029691839005"
    uid: ab47ff86-9578-4a0f-9a75-f86f96971b37
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gcs-fuse-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gcsfusecsi
          components.gke.io/component-version: 0.9.25
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: gcs-fuse-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --nodeid=$(KUBE_NODE_NAME)
          - --node=true
          - --identity-pool=upheld-terminus-462616-m0.svc.id.goog
          - --identity-provider=https://container.googleapis.com/v1/projects/upheld-terminus-462616-m0/locations/asia-south1/clusters/poc-gke-autopilot
          - --metrics-endpoint=:9920
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcs-fuse-csi-driver:v1.14.0-gke.3@sha256:5cd80529d319f193d5b20299a2192fcc1a55e7926cc9799e9c632980d3da4a9a
          imagePullPolicy: IfNotPresent
          name: gcs-fuse-csi-driver
          ports:
          - containerPort: 9920
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 5m
              memory: 20Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/pods
            mountPropagation: Bidirectional
            name: kubelet-dir
          - mountPath: /csi
            name: socket-dir
          - mountPath: /sockets
            name: fuse-socket-dir
          - mountPath: /sys
            name: host-sysfs
        - args:
          - --v=5
          - --csi-address=/csi/csi.sock
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/gcsfuse.csi.storage.gke.io/csi.sock
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.10.1-gke.39@sha256:510154b2f9056764c8080e7e6954ca5e67bc06c3e154567344df9e876b0a7296
          imagePullPolicy: IfNotPresent
          name: csi-driver-registrar
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /registration
            name: registration-dir
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/gcsfusecsi-metrics-collector-config-data.textproto
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: gcsfusecsi-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250311_2300_RC0@sha256:e6713a8266629d9e103f7b2c7715bf510170fe28ebe2dc341327fa5e6a0facde
          imagePullPolicy: IfNotPresent
          name: gcsfusecsi-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 100Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gcsfusecsi-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gcsfusecsi-node-sa
        serviceAccountName: gcsfusecsi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/pods/
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/gcsfuse.csi.storage.gke.io/
            type: DirectoryOrCreate
          name: socket-dir
        - emptyDir: {}
          name: fuse-socket-dir
        - hostPath:
            path: /sys
            type: Directory
          name: host-sysfs
        - configMap:
            defaultMode: 420
            items:
            - key: gcsfusecsi-metrics-collector-config-data
              path: gcsfusecsi-metrics-collector-config-data.textproto
            name: gcsfusecsi-metrics-collector-config-map
          name: gcsfusecsi-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:11Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gke-metadata-server
    name: gke-metadata-server
    namespace: kube-system
    resourceVersion: "1751862760859167020"
    uid: 942dfb4e-a42d-4c87-b00a-957f067297bf
  spec:
    minReadySeconds: 90
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gke-metadata-server
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metadata-server
          components.gke.io/component-version: 0.4.316
          monitoring.gke.io/path: /metricz
        creationTimestamp: null
        labels:
          addonmanager.kubernetes.io/mode: Reconcile
          k8s-app: gke-metadata-server
      spec:
        containers:
        - command:
          - /gke-metadata-server
          - --logtostderr
          - --token-exchange-endpoint=https://securetoken.googleapis.com/v1/identitybindingtoken
          - --workload-pool=upheld-terminus-462616-m0.svc.id.goog
          - --alts-service-suffixes-using-node-identity=storage.googleapis.com,bigtable.googleapis.com,bigtable2.googleapis.com,bigtablerls.googleapis.com,spanner.googleapis.com,spanner2.googleapis.com,spanner-rls.googleapis.com,grpclb.directpath.google.internal,grpclb-dualstack.directpath.google.internal,grpc-directpath-dualstack.googleapis.com,staging-wrenchworks.sandbox.googleapis.com,preprod-spanner.sandbox.googleapis.com,wrenchworks-loadtest.googleapis.com,wrenchworks-nonprod.googleapis.com
          - --identity-provider=https://container.googleapis.com/v1/projects/upheld-terminus-462616-m0/locations/asia-south1/clusters/poc-gke-autopilot
          - --passthrough-ksa-list=anthos-identity-service:gke-oidc-envoy-sa,anthos-identity-service:gke-oidc-service-sa,gke-managed-dpv2-observability:hubble-relay,kube-system:antrea-controller,kube-system:container-watcher-pod-reader,kube-system:coredns,kube-system:egress-nat-controller,kube-system:event-exporter-sa,kube-system:filestore-lockrelease-controller-sa,kube-system:fluentd-gcp-scaler,kube-system:gke-metrics-agent,kube-system:gke-spiffe-node-agent,kube-system:heapster,kube-system:konnectivity-agent,kube-system:kube-dns,kube-system:maintenance-handler,kube-system:metadata-agent,kube-system:network-metering-agent,kube-system:node-local-dns,kube-system:pkgextract-service,kube-system:pkgextract-cleanup-service,kube-system:securityprofile-controller,istio-system:istio-ingressgateway-service-account,istio-system:cluster-local-gateway-service-account,csm:csm-sync-agent,knative-serving:controller,kube-system:pdcsi-node-sa,kube-system:gcsfusecsi-node-sa,gmp-system:collector,gke-gmp-system:collector,gke-managed-cim:kube-state-metrics,gke-mcs:gke-mcs-importer
          - --attributes=cluster-name=poc-gke-autopilot,cluster-uid=b8b78fe07b044f7e8350e01d51fbd4a789068bbed3d643b8a3e15c6a4138832d,cluster-location=asia-south1
          - --cluster-uid=b8b78fe07b044f7e8350e01d51fbd4a789068bbed3d643b8a3e15c6a4138832d
          - --sts-endpoint=https://sts.googleapis.com
          - --token-exchange-mode=sts
          - --cloud-monitoring-endpoint=monitoring.googleapis.com:443
          - --iam-cred-service-endpoint=https://iamcredentials.googleapis.com
          - --cluster-project-number=388364419893
          - --cluster-location=asia-south1
          - --cluster-name=poc-gke-autopilot
          - --component-version=0.4.316
          - --ksa-cache-mode=watchchecker
          - --kcp-allow-watch-checker=true
          - --enable-mds-csi-driver=true
          - --enable-alts-bound-token=true
          - --csi-socket=/csi/csi.sock
          - --volumes-db=/var/run/gkemds.gke.io/csi/volumes.boltdb
          - --write-trust-map=true
          env:
          - name: GOMEMLIMIT
            value: "94371840"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metadata-server:gke_metadata_server_20250115.00_p0@sha256:a6301b00a8c2f7091c361c6439f01e20e066aa951e04ef6195e5894b2c5dcf84
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 989
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metadata-server
          ports:
          - containerPort: 987
            name: alts
            protocol: TCP
          - containerPort: 988
            name: metadata-server
            protocol: TCP
          - containerPort: 989
            name: debug-port
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 989
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /var/run/
            name: container-runtime-interface
          - mountPath: /etc/srv/kubernetes/pki
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
          - mountPath: /sys/firmware/efi/efivars/
            name: efivars
            readOnly: true
          - mountPath: /dev/tpm0
            name: vtpm
            readOnly: true
          - mountPath: /csi
            name: csi-socket-dir
          - mountPath: /var/run/gkemds.gke.io/csi
            name: state-dir
          - mountPath: /var/lib/kubelet/pods
            mountPropagation: Bidirectional
            name: pods-dir
          - mountPath: /registration
            name: kubelet-registration-dir
        dnsPolicy: Default
        hostNetwork: true
        nodeSelector:
          iam.gke.io/gke-metadata-server-enabled: "true"
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: gke-metadata-server
        serviceAccountName: gke-metadata-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /var/run/
            type: Directory
          name: container-runtime-interface
        - hostPath:
            path: /etc/srv/kubernetes/pki/
            type: Directory
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /sys/firmware/efi/efivars/
            type: Directory
          name: efivars
        - hostPath:
            path: /dev/tpm0
            type: CharDevice
          name: vtpm
        - hostPath:
            path: /var/lib/kubelet/plugins/gkemds.gke.io
            type: DirectoryOrCreate
          name: csi-socket-dir
        - hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
          name: pods-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: kubelet-registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins
            type: Directory
          name: kubelet-plugins-dir
        - hostPath:
            path: /var/run/gkemds.gke.io/csi
            type: DirectoryOrCreate
          name: state-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:13Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent
    namespace: kube-system
    resourceVersion: "1751862637917183022"
    uid: 1a1c670f-3cbc-4b19-ac15-18937ff77577
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.17-gke.1
          configHash: /6T+c7yPRHHKMhT4+FQp3xU3EJkwPjRd2g3RGwBUpVA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: DoesNotExist
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 8m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 6m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:13Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-10
    namespace: kube-system
    resourceVersion: "1751862433595807004"
    uid: 140e023e-8f88-4a11-a795-f9c4681bdf02
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.17-gke.1
          configHash: /6T+c7yPRHHKMhT4+FQp3xU3EJkwPjRd2g3RGwBUpVA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "10"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 110Mi
            requests:
              cpu: 8m
              memory: 110Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 60Mi
            requests:
              cpu: 6m
              memory: 60Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:13Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-100
    namespace: kube-system
    resourceVersion: "1751862433839999008"
    uid: 06b6a000-f0ab-48ed-b3e3-b7a0502750f2
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.17-gke.1
          configHash: /6T+c7yPRHHKMhT4+FQp3xU3EJkwPjRd2g3RGwBUpVA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "100"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 8m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 6m
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:14Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-20
    namespace: kube-system
    resourceVersion: "1751862434501247005"
    uid: 14fa2563-f5d8-4c54-9260-82f897bf80df
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.17-gke.1
          configHash: /6T+c7yPRHHKMhT4+FQp3xU3EJkwPjRd2g3RGwBUpVA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "20"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 120Mi
            requests:
              cpu: 8m
              memory: 120Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 70Mi
            requests:
              cpu: 6m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:14Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-200
    namespace: kube-system
    resourceVersion: "1751862434585951009"
    uid: 88f546b6-67b7-4f07-80c6-7e6d81e0bde8
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.17-gke.1
          configHash: /6T+c7yPRHHKMhT4+FQp3xU3EJkwPjRd2g3RGwBUpVA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "200"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 300Mi
            requests:
              cpu: 8m
              memory: 300Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 6m
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:14Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-50
    namespace: kube-system
    resourceVersion: "1751862434704991010"
    uid: 1061d04d-c693-4aa6-978b-62032d95cb43
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.17-gke.1
          configHash: /6T+c7yPRHHKMhT4+FQp3xU3EJkwPjRd2g3RGwBUpVA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "50"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 8m
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 6m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:14Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-500
    namespace: kube-system
    resourceVersion: "1751862434985167012"
    uid: 791a1125-a1df-4cd3-a691-81ab7ecf17cc
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.17-gke.1
          configHash: /6T+c7yPRHHKMhT4+FQp3xU3EJkwPjRd2g3RGwBUpVA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "500"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 600Mi
            requests:
              cpu: 8m
              memory: 600Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.1@sha256:5b4082aeeb5f4ac1ff08a3ca5be2506a5fc7da6fffc8c8622ce6ce03d048c1e5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 550Mi
            requests:
              cpu: 6m
              memory: 550Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:15Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-windows
    namespace: kube-system
    resourceVersion: "1751862435296287018"
    uid: 9f87ad14-58ee-4d41-a842-0f12d6d02270
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.17-gke.1
          configHash: /6T+c7yPRHHKMhT4+FQp3xU3EJkwPjRd2g3RGwBUpVA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        containers:
        - command:
          - c:\otelsvc.exe
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: KUBERNETES_SERVICE_HOST
            value: kubernetes.default.svc.cluster.local
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: keep
          - name: LINUX_JOB_ACTION
            value: drop
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent-windows:1.15.3-gke.1@sha256:2a18d1da179912ce300330c3b6e036242a7e60094b9b4e66f88dd818ab4edf6b
          imagePullPolicy: IfNotPresent
          name: gke-metrics-agent
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 5m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - c:\otelsvc.exe
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: KUBERNETES_SERVICE_HOST
            value: kubernetes.default.svc.cluster.local
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: keep
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent-windows:1.15.3-gke.1@sha256:2a18d1da179912ce300330c3b6e036242a7e60094b9b4e66f88dd818ab4edf6b
          imagePullPolicy: IfNotPresent
          name: core-metrics-exporter
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 5m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - command:
          - c:\gke_metrics_collector.exe
          env:
          - name: GOMAXPROCS
            value: "1"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto, /conf/kubelet-prober-metrics-collector-config-data.textproto,
              /conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/networkpolicy_antrea-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector-win:20240902_2300_RC0@sha256:091efcb403e37878829ee23d98871c92de27f53c3e9ccd66af7b9141af092f6d
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 200Mi
            requests:
              cpu: 20m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: windows
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: networkpolicy_antrea-metrics-collector-config-data
              path: networkpolicy_antrea-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:54Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: ip-masq-agent
    namespace: kube-system
    resourceVersion: "1751862612774847016"
    uid: 46880e9f-274c-4035-98db-3a77c170f993
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: ip-masq-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: netd-combined
          components.gke.io/component-version: 12.3.1
        creationTimestamp: null
        labels:
          k8s-app: ip-masq-agent
      spec:
        containers:
        - args:
          - --v=2
          - --logtostderr=false
          - --log_file=/dev/stdout
          - --log_file_max_size=0
          - --masq-chain=IP-MASQ
          - --nomasq-all-reserved-ranges
          - --random-fully=$(GKE_INTERNAL_ip_masq_agent_random_fully)
          - --to-ports=$(GKE_INTERNAL_ip_masq_agent_to_ports)
          env:
          - name: GKE_INTERNAL_ip_masq_agent_random_fully
            valueFrom:
              configMapKeyRef:
                key: ip_masq_agent_random_fully_override
                name: netd-config
                optional: true
          - name: GKE_INTERNAL_ip_masq_agent_to_ports
            valueFrom:
              configMapKeyRef:
                key: ip_masq_agent_to_ports_override
                name: netd-config
                optional: true
          envFrom:
          - configMapRef:
              name: netd-config
            prefix: GKE_INTERNAL_
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/ip-masq-agent:v2.12.3-gke.7@sha256:03740fda40585fd458d7d9b9187d1a0d369c861ec51ed74f0962d90a01c2e9e3
          imagePullPolicy: IfNotPresent
          name: ip-masq-agent
          resources:
            requests:
              cpu: 10m
              memory: 16Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
          node.kubernetes.io/masq-agent-ds-ready: "true"
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ip-masq-agent
        serviceAccountName: ip-masq-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: config
              path: ip-masq-agent
            name: ip-masq-agent
            optional: true
          name: config
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:28:35Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "1751862515585599019"
    uid: 4161ad0d-5908-4478-9eec-eea0bd9eb99a
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /bin/sh
          - -c
          - kube-proxy --cluster-cidr=10.190.128.0/17 --oom-score-adj=-998 --v=2 --feature-gates=DisableKubeletCloudCredentialProviders=true,UnauthenticatedHTTP2DOSMitigation=true,KMSv1=true
            --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m
            --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1>>/var/log/kube-proxy.log
            2>&1
          env:
          - name: KUBERNETES_SERVICE_HOST
            value: 192.168.17.13
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/kube-proxy-amd64:v1.32.4-gke.1415000
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
          node.kubernetes.io/kube-proxy-ds-ready: "true"
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/log
            type: ""
          name: varlog
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:24Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: maintenance-handler
      name: maintenance-handler
    name: maintenance-handler
    namespace: kube-system
    resourceVersion: "1751862444369567016"
    uid: f7f5ea2f-7503-4267-89f4-1e85f6f38636
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: maintenance-handler
        name: maintenance-handler
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-maintenance-handler
          components.gke.io/component-version: 1.32.6-gke.2
        creationTimestamp: null
        labels:
          k8s-app: maintenance-handler
          name: maintenance-handler
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
              - matchExpressions:
                - key: cloud.google.com/gke-tpu-accelerator
                  operator: Exists
              - matchExpressions:
                - key: cloud.google.com/machine-family
                  operator: In
                  values:
                  - z3
        containers:
        - args:
          - --logtostderr
          - --taint=cloud.google.com/impending-node-termination::NoSchedule
          - --test-env=false
          - --regular-vm-timeout=1h0m0s
          - --tpu-vm-timeout=5m
          - --sf-timeout=10m
          - --immediate-shutdown=true
          - --kubeconfig=/var/lib/kubelet/kubeconfig
          - --in-cluster=false
          command:
          - ./gpu-maintenance-handler
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CLUSTER_PROJECT
            value: "388364419893"
          - name: CLUSTER_LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: CONTAINER_NAME
            value: gpu-maintenance-handler
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gpu-maintenance-handler:1.32.5-gke.3@sha256:9dd817fbd662ca7852ff88b3bff91bb3c6378c24eb5330270bf3a0ff1e3881a9
          imagePullPolicy: IfNotPresent
          name: maintenance-handler
          ports:
          - containerPort: 8526
            name: metrics
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
          - mountPath: /run/dbus
            name: run-dbus
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: maintenance-handler
        serviceAccountName: maintenance-handler
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/
            type: Directory
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /run/dbus
            type: Directory
          name: run-dbus
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:28:38Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metadata-proxy
      kubernetes.io/cluster-service: "true"
      version: v0.1
    name: metadata-proxy-v0.1
    namespace: kube-system
    resourceVersion: "1751862518247631013"
    uid: 84eb195f-0a20-4791-bf1c-eb2e35631742
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metadata-proxy
        version: v0.1
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metadata-proxy
          kubernetes.io/cluster-service: "true"
          version: v0.1
      spec:
        containers:
        - args:
          - --addr=0.0.0.0:988
          image: k8s.gcr.io/metadata-proxy:v0.1.12
          imagePullPolicy: IfNotPresent
          name: metadata-proxy
          resources:
            limits:
              cpu: 30m
              memory: 25Mi
            requests:
              cpu: 30m
              memory: 25Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --stackdriver-prefix=container.googleapis.com/internal/addons
          - --api-override=https://monitoring.googleapis.com/
          - --source=metadata_proxy:http://127.0.0.1:989?whitelisted=request_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gke.gcr.io/prometheus-to-sd:v0.11.1-gke.1
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources:
            limits:
              cpu: 2m
              memory: 20Mi
            requests:
              cpu: 2m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        hostNetwork: true
        nodeSelector:
          cloud.google.com/metadata-proxy-ready: "true"
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metadata-proxy
        serviceAccountName: metadata-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:50Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nccl-fastsocket-installer
    name: nccl-fastsocket-installer
    namespace: kube-system
    resourceVersion: "1751862470786143018"
    uid: b9247d02-0908-4884-9e22-befa95dcd11f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nccl-fastsocket-installer
    template:
      metadata:
        annotations:
          components.gke.io/component-name: nccl-fast-socket-installer
          components.gke.io/component-version: 1.32.4-gke.6
        creationTimestamp: null
        labels:
          k8s-app: nccl-fastsocket-installer
          name: nccl-fastsocket-installer
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: cloud.google.com/gke-nccl-fastsocket
                  operator: Exists
        automountServiceAccountToken: false
        containers:
        - image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/pause:3.10@sha256:bcbd57ba5653580ec647b16d8163cdd1112df3609129b01f912a8032e48265da
          imagePullPolicy: IfNotPresent
          name: pause
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - sh
          - -c
          - |
            cp /usr/lib/libnccl-net.so $NCCL_INSTALL_DIR/
          env:
          - name: NCCL_INSTALL_DIR
            value: /usr/local/nvidia/lib64
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/fastsocket-installer:1.32.4-gke.6@sha256:5c4837c5ce29f10b0aef7948c89c427a0c8e7ce959460c3133656f38227934b5
          imagePullPolicy: IfNotPresent
          name: nccl-fastsocket-installer
          resources:
            limits:
              memory: 100Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/nvidia/lib64
            name: nvidia-install-lib64-dir-host
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /home/kubernetes/bin/nvidia/lib64
            type: DirectoryOrCreate
          name: nvidia-install-lib64-dir-host
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:51Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: netd
    name: netd
    namespace: kube-system
    resourceVersion: "1751862630761599001"
    uid: 9555349e-738c-43eb-a682-d532bc8df67c
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: netd
    template:
      metadata:
        annotations:
          components.gke.io/component-name: netd-combined
          components.gke.io/component-version: 12.3.1
        creationTimestamp: null
        labels:
          k8s-app: netd
      spec:
        containers:
        - args:
          - --enable-policy-routing=$(ENABLE_POLICY_ROUTING)
          - --enable-source-valid-mark=$(ENABLE_SOURCE_VALID_MARK)
          - --exclude-dns=$(EXCLUDE_DNS)
          - --logtostderr
          - --reconcile-interval-seconds=$(RECONCILE_INTERVAL_SECONDS)
          - --metrics-collectors=$(METRICS_COLLECTORS)
          - --metrics-address=$(METRICS_ADDRESS)
          - --stack-type=$(STACK_TYPE)
          env:
          - name: ENABLE_POLICY_ROUTING
            value: "true"
          - name: ENABLE_SOURCE_VALID_MARK
            value: "false"
          - name: EXCLUDE_DNS
            value: "false"
          - name: RECONCILE_INTERVAL_SECONDS
            valueFrom:
              configMapKeyRef:
                key: reconcile_interval_seconds
                name: netd-config
          - name: METRICS_COLLECTORS
            valueFrom:
              configMapKeyRef:
                key: metrics_collectors
                name: networking-metrics-config
          - name: METRICS_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: metrics_address
                name: networking-metrics-config
          - name: STACK_TYPE
            valueFrom:
              configMapKeyRef:
                key: stack_type
                name: networking-metrics-config
          - name: CURRENT_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/netd:v0.9.8-gke.3@sha256:a033bb89bd3a0550cb000e3d26c22bf3108c3165100269e08fece6c1d8398457
          imagePullPolicy: IfNotPresent
          name: netd
          resources:
            requests:
              cpu: 2m
              memory: 30Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/var/lib/cni/networks/gke-pod-network
            name: gke-pod-network
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/netd-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: METRICS_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: metrics_address
                name: networking-metrics-config
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: netd-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250219_2300_RC0@sha256:417803914b2912d9d64e2df7b9cfc8770675076ed912b3ec1f52a0e4104f6f5f
          imagePullPolicy: IfNotPresent
          name: netd-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: netd-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - env:
          - name: MIGRATE_TO_DPV2
            value: "false"
          - name: CNI_SPEC_TEMPLATE
            valueFrom:
              configMapKeyRef:
                key: cni_spec_template
                name: netd-config
          - name: CNI_SPEC_NAME
            valueFrom:
              configMapKeyRef:
                key: cni_spec_name
                name: netd-config
          - name: CNI_SPEC_IPV6_ROUTE
            valueFrom:
              configMapKeyRef:
                key: cni_spec_ipv6_route
                name: netd-config
          - name: ENABLE_CALICO_NETWORK_POLICY
            valueFrom:
              configMapKeyRef:
                key: enable_calico_network_policy
                name: netd-config
          - name: WRITE_CALICO_CONFIG_FILE
            value: "false"
          - name: ENABLE_IPV6
            valueFrom:
              configMapKeyRef:
                key: enable_ipv6
                name: netd-config
          - name: ENABLE_CILIUM_PLUGIN
            valueFrom:
              configMapKeyRef:
                key: enable_cilium_plugin
                name: netd-config
          - name: ISTIO_CNI_CONFIG
            valueFrom:
              configMapKeyRef:
                key: cni_network_config
                name: istio-cni-plugin-config
                optional: true
          - name: KUBERNETES_SERVICE_HOST
            valueFrom:
              configMapKeyRef:
                key: master_ip
                name: netd-config
          - name: CILIUM_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cilium_chaining_mode
                name: netd-config
          - name: CURRENT_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_FAST_START_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: fast-start-namespaces
                name: dpv2-fast-start-config
                optional: true
          - name: RUN_CNI_WATCHDOG
            value: "true"
          - name: CILIUM_WATCHDOG_SUCCESS_WAIT
            valueFrom:
              configMapKeyRef:
                key: cilium_watchdog_success_wait_seconds
                name: netd-config
          - name: CILIUM_WATCHDOG_FAILURE_RETRY
            valueFrom:
              configMapKeyRef:
                key: cilium_watchdog_failure_retry_seconds
                name: netd-config
          - name: CILIUM_WATCHDOG_FAST_START_WAIT
            valueFrom:
              configMapKeyRef:
                key: cilium_watchdog_fast_start_wait_seconds
                name: netd-config
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/netd-init:v0.9.8-gke.3@sha256:3fed6ef6b5e3bacdb8f0374760f032d66e02edf4121f9797bb5898174b4e701e
          imagePullPolicy: IfNotPresent
          name: install-cni
          resources:
            requests:
              cpu: 1m
              memory: 5Mi
          restartPolicy: Always
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
          - mountPath: /host/home/kubernetes/bin
            name: kubernetes-bin
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: netd
        serviceAccountName: netd
        terminationGracePeriodSeconds: 0
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/cni/net.d
            type: Directory
          name: cni-net-dir
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/lib/cni/networks/gke-pod-network
            type: DirectoryOrCreate
          name: gke-pod-network
        - configMap:
            defaultMode: 420
            items:
            - key: netd-metrics-collector-config-data
              path: netd-metrics-collector-config-data.textproto
            name: netd-metrics-collector-config-map
          name: netd-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:28:01Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: node-local-dns
      kubernetes.io/cluster-service: "true"
    name: node-local-dns
    namespace: kube-system
    resourceVersion: "1751862628697743015"
    uid: 9ff3105a-26b9-4160-bf69-eb664dca4ca1
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: node-local-dns
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
          components.gke.io/component-name: nodelocaldns
          components.gke.io/component-version: 32.3.3
          prometheus.io/port: "9253"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          k8s-app: node-local-dns
          networking.gke.io/dns-provider: cloud-dns
      spec:
        containers:
        - args:
          - -localip
          - 169.254.20.10,34.118.224.10
          - -conf
          - /etc/Corefile
          - -kubednscm
          - /etc/kube-dns
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-node-cache:1.25.0-gke.14@sha256:2f435898ee4835ca55ce755401f17c718d7ac6b9d8778fb1b5989e304b08487c
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 169.254.20.10
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: node-cache
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9253
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 25m
              memory: 20Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              - NET_ADMIN
              - NET_RAW
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /etc/coredns
            name: config-volume
          - mountPath: /etc/kube-dns
            name: kube-dns-config
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nodelocaldns-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nodelocaldns-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250515_2300_RC0@sha256:43aa8ca949c6f716e9bc8aee1fb6019b291145633e8bb4b9c1de4619b5d8c78e
          imagePullPolicy: IfNotPresent
          name: nodelocaldns-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nodelocaldns-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        nodeSelector:
          addon.gke.io/node-local-dns-ds-ready: "true"
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: node-local-dns
        serviceAccountName: node-local-dns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - configMap:
            defaultMode: 420
            name: kube-dns
            optional: true
          name: kube-dns-config
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile.base
            name: node-local-dns
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: nodelocaldns-metrics-collector-config-data
              path: nodelocaldns-metrics-collector-config-data.textproto
            name: nodelocaldns-metrics-collector-config-map
          name: nodelocaldns-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:23Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-large-cos
    namespace: kube-system
    resourceVersion: "1751862443239823018"
    uid: 9d0df769-e342-445c-8373-4f6eb575989e
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.32.5-gke.4
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "63"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - cos
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.32.4-gke.6@sha256:f5c29978cbfdb3fa85fcf3ac39d1283ada5e5724bbe2cc6e05962de77a11dd59
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250519_2300_RC0@sha256:8eb5ca83cc3da9605c38ff5a839a9eb4123434ca631d715193bbdc8262bc3497
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
              echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install --version=latest || exit 1
            elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install || exit 1
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed."
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
          image: cos-nvidia-installer:fixed
          imagePullPolicy: Never
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /build/cos-tools
            name: cos-tools
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.32.4-gke.6@sha256:7ef573f6c76f891e4d9f835c7a1f0cbf1d9a2537b6e8c4a8449126c581784906
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /var/lib/cos-tools
            type: DirectoryOrCreate
          name: cos-tools
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: DirectoryOrCreate
          name: vulkan-icd-mount
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:23Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-large-ubuntu
    namespace: kube-system
    resourceVersion: "1751862443703487011"
    uid: 278f2a41-2f87-411a-bff0-31c69f1a3348
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.32.5-gke.4
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "63"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - ubuntu
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.32.4-gke.6@sha256:f5c29978cbfdb3fa85fcf3ac39d1283ada5e5724bbe2cc6e05962de77a11dd59
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250519_2300_RC0@sha256:8eb5ca83cc3da9605c38ff5a839a9eb4123434ca631d715193bbdc8262bc3497
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /usr/local/bin/ubuntu-nvidia-install
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /driver/home/kubernetes/bin/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed"
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          image: gke-nvidia-installer:fixed
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /boot
            name: boot
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /driver/home/kubernetes/bin
            name: kubernetes-bin
          - mountPath: /etc/nvidia
            name: nvidia-config
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.32.4-gke.6@sha256:7ef573f6c76f891e4d9f835c7a1f0cbf1d9a2537b6e8c4a8449126c581784906
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /boot
            type: Directory
          name: boot
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-medium-cos
    namespace: kube-system
    resourceVersion: "1751862443057007019"
    uid: 882182c8-7e6f-4f06-a1fc-d3378cc2f751
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.32.5-gke.4
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "64"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "15"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - cos
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.32.4-gke.6@sha256:f5c29978cbfdb3fa85fcf3ac39d1283ada5e5724bbe2cc6e05962de77a11dd59
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 75Mi
            requests:
              cpu: 50m
              memory: 75Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250519_2300_RC0@sha256:8eb5ca83cc3da9605c38ff5a839a9eb4123434ca631d715193bbdc8262bc3497
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
              echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install --version=latest || exit 1
            elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install || exit 1
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed."
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
          image: cos-nvidia-installer:fixed
          imagePullPolicy: Never
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /build/cos-tools
            name: cos-tools
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.32.4-gke.6@sha256:7ef573f6c76f891e4d9f835c7a1f0cbf1d9a2537b6e8c4a8449126c581784906
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /var/lib/cos-tools
            type: DirectoryOrCreate
          name: cos-tools
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: DirectoryOrCreate
          name: vulkan-icd-mount
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:23Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-medium-ubuntu
    namespace: kube-system
    resourceVersion: "1751862443616383009"
    uid: f3dec1d3-5697-48fa-a543-debf2a24723c
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.32.5-gke.4
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "64"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "15"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - ubuntu
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.32.4-gke.6@sha256:f5c29978cbfdb3fa85fcf3ac39d1283ada5e5724bbe2cc6e05962de77a11dd59
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 75Mi
            requests:
              cpu: 50m
              memory: 75Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250519_2300_RC0@sha256:8eb5ca83cc3da9605c38ff5a839a9eb4123434ca631d715193bbdc8262bc3497
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /usr/local/bin/ubuntu-nvidia-install
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /driver/home/kubernetes/bin/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed"
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          image: gke-nvidia-installer:fixed
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /boot
            name: boot
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /driver/home/kubernetes/bin
            name: kubernetes-bin
          - mountPath: /etc/nvidia
            name: nvidia-config
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.32.4-gke.6@sha256:7ef573f6c76f891e4d9f835c7a1f0cbf1d9a2537b6e8c4a8449126c581784906
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /boot
            type: Directory
          name: boot
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:22Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-small-cos
    namespace: kube-system
    resourceVersion: "1751862442917279004"
    uid: d2c80859-6beb-414d-af62-a9f210cd15b9
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.32.5-gke.4
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "16"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - cos
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.32.4-gke.6@sha256:f5c29978cbfdb3fa85fcf3ac39d1283ada5e5724bbe2cc6e05962de77a11dd59
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 50Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250519_2300_RC0@sha256:8eb5ca83cc3da9605c38ff5a839a9eb4123434ca631d715193bbdc8262bc3497
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
              echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install --version=latest || exit 1
            elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install || exit 1
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed."
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
          image: cos-nvidia-installer:fixed
          imagePullPolicy: Never
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /build/cos-tools
            name: cos-tools
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.32.4-gke.6@sha256:7ef573f6c76f891e4d9f835c7a1f0cbf1d9a2537b6e8c4a8449126c581784906
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /var/lib/cos-tools
            type: DirectoryOrCreate
          name: cos-tools
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: DirectoryOrCreate
          name: vulkan-icd-mount
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:27:23Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-small-ubuntu
    namespace: kube-system
    resourceVersion: "1751862443315503012"
    uid: 4d8148a4-c10b-4b98-aef9-d7a62c65ce8c
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.32.5-gke.4
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "16"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - ubuntu
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.32.4-gke.6@sha256:f5c29978cbfdb3fa85fcf3ac39d1283ada5e5724bbe2cc6e05962de77a11dd59
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 50Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250519_2300_RC0@sha256:8eb5ca83cc3da9605c38ff5a839a9eb4123434ca631d715193bbdc8262bc3497
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /usr/local/bin/ubuntu-nvidia-install
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /driver/home/kubernetes/bin/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed"
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          image: gke-nvidia-installer:fixed
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /boot
            name: boot
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /driver/home/kubernetes/bin
            name: kubernetes-bin
          - mountPath: /etc/nvidia
            name: nvidia-config
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.32.4-gke.6@sha256:7ef573f6c76f891e4d9f835c7a1f0cbf1d9a2537b6e8c4a8449126c581784906
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /boot
            type: Directory
          name: boot
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:28:07Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: parallelstore-csi-driver
    name: parallelstore-csi-node
    namespace: kube-system
    resourceVersion: "1751863127102927008"
    uid: b7a95adf-0411-4eb2-b490-699c7adae3cc
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: parallelstore-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: parallelstorecsi
          components.gke.io/component-version: 0.4.27
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: parallelstore-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --nodeid=$(KUBE_NODE_NAME)
          - --node=true
          - --cluster-network=devops-vpcnw
          - --network-project-id=upheld-terminus-462616-m0
          - --sidecar-image=$(SIDECAR_IMAGE)
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: SIDECAR_IMAGE
            valueFrom:
              configMapKeyRef:
                key: sidecar-image
                name: parallelstorecsi-image-config
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/parallelstore-csi-driver:v0.2.6-gke.5@sha256:b3539ef81552c8de30d399d26a4e3d43dc30cecd8f96a84cf6f75d8e217ab30b
          imagePullPolicy: Always
          name: parallelstore-csi-driver
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: kubelet-dir
          - mountPath: /csi
            name: socket-dir
          - mountPath: /sys
            name: host-sysfs
          - mountPath: /gke-parallelstore-tmp
            name: gke-parallelstore-tmp
        - args:
          - --v=3
          - --csi-address=/csi/csi.sock
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/parallelstore.csi.storage.gke.io/csi.sock
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.38@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
          imagePullPolicy: IfNotPresent
          name: csi-driver-registrar
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /registration
            name: registration-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/arch: amd64
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: parallelstore-csi-node-sa
        serviceAccountName: parallelstore-csi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/parallelstore.csi.storage.gke.io/
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /sys
            type: Directory
          name: host-sysfs
        - emptyDir: {}
          name: gke-parallelstore-tmp
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:28:13Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gcp-compute-persistent-disk-csi-driver
    name: pdcsi-node
    namespace: kube-system
    resourceVersion: "1751862840845567021"
    uid: 39f37c83-50b5-4d27-bdb9-433f888bfc0f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gcp-compute-persistent-disk-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: pdcsi
          components.gke.io/component-version: 0.21.32
        creationTimestamp: null
        labels:
          k8s-app: gcp-compute-persistent-disk-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=/csi/csi.sock
          - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.38@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar
              - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
              - --mode=kubelet-registration-probe
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: csi-driver-registrar
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --run-controller-service=false
          - --run-node-service=true
          - --enable-data-cache
          - --enable-data-cache=true
          - --node-name=$(KUBE_NODE_NAME)
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.17.12-gke.1@sha256:a6160af79c706f467ed565672e75e9310474d00f89da7e433665015baec33fa3
          imagePullPolicy: IfNotPresent
          name: gce-pd-driver
          resources:
            limits:
              memory: 450Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: kubelet-dir
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /dev
            name: device-dir
          - mountPath: /etc/udev
            name: udev-rules-etc
          - mountPath: /lib/udev
            name: udev-rules-lib
          - mountPath: /run/udev
            name: udev-socket
          - mountPath: /sys
            name: sys
          - mountPath: /tmp
            name: tmp
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /etc/lvm
            name: lvm-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: pdcsi-node-sa
        serviceAccountName: pdcsi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/pd.csi.storage.gke.io/
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /etc/udev
            type: Directory
          name: udev-rules-etc
        - hostPath:
            path: /lib/udev
            type: Directory
          name: udev-rules-lib
        - hostPath:
            path: /run/udev
            type: Directory
          name: udev-socket
        - hostPath:
            path: /sys
            type: Directory
          name: sys
        - emptyDir:
            sizeLimit: 5Mi
          name: tmp
        - emptyDir:
            sizeLimit: 5Mi
          name: lvm-dir
        - hostPath:
            path: /lib/modules
            type: Directory
          name: modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:28:13Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gcp-compute-persistent-disk-csi-driver
    name: pdcsi-node-windows
    namespace: kube-system
    resourceVersion: "1751862493845247000"
    uid: 51de05d3-56a6-461d-8e13-8dcb62e6fa93
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gcp-compute-persistent-disk-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: pdcsi
          components.gke.io/component-version: 0.21.32
        creationTimestamp: null
        labels:
          k8s-app: gcp-compute-persistent-disk-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=unix://C:\\csi\\csi.sock
          - --kubelet-registration-path=C:\\var\\lib\\kubelet\\plugins\\pd.csi.storage.gke.io\\csi.sock
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.38@sha256:cf7f967013fe91d11d7c1a7c88b5159b67c81a163f67d47e9345df54d8998e69
          imagePullPolicy: IfNotPresent
          name: csi-driver-registrar
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 5m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --run-controller-service=false
          - --run-node-service=true
          command:
          - /gce-pd-csi-driver
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.17.12-gke.1@sha256:a6160af79c706f467ed565672e75e9310474d00f89da7e433665015baec33fa3
          imagePullPolicy: IfNotPresent
          name: gce-pd-driver
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 5m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: C:\var\lib\kubelet
            mountPropagation: None
            name: kubelet-dir
          - mountPath: C:\csi
            name: plugin-dir
          - mountPath: \\.\pipe\csi-proxy-volume-v1
            name: csi-proxy-volume-v1
          - mountPath: \\.\pipe\csi-proxy-filesystem-v1
            name: csi-proxy-filesystem-v1
          - mountPath: \\.\pipe\csi-proxy-disk-v1
            name: csi-proxy-disk-v1
          - mountPath: \\.\pipe\csi-proxy-disk-v1beta2
            name: csi-proxy-disk-pipe
          - mountPath: \\.\pipe\csi-proxy-volume-v1beta1
            name: csi-proxy-volume-pipe
          - mountPath: \\.\pipe\csi-proxy-filesystem-v1beta1
            name: csi-proxy-filesystem-pipe
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: windows
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: pdcsi-node-sa
        serviceAccountName: pdcsi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: \\.\pipe\csi-proxy-disk-v1
            type: ""
          name: csi-proxy-disk-v1
        - hostPath:
            path: \\.\pipe\csi-proxy-volume-v1
            type: ""
          name: csi-proxy-volume-v1
        - hostPath:
            path: \\.\pipe\csi-proxy-filesystem-v1
            type: ""
          name: csi-proxy-filesystem-v1
        - hostPath:
            path: \\.\pipe\csi-proxy-disk-v1beta2
            type: ""
          name: csi-proxy-disk-pipe
        - hostPath:
            path: \\.\pipe\csi-proxy-volume-v1beta1
            type: ""
          name: csi-proxy-volume-pipe
        - hostPath:
            path: \\.\pipe\csi-proxy-filesystem-v1beta1
            type: ""
          name: csi-proxy-filesystem-pipe
        - hostPath:
            path: \var\lib\kubelet\plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: \var\lib\kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: \var\lib\kubelet\plugins\pd.csi.storage.gke.io
            type: DirectoryOrCreate
          name: plugin-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:26:21Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: runsc-metric-server
      kubernetes.io/cluster-service: "true"
    name: runsc-metric-server
    namespace: kube-system
    resourceVersion: "1751862395333743018"
    uid: c172d317-edf1-437a-b62c-2269398eaa9a
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: runsc-metric-server
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: runsc-metric-server
      spec:
        containers:
        - command:
          - /runsc-metric-server
          - --metric-server=127.0.0.1:9115
          - --root=/run/containerd/runsc/k8s.io
          - --alsologtostderr=true
          - metric-server
          - --allow-unknown-root=true
          - --exporter-prefix=
          - --pid-file=/run/containerd/runsc/metric-server.pid
          image: gcr.io/distroless/static
          imagePullPolicy: IfNotPresent
          name: runsc-metric-server
          resources:
            limits:
              cpu: 25m
              memory: 64Mi
            requests:
              cpu: 3m
              memory: 12Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /runsc-metric-server
            name: runscbin
          - mountPath: /run/containerd/runsc
            name: containerdrunsc
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        nodeSelector:
          kubernetes.io/os: linux
          sandbox.gke.io/runtime: gvisor
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 0
        tolerations:
        - effect: NoSchedule
          key: sandbox.gke.io/runtime
          operator: Equal
          value: gvisor
        volumes:
        - hostPath:
            path: /home/containerd/usr/local/sbin/runsc
            type: ""
          name: runscbin
        - hostPath:
            path: /run/containerd/runsc
            type: ""
          name: containerdrunsc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 100%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-07-07T04:28:25Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: tpu-device-plugin
    name: tpu-device-plugin
    namespace: kube-system
    resourceVersion: "1751862505156079024"
    uid: 94cc1e21-26b8-45e2-a684-bc9287eb579e
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: tpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: tpu-device-plugin
          components.gke.io/component-version: 1.32.7-gke.3
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: tpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-tpu-accelerator
                  operator: Exists
                - key: gke-no-default-tpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
        containers:
        - env:
          - name: CLUSTER_PROJECT
            value: "388364419893"
          - name: CLUSTER_LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: CONTAINER_NAME
            value: tpu-device-plugin
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/tpu-device-plugin:1.32.4-gke.3@sha256:4d0b46add0c421ab9a310d775ce8b846ab763d01ea724662e1345f467174290f
          imagePullPolicy: IfNotPresent
          name: tpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 80Mi
            requests:
              cpu: 80m
              memory: 80Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /tmp/tpu_logs
            name: tpu-logs
        - args:
          - /bin/sh
          - -c
          - tail -n+1 -F /tmp/tpu_logs/tpu_driver.INFO
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250507.00_p0@sha256:0f863362719eef67395f2cb7b484e0217a448d2739d12c4d9aa2b977ac60de2b
          imagePullPolicy: IfNotPresent
          name: sidecar-log-collector
          resources:
            limits:
              memory: 20Mi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/tpu_logs
            name: tpu-logs
            readOnly: true
        - args:
          - --logtostderr
          - --census_enabled=false
          - --gid=
          - --uid=
          - --chroot=
          command:
          - vbar_control_agent_files/bin/vbar_control_agent
          env:
          - name: TPU_SKIP_MDS_QUERY
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/vbar_control_agent@sha256:0047fe3e5e06109d6bcf0d11ba8bda790606958c888e6254d8ac1cbcc5a331da
          imagePullPolicy: IfNotPresent
          name: vbar-control-agent
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 10m
              memory: 150Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /tpu_network_optimizer.sh
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/tpu_network_optimizer:tpu_network_optimizer_20241212.00_p0@sha256:ad1446302c2a7714af62959dd84fc9cd47552085cac4f03580cb4c5eb523e81c
          imagePullPolicy: IfNotPresent
          name: tpu-network-optimization
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys
            name: sys
          - mountPath: /proc
            name: proc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: tpu-device-plugin-sa
        serviceAccountName: tpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: DirectoryOrCreate
          name: device-plugin
        - hostPath:
            path: /dev
            type: DirectoryOrCreate
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: DirectoryOrCreate
          name: pod-resources
        - hostPath:
            path: /etc/tpu
            type: DirectoryOrCreate
          name: tpu-env
        - hostPath:
            path: /tmp/tpu_logs
            type: DirectoryOrCreate
          name: tpu-logs
        - hostPath:
            path: /sys
            type: Directory
          name: sys
        - hostPath:
            path: /proc
            type: Directory
          name: proc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:41Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
    name: gmp-operator
    namespace: gke-gmp-system
    resourceVersion: "1751862686601439014"
    uid: 94aad3d7-22ce-42df-80e1-60215ea99c57
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: gmp-operator
        app.kubernetes.io/part-of: gmp
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.3-gke.1
        creationTimestamp: null
        labels:
          app: managed-prometheus-operator
          app.kubernetes.io/component: operator
          app.kubernetes.io/name: gmp-operator
          app.kubernetes.io/part-of: gmp
          app.kubernetes.io/version: 0.15.3
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --operator-namespace=gke-gmp-system
          - --public-namespace=gmp-public
          - --webhook-addr=:10250
          - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVLekNDQXBPZ0F3SUJBZ0lSQUtabDhwWWgwYlVFTkRFdjBOTTF4VWd3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa05UYzRaR0k0T0dZdE9XSTRaUzAwTVdReUxXRmhaV1l0TlRSaE9XUTBabVk0WlRaaApNQjRYRFRJMU1EY3dOekEwTVRrMU0xb1hEVE13TURjd05qQTBNakUxTTFvd09ERTJNRFFHQTFVRUF4TXRaMjF3CkxXOXdaWEpoZEc5eUxtZHJaUzFuYlhBdGMzbHpkR1Z0TG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzTUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBaUdkeGMxU2kxWkZoR0w5Z2I2ZmpSQlczTHVRWQovamRzTUJySExGdWJRMWxTejdhbktzVzRxWitHcUpEVEw4UTUxT0tGcHNJTEpZMzhEMEk4eFVqVjdVTnY0UmU5CkNjUlFUa0trUkRJbXh1MUowUGpKVGxGaitoek1laGxDSWppS1dwNUpzMVEwQ3NaODF5SkdhQ2lnTFhkYnRENWgKVW5GY2NkZFZrVnhNTzRoUHhqcGNlckJLY1hDWGQ2aUVnbXNyWFNmNGFpMHJuMW02U1JwK1hwNkoxS0NvSFp5NgoyREtRZEd0dHZxSVRya0FhaDRCellZcjJWN0RxVnZrdEdqWEpNMUx0Skg5NjhycTJYMDJRQUZCTlNOQm41US9kCjYzeGhLYWp5dFZnVXZpc1p4WWpubEh4dGNKdEZKMUR1ZDVMRG5XNElPS1RROEZUbnBuRE92ZEdtT1FJREFRQUIKbzRHNE1JRzFNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQgpCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTUE9SWGlNZkJnVVlOUnBERG1rdWx0CjNCK1VDREJWQmdOVkhSRUVUakJNZ2d4bmJYQXRiM0JsY21GMGIzS0NHMmR0Y0MxdmNHVnlZWFJ2Y2k1bmEyVXQKWjIxd0xYTjVjM1JsYllJZloyMXdMVzl3WlhKaGRHOXlMbWRyWlMxbmJYQXRjM2x6ZEdWdExuTjJZekFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVlFQVJKbURMYUhzNGxobGVsekNrQ1EzaytwWUZmTGM3TXh2eVpMb1Evbm1zSVNqCkI4SWh4b08yWlRyWjhOYkJEbkErMmlmNjBXS1Y0YmJzQklFV0FpMVRZWkh6VFpXRnkyeHJ1NGlmWXc4OFRvTXoKNDFMZ1ZCMVYxZ2lWRnhNUHBoQ2E5TWc4LzZLZHNJSldWREV6WU5CdHVWWjlDRGM1c25manViSzloa2pwYkxIWQpjYlYvVnJqVkMyMTBpZkRTWTF0cm10U0M4aXNrOTE4RUpOWklDQjNyVVlBMzhkQ3FmaTZId1g0QlhmY010VlVVCjFqTnNyaXJERHdTUU41dVVvdGxhZEM1WmtabC8wZ1hrMFhoWE5VblRhNlNRY3hNQU45Q0FFTFg4VXZqMGpUU0kKTmJ5amIya0VzazNtV21zZkRVbGhuaHFnbXRsb0N4eGg1UjEzRExMMG1zbmRLcTBkaThCREU1aHNEUENNU1ZjNwp4UkNsVnIwZDY5dlJZaWdtM20yaW1neUJidzdNWDU2cjN4eTVzV1pzR2RIMTdlZGJoL1RpYlN6YXRVbUJ5V3MrCmxLYVdqRzdQdklLZlNSMjBoR0hLN0FaK1ZCWnNBakwxVGtXOE1MSXdnaE13bUZRMldLOVFkY1pFQTdEclRqQUgKNk5mV1VOM2t6THR2bW9hU3ZLQW0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBaUdkeGMxU2kxWkZoR0w5Z2I2ZmpSQlczTHVRWS9qZHNNQnJITEZ1YlExbFN6N2FuCktzVzRxWitHcUpEVEw4UTUxT0tGcHNJTEpZMzhEMEk4eFVqVjdVTnY0UmU5Q2NSUVRrS2tSRElteHUxSjBQakoKVGxGaitoek1laGxDSWppS1dwNUpzMVEwQ3NaODF5SkdhQ2lnTFhkYnRENWhVbkZjY2RkVmtWeE1PNGhQeGpwYwplckJLY1hDWGQ2aUVnbXNyWFNmNGFpMHJuMW02U1JwK1hwNkoxS0NvSFp5NjJES1FkR3R0dnFJVHJrQWFoNEJ6CllZcjJWN0RxVnZrdEdqWEpNMUx0Skg5NjhycTJYMDJRQUZCTlNOQm41US9kNjN4aEthanl0VmdVdmlzWnhZam4KbEh4dGNKdEZKMUR1ZDVMRG5XNElPS1RROEZUbnBuRE92ZEdtT1FJREFRQUJBb0lCQUFJazN4cUZHbXloTlAyZwp0M1UxMWp1S0hGZWhOL2ZaK3VvOEo0U04yWkJLMFlPSWoxTGJxZ0lIaXdRd0I1UEZBYlEwRGMzLzE1RkM3TEw0Ck0zQ1Y2eC9vT3hSV2pVNy9uaFFHMWVKcEIrVkJVbE5WcjhOYWdlZnE1emRsbVgya2RoOUR4T3lMenFnYk05ZmwKVnVZNCtrQ1FzMWt2VUZRTmlscVRQQW4xZ1pDL2QwSkpQdUxwSkkxVmhySzhtcFZ2bWx5R3VlVmgwdlRNU3F6VgpBS3NtRU15NVVwZTF6cGI5M1A3OWtpdlY0MUp5OUsvNnF5b0EzUUtjVjcyeHFZMGVsMHo1Z0wyRk8xcGVPb0hkCnBIRncrL0h4TkJLUnF2S0hwbkc5WTBxdmJlYXRRRW9iRk03dzE2bkdmUm1SRmdsTkhJUVpPMnFNZ1d3TWduODQKdnp6R0QyRUNnWUVBdnhMQkU1bDZNSWlobGF3OEQ2b1RucDhqaTR1cmxRQk1tYnBPVmg0M0d1WU1sTUNGdVJMWApnbTR0Q2t6RW5HZXBxbmZlM0VMR1BpSzF5cGdEMmpHZ3lyRDRFM0lTd3h2R1BFWjUyUVR6bkh6NWZMSE43eEIyCmxpNS9YR1dOS2ZYd0I3M0FXelJZMDFIcm1BMHFBOFE3b0cxOVFzZytBY2dZQzFGejVKaDBYQmtDZ1lFQXRzRVUKS0xCKzFPdnRPWFZjNkNVOTJSRGY4YlFzVTRYN3BRd0JEelVSelZ0MWhlT2ZiYTBEVlNLMmdTcFhNc25qbVN6VwpGWklpVUFZc05oSnJ0ZTdxTVNpWTNQdmwvanpEWFVicmpyT3ZHZCtuRTRRV3grSU15ZXZUejZOVTJnc1MrWlplCmZFZGYzeTFuYTdxMUtra3dPbmJjUzlpY1B6RXpmN3Yzbk9KWTN5RUNnWUVBc3dWRVJ6UEdLeERvckE0cVc5YlMKK1F4TFJtUi9SMlIzWUpVUTdsank4azNXUGN5L3ZXNHM0dlNOV0pnaW9oUHlBRmk5UW91QnFCZm5VY0RwNHhZYQplNjRoVUQ3UjIySDdjdC9wSys4YXZHVFBjQWc3VlNDTXF4czNrdjlHcXFqVjBycnpMY0MyOUk5TmVESGxTcEFoCithWjc5UVVlSzVjcEIvbXg1dHo4TUlrQ2dZRUFwUkQ3M2t5Y0lrRCtRWm1wMHR4Z1lvRUZaTkR5QUhiUjloOUQKamJMSFk0NnFOY2FFcDVGUG8wUDVSKzB3V1dWVXQzTng0b1hkakI0bkxLZXl0ZDhYbEZNd3p0aU93ZldzRjhJSQozUm1hbkdvUUJHYVlGTzR0MHV1NG9xREo4Uzl6Y2cvSlE4Tkw2czZkelFZVXdCN2UrcytFNXRTOU82NTY3M0tkCmtndzNiVUVDZ1lCcFBxWWZJYjVMemZiYnVvUXN3bWZ3VjJFVXlWSVFNaFlneFg3T2xET2ZWQWpmbmMvcTFGTmYKVHRsL3hWTTI2Rld3eG1WMTZTWXk0d3o4STBNRENweCt4VlJmdUZvTVpZWUhBazllVnZGQ1hhYjBxQmVNTjJKaApIV3FzN1FJOTV6a08vOUh6TmRsZG9pdTJ6Y3d1cm11c3JGMHRnY0dCdC9FN2k0bnVHQ3hMVkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
          - --project-id=upheld-terminus-462616-m0
          - --location=asia-south1
          - --cluster=poc-gke-autopilot
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.3-gke.0@sha256:0e51d4ab84bac684012b2b52a2d38f3c340b4647f3879b77d70ae18ac4bb7271
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: operator
          ports:
          - containerPort: 10250
            name: web
            protocol: TCP
          - containerPort: 18080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: certs
        dnsPolicy: ClusterFirst
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: operator
        serviceAccountName: operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: certs
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-07-07T04:31:26Z"
      lastUpdateTime: "2025-07-07T04:31:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-07-07T04:27:41Z"
      lastUpdateTime: "2025-07-07T04:31:26Z"
      message: ReplicaSet "gmp-operator-58b5c7f5bb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:41Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: rule-evaluator
    namespace: gke-gmp-system
    resourceVersion: "1751862678860895001"
    uid: f997dde0-c4ab-4dd5-bf7c-bd8a8f8e4afe
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: rule-evaluator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.3-gke.1
        creationTimestamp: null
        labels:
          app: managed-prometheus-rule-evaluator
          app.kubernetes.io/name: rule-evaluator
          app.kubernetes.io/version: 0.15.3
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --config-file=/prometheus/config/config.yaml
          - --config-file-output=/prometheus/config_out/config.yaml
          - --config-dir=/etc/rules
          - --config-dir-output=/prometheus/rules_out
          - --watched-dir=/etc/secrets
          - --reload-url=http://127.0.0.1:19092/-/reload
          - --ready-url=http://127.0.0.1:19092/-/ready
          - --listen-address=:19093
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.3-gke.0@sha256:084a78cf04fc50523ba37639d3cac8d33a6a07de5cf641c85b9c9ef71f653d51
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19093
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config
            name: config
            readOnly: true
          - mountPath: /prometheus/config_out
            name: config-out
          - mountPath: /etc/rules
            name: rules
            readOnly: true
          - mountPath: /prometheus/rules_out
            name: rules-out
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        - args:
          - --config.file=/prometheus/config_out/config.yaml
          - --web.listen-address=:19092
          - --export.user-agent-mode=gke
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/rule-evaluator:v0.15.3-gke.0@sha256:8306dabf64f36188eaedd022dca0362a4a833efec313e8c922543490e82887f4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: evaluator
          ports:
          - containerPort: 19092
            name: r-eval-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 1G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/rules
            name: rules-out
            readOnly: true
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - touch /prometheus/config_out/config.yaml
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250407.00_p0@sha256:b903ad51976ccd68a817f445c5b6df8bf3655bfd1b30ca989472f7a99f930fc5
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: collector
        serviceAccountName: collector
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: rule-evaluator
          name: config
        - emptyDir: {}
          name: config-out
        - configMap:
            defaultMode: 420
            name: rules-generated
          name: rules
        - emptyDir: {}
          name: rules-out
        - name: rules-secret
          secret:
            defaultMode: 420
            secretName: rules
  status:
    conditions:
    - lastTransitionTime: "2025-07-07T04:31:18Z"
      lastUpdateTime: "2025-07-07T04:31:18Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-07-07T04:27:41Z"
      lastUpdateTime: "2025-07-07T04:31:18Z"
      message: ReplicaSet "rule-evaluator-7c94cfd4d9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:58Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: EnsureExists
      app: antrea
      component: antrea-controller
    name: antrea-controller
    namespace: kube-system
    resourceVersion: "1751862478406015020"
    uid: b24aa874-128c-48ac-b0dd-d6a417374c0e
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: antrea
        component: antrea-controller
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: networkpolicy-antrea
          components.gke.io/component-version: 0.4.3
          prometheus.io/port: "10352"
          prometheus.io/scrape: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          app: antrea
          component: antrea-controller
      spec:
        containers:
        - args:
          - --config
          - /etc/antrea/antrea-controller.conf
          - --logtostderr=true
          - --v=0
          command:
          - /antrea-controller
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: SERVICEACCOUNT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.serviceAccountName
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/antrea:v1.4.0-gke.38@sha256:19d567d11297a5cc221df5557d4d98544d4fbef5b13c8eef01c5f732e9d694aa
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /livez
              port: api
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: antrea-controller
          ports:
          - containerPort: 10349
            name: api
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /readyz
              port: api
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/antrea/antrea-controller.conf
            name: antrea-config
            readOnly: true
            subPath: antrea-controller.conf
          - mountPath: /var/run/antrea/antrea-controller-tls
            name: antrea-controller-tls
          - mountPath: /var/log/antrea
            name: host-var-log-antrea
          - mountPath: /var/run/antrea
            name: var-run-antrea
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/networkpolicy-antrea-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: networkpolicy-antrea-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241015_2300_RC0@sha256:1c838e782e8825f4c635ffa212833558976f16af700fbf4fcd9cf6103350d016
          imagePullPolicy: IfNotPresent
          name: networkpolicy-antrea-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: networkpolicy-antrea-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - chown 1000:1000 /var/run/antrea
          command:
          - /bin/bash
          - -c
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250307.00_p0@sha256:dbc4318b70cdc6429aa57c66ad3f3ef6480b5249b9ea0d9e87ee08157047b7f9
          imagePullPolicy: IfNotPresent
          name: antrea-self-sign-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/antrea
            name: var-run-antrea
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: antrea-controller
        serviceAccountName: antrea-controller
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: var-run-antrea
        - configMap:
            defaultMode: 420
            name: antrea-config
          name: antrea-config
        - name: antrea-controller-tls
          secret:
            defaultMode: 256
            optional: true
            secretName: antrea-controller-tls
        - emptyDir: {}
          name: host-var-log-antrea
        - configMap:
            defaultMode: 420
            items:
            - key: networkpolicy-antrea-metrics-collector-config-data
              path: networkpolicy-antrea-metrics-collector-config-data.textproto
            name: networkpolicy-antrea-metrics-collector-config-map
          name: networkpolicy-antrea-metrics-collector-config-map-vol
  status:
    conditions:
    - lastTransitionTime: "2025-07-07T04:27:58Z"
      lastUpdateTime: "2025-07-07T04:27:58Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-07-07T04:27:58Z"
      lastUpdateTime: "2025-07-07T04:27:58Z"
      message: ReplicaSet "antrea-controller-5bd7696d54" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:28:00Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: antrea-controller-autoscaler
      kubernetes.io/cluster-service: "true"
    name: antrea-controller-horizontal-autoscaler
    namespace: kube-system
    resourceVersion: "1751862671260031017"
    uid: 5bb01e58-2b65-44e5-9c7e-eece8b5bc511
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: antrea-controller-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: networkpolicy-antrea
          components.gke.io/component-version: 0.4.3
        creationTimestamp: null
        labels:
          k8s-app: antrea-controller-autoscaler
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=antrea-controller-horizontal-autoscaler
          - --target=deployment/antrea-controller
          - --nodelabels=kubernetes.io/os=windows
          - --logtostderr=true
          - --v=2
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.0-gke.11@sha256:af852676a9858afc2842969fb5a204b41368ba41e4f314da179a01b633f64b25
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 10m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: antrea-cpha
        serviceAccountName: antrea-cpha
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-07-07T04:31:11Z"
      lastUpdateTime: "2025-07-07T04:31:11Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-07-07T04:28:00Z"
      lastUpdateTime: "2025-07-07T04:31:11Z"
      message: ReplicaSet "antrea-controller-horizontal-autoscaler-6c8484f8db" has
        successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:52Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: egress-nat-controller
    namespace: kube-system
    resourceVersion: "1751862672445167000"
    uid: 3bf4824d-1187-4ddd-b929-0e654339d074
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        gke-app: egress-nat-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: netd-combined
          components.gke.io/component-version: 12.3.1
        creationTimestamp: null
        labels:
          component: netd
          gke-app: egress-nat-controller
      spec:
        containers:
        - args:
          - --pod-cidrs=10.190.128.0/17
          - --service-cidrs=34.118.224.0/20
          - --node-cidrs=192.168.17.0/24
          - --cluster-short-hash=b8b78fe0
          env:
          - name: CLUSTER_PROJECT
            value: "388364419893"
          - name: CLUSTER_LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: egress-nat-controller
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/egress-nat-controller:v0.2.18-gke.1@sha256:a60d7fdd9540a20432423d1168c5fbbdac6b2b2ead8d3331696f3086b9f1f16d
          imagePullPolicy: IfNotPresent
          name: egress-nat-controller
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: egress-nat-controller
        serviceAccountName: egress-nat-controller
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-07-07T04:31:12Z"
      lastUpdateTime: "2025-07-07T04:31:12Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-07-07T04:27:53Z"
      lastUpdateTime: "2025-07-07T04:31:12Z"
      message: ReplicaSet "egress-nat-controller-7c8484b9bb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:26:45Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: event-exporter
      kubernetes.io/cluster-service: "true"
      version: v0.4.0
    name: event-exporter-gke
    namespace: kube-system
    resourceVersion: "1751862715469231018"
    uid: 249a7226-a48f-4c4f-8447-b950c35193e8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: event-exporter
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: event-exporter
          components.gke.io/component-version: 1.32.1-gke.2
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          version: v0.4.0
      spec:
        containers:
        - command:
          - /event-exporter
          - -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com
          - -prometheus-endpoint=:8080
          - -enable-pod-owner-label=true
          - -system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:v0.5.0-gke.3@sha256:51c1304e614c073516863183ead124d657bad18323cd25fe532e80740455f542
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources:
            requests:
              cpu: 3m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --api-override=https://monitoring.googleapis.com/
          - --source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons&whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          - --source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons&customResourceType=k8s_container&customLabels[project_id]&customLabels[location]&customLabels[cluster_name]&customLabels[namespace_name]=kube-system&customLabels[pod_name]=event-exporter-$NODE_NAME&customLabels[container_name]=event-exporter&whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          - --node-name=$(NODE_NAME)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.23@sha256:2d49384c9f9a247122d52b4c6aeb89e3847877be8ffa8bb631b7ddf7fc93a56d
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: Directory
          name: ssl-certs
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-07-07T04:31:55Z"
      lastUpdateTime: "2025-07-07T04:31:55Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-07-07T04:26:45Z"
      lastUpdateTime: "2025-07-07T04:31:55Z"
      message: ReplicaSet "event-exporter-gke-6bc66785bc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:26:53Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: filestorecsi-lock-release-controller
    name: filestore-lock-release-controller
    namespace: kube-system
    resourceVersion: "1751862932652063009"
    uid: 41713cbe-3951-4e5e-8764-615e1daca5a2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: filestore-lock-release-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: filestorecsi
          components.gke.io/component-version: 0.15.14
        creationTimestamp: null
        labels:
          component: filestorecsi
          k8s-app: filestore-lock-release-controller
      spec:
        containers:
        - args:
          - --v=5
          - --http-endpoint=:22027
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver-lockrelease:v1.8.0-gke.17@sha256:3803443d3c494fa3f08e9a409e34885f32e8a2dfd732ec1dc038c2f834f01f94
          imagePullPolicy: IfNotPresent
          name: filestore-lock-release-controller
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsUser: 65534
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: filestorecsi-lockrelease-metrics-collector
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/filestorecsi-lockrelease-metrics-collector-config-data.textproto
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241103_2300_RC0@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
          imagePullPolicy: IfNotPresent
          name: filestorecsi-lockrelease-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: filestorecsi-lockrelease-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: filestore-lockrelease-controller-sa
        serviceAccountName: filestore-lockrelease-controller-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: filestorecsi-lockrelease-metrics-collector-config-data
              path: filestorecsi-lockrelease-metrics-collector-config-data.textproto
            name: filestorecsi-lockrelease-metrics-collector-config-map
          name: filestorecsi-lockrelease-metrics-collector-config-map-vol
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-07-07T04:35:32Z"
      lastUpdateTime: "2025-07-07T04:35:32Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-07-07T04:26:53Z"
      lastUpdateTime: "2025-07-07T04:35:32Z"
      message: ReplicaSet "filestore-lock-release-controller-7c9c5dfddc" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      credential-normal-mode: "true"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:26Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: konnectivity-agent
    name: konnectivity-agent
    namespace: kube-system
    resourceVersion: "1751862705162383024"
    uid: a1c8418f-22e5-4c30-8a76-dc6e5d91e369
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: konnectivity-agent
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.13.11
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent
      spec:
        containers:
        - args:
          - --logtostderr=true
          - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - --proxy-server-host=192.168.17.13
          - --proxy-server-port=8132
          - --health-server-port=8093
          - --admin-server-port=8094
          - --sync-interval=5s
          - --sync-interval-cap=30s
          - --sync-forever=true
          - --probe-interval=5s
          - --keepalive-time=60s
          - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
          - --enable-profiling
          - --count-server-leases
          - --server-count-source=max
          - --v=3
          command:
          - /proxy-agent
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.1@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8093
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: konnectivity-agent
          resources:
            limits:
              memory: 125Mi
            requests:
              cpu: 10m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/secrets/tokens
            name: konnectivity-agent-token
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: konnectivity-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240717_2300_RC0@sha256:d460e6b5088332f62b990f8a1f7bf6d9eca7c3f41cb974e3db493d6b0fc4ad70
          imagePullPolicy: IfNotPresent
          name: konnectivity-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: konnectivity-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: sandbox.gke.io/runtime
          operator: Equal
          value: gvisor
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - name: konnectivity-agent-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: system:konnectivity-server
                expirationSeconds: 3600
                path: konnectivity-agent-token
        - configMap:
            defaultMode: 420
            items:
            - key: konnectivity-agent-metrics-collector-config-data
              path: konnectivity-agent-metrics-collector-config-data.textproto
            name: konnectivity-agent-metrics-collector-config-map
          name: konnectivity-agent-metrics-collector-config-map-vol
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-07-07T04:31:45Z"
      lastUpdateTime: "2025-07-07T04:31:45Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-07-07T04:27:26Z"
      lastUpdateTime: "2025-07-07T04:31:45Z"
      message: ReplicaSet "konnectivity-agent-8468b858cb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:28Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: konnectivity-agent-autoscaler
      kubernetes.io/cluster-service: "true"
    name: konnectivity-agent-autoscaler
    namespace: kube-system
    resourceVersion: "1751862666095407004"
    uid: 0c353019-ebc2-48ba-a8fd-521ef58dc8f0
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: konnectivity-agent-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.13.11
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent-autoscaler
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=konnectivity-agent-autoscaler-config
          - --target=deployment/konnectivity-agent
          - --logtostderr=true
          - --v=2
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.1-gke.6@sha256:0c3e6735169688e40655864255ce1c680d6d2a6e6daebb1e249084eabaadcf60
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 10m
              memory: 10M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent-cpha
        serviceAccountName: konnectivity-agent-cpha
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-07-07T04:31:06Z"
      lastUpdateTime: "2025-07-07T04:31:06Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-07-07T04:27:28Z"
      lastUpdateTime: "2025-07-07T04:31:06Z"
      message: ReplicaSet "konnectivity-agent-autoscaler-f4694b9fb" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:26:18Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
    name: kube-dns
    namespace: kube-system
    resourceVersion: "1751862722924591022"
    uid: 62f245e2-1d64-4b37-b170-da62db334d25
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 10%
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 32.7.6
          prometheus.io/port: "10054"
          prometheus.io/scrape: "true"
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --domain=cluster.local.
          - --dns-port=10053
          - --config-dir=/kube-dns-config
          - --v=2
          env:
          - name: PROMETHEUS_PORT
            value: "10055"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.25.0-gke.14@sha256:c79d68a251c849be75ba251afcbb52f3b50fef8f30a88cbe3d7879617858f03c
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/kubedns
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kubedns
          ports:
          - containerPort: 10053
            name: dns-local
            protocol: UDP
          - containerPort: 10053
            name: dns-tcp-local
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 210Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kube-dns-config
            name: kube-dns-config
        - args:
          - -v=2
          - -logtostderr
          - -configDir=/etc/k8s/dns/dnsmasq-nanny
          - -restartDnsmasq=true
          - --
          - -k
          - --cache-size=1000
          - --no-negcache
          - --dns-forward-max=1500
          - --log-facility=-
          - --server=/cluster.local/127.0.0.1#10053
          - --server=/in-addr.arpa/127.0.0.1#10053
          - --server=/ip6.arpa/127.0.0.1#10053
          - --max-ttl=30
          - --max-cache-ttl=30
          - --max-tcp-connections=200
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.25.0-gke.14@sha256:aa5d69a968cfda82b3c59c1c7b8e1a182b4ccd8c3ffcd85712deb4276dc593e8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/dnsmasq
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: dnsmasq
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          resources:
            requests:
              cpu: 150m
              memory: 20Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              - SETGID
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/k8s/dns/dnsmasq-nanny
            name: kube-dns-config
        - args:
          - --v=2
          - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
          - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.25.0-gke.14@sha256:b7acd811263d51d2945324a8f77dfc0c6a9f1dc82bdd007b93026d7ca2495e36
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar
          ports:
          - containerPort: 10054
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: kubedns-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250520_2300_RC0@sha256:71c01de8211397365c21449ba6ae01299445e1e16766fbd20bfd986b91d91241
          imagePullPolicy: IfNotPresent
          name: kubedns-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 45Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: kubedns-metrics-collector-config-map-vol
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns
        serviceAccountName: kube-dns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-dns
            optional: true
          name: kube-dns-config
        - configMap:
            defaultMode: 420
            items:
            - key: kubedns-metrics-collector-config-data
              path: kubedns-metrics-collector-config-data.textproto
            - key: sidecar-metrics-collector-config-data
              path: sidecar-metrics-collector-config-data.textproto
            name: kubedns-metrics-collector-config-map
          name: kubedns-metrics-collector-config-map-vol
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-07-07T04:32:02Z"
      lastUpdateTime: "2025-07-07T04:32:02Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-07-07T04:26:34Z"
      lastUpdateTime: "2025-07-07T04:32:02Z"
      message: ReplicaSet "kube-dns-6f7f8bdc54" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:30Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns-autoscaler
      kubernetes.io/cluster-service: "true"
    name: kube-dns-autoscaler
    namespace: kube-system
    resourceVersion: "1751862668147711023"
    uid: 48dbaee7-78c9-47e6-9c4a-c9b3424617d5
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 32.7.6
        creationTimestamp: null
        labels:
          k8s-app: kube-dns-autoscaler
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=kube-dns-autoscaler
          - --target=Deployment/kube-dns
          - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"includeUnschedulableNodes":true}}
          - --logtostderr=true
          - --v=2
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.10.2-gke.7@sha256:7b26154ea8bcc71d07c5db1e6ee1e86aa89146dbbc07f22e1a18a1c6f4aee87e
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns-autoscaler
        serviceAccountName: kube-dns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-07-07T04:31:08Z"
      lastUpdateTime: "2025-07-07T04:31:08Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-07-07T04:27:30Z"
      lastUpdateTime: "2025-07-07T04:31:08Z"
      message: ReplicaSet "kube-dns-autoscaler-5548979c6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:33Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: glbc
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: GLBC
    name: l7-default-backend
    namespace: kube-system
    resourceVersion: "1751862669148495021"
    uid: 28877d00-67a3-4dde-8217-f9ead71a9278
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: glbc
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: l7-lb-controller-combined
          components.gke.io/component-version: 1.34.2-gke.0
        creationTimestamp: null
        labels:
          k8s-app: glbc
          name: glbc
      spec:
        automountServiceAccountToken: false
        containers:
        - image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics:v1.34.2@sha256:79870c8c149fd62f93caa1fb33dcc20d0a13e2badd3f74775c1cf82ec5e5b2b2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: default-http-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-07-07T04:31:09Z"
      lastUpdateTime: "2025-07-07T04:31:09Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-07-07T04:27:33Z"
      lastUpdateTime: "2025-07-07T04:31:09Z"
      message: ReplicaSet "l7-default-backend-c74968c4b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-07-07T04:27:47Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
      version: v1.32.2
    name: metrics-server-v1.32.2
    namespace: kube-system
    resourceVersion: "1751862854989887017"
    uid: 7f252a0c-b3ac-482c-b0dd-92c6b96c0aba
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metrics-server
        version: v1.32.2
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: metrics-server
          components.gke.io/component-version: 1.32.2-gke.3
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          version: v1.32.2
        name: metrics-server
      spec:
        containers:
        - command:
          - /metrics-server
          - --metric-resolution=30s
          - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-allow-working-set-bytes-zero=false
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.41@sha256:beeec177afb527fe8d22ebaebdcf41d8928f74e0d35fa51cece2ca8a1ef3fe65
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 43m
              memory: 55Mi
            requests:
              cpu: 43m
              memory: 55Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: metrics-server-config
          name: metrics-server-config-volume
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-07-07T04:32:54Z"
      lastUpdateTime: "2025-07-07T04:32:54Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-07-07T04:27:47Z"
      lastUpdateTime: "2025-07-07T04:34:14Z"
      message: ReplicaSet "metrics-server-v1.32.2-74cf94946d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      autopilot.gke.io/resource-adjustment: '{"input":{"containers":[{"name":"nginx"}]},"output":{"containers":[{"limits":{"ephemeral-storage":"1Gi"},"requests":{"cpu":"500m","ephemeral-storage":"1Gi","memory":"2Gi"},"name":"nginx"}]},"computeClassAtAdmission":"Default","modified":true}'
      autopilot.gke.io/warden-version: 32.38.0-gke.4
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: nginx-chart
      meta.helm.sh/release-namespace: poc-test
    creationTimestamp: "2025-07-07T04:28:17Z"
    generation: 2
    labels:
      app.kubernetes.io/managed-by: Helm
    name: nginx
    namespace: poc-test
    resourceVersion: "1751863765922271001"
    uid: bcbfbbc9-04db-4069-9997-f8237b888446
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: nginx
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx
      spec:
        containers:
        - image: asia-south1-docker.pkg.dev/upheld-terminus-462616-m0/poc-images/nginx-secure:1.25
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              ephemeral-storage: 1Gi
            requests:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 2Gi
          securityContext:
            capabilities:
              drop:
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-07-07T04:49:25Z"
      lastUpdateTime: "2025-07-07T04:49:25Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-07-07T04:48:10Z"
      lastUpdateTime: "2025-07-07T04:49:25Z"
      message: ReplicaSet "nginx-5fb97cbb55" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:41Z"
    generation: 1
    labels:
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
      app.kubernetes.io/version: 0.15.3
      pod-template-hash: 58b5c7f5bb
    name: gmp-operator-58b5c7f5bb
    namespace: gke-gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: gmp-operator
      uid: 94aad3d7-22ce-42df-80e1-60215ea99c57
    resourceVersion: "1751862686558319003"
    uid: 40344c52-6489-41e9-bc25-9848ee9e754f
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: gmp-operator
        app.kubernetes.io/part-of: gmp
        pod-template-hash: 58b5c7f5bb
    template:
      metadata:
        annotations:
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.3-gke.1
        creationTimestamp: null
        labels:
          app: managed-prometheus-operator
          app.kubernetes.io/component: operator
          app.kubernetes.io/name: gmp-operator
          app.kubernetes.io/part-of: gmp
          app.kubernetes.io/version: 0.15.3
          pod-template-hash: 58b5c7f5bb
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --operator-namespace=gke-gmp-system
          - --public-namespace=gmp-public
          - --webhook-addr=:10250
          - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVLekNDQXBPZ0F3SUJBZ0lSQUtabDhwWWgwYlVFTkRFdjBOTTF4VWd3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa05UYzRaR0k0T0dZdE9XSTRaUzAwTVdReUxXRmhaV1l0TlRSaE9XUTBabVk0WlRaaApNQjRYRFRJMU1EY3dOekEwTVRrMU0xb1hEVE13TURjd05qQTBNakUxTTFvd09ERTJNRFFHQTFVRUF4TXRaMjF3CkxXOXdaWEpoZEc5eUxtZHJaUzFuYlhBdGMzbHpkR1Z0TG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzTUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBaUdkeGMxU2kxWkZoR0w5Z2I2ZmpSQlczTHVRWQovamRzTUJySExGdWJRMWxTejdhbktzVzRxWitHcUpEVEw4UTUxT0tGcHNJTEpZMzhEMEk4eFVqVjdVTnY0UmU5CkNjUlFUa0trUkRJbXh1MUowUGpKVGxGaitoek1laGxDSWppS1dwNUpzMVEwQ3NaODF5SkdhQ2lnTFhkYnRENWgKVW5GY2NkZFZrVnhNTzRoUHhqcGNlckJLY1hDWGQ2aUVnbXNyWFNmNGFpMHJuMW02U1JwK1hwNkoxS0NvSFp5NgoyREtRZEd0dHZxSVRya0FhaDRCellZcjJWN0RxVnZrdEdqWEpNMUx0Skg5NjhycTJYMDJRQUZCTlNOQm41US9kCjYzeGhLYWp5dFZnVXZpc1p4WWpubEh4dGNKdEZKMUR1ZDVMRG5XNElPS1RROEZUbnBuRE92ZEdtT1FJREFRQUIKbzRHNE1JRzFNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQgpCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTUE9SWGlNZkJnVVlOUnBERG1rdWx0CjNCK1VDREJWQmdOVkhSRUVUakJNZ2d4bmJYQXRiM0JsY21GMGIzS0NHMmR0Y0MxdmNHVnlZWFJ2Y2k1bmEyVXQKWjIxd0xYTjVjM1JsYllJZloyMXdMVzl3WlhKaGRHOXlMbWRyWlMxbmJYQXRjM2x6ZEdWdExuTjJZekFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVlFQVJKbURMYUhzNGxobGVsekNrQ1EzaytwWUZmTGM3TXh2eVpMb1Evbm1zSVNqCkI4SWh4b08yWlRyWjhOYkJEbkErMmlmNjBXS1Y0YmJzQklFV0FpMVRZWkh6VFpXRnkyeHJ1NGlmWXc4OFRvTXoKNDFMZ1ZCMVYxZ2lWRnhNUHBoQ2E5TWc4LzZLZHNJSldWREV6WU5CdHVWWjlDRGM1c25manViSzloa2pwYkxIWQpjYlYvVnJqVkMyMTBpZkRTWTF0cm10U0M4aXNrOTE4RUpOWklDQjNyVVlBMzhkQ3FmaTZId1g0QlhmY010VlVVCjFqTnNyaXJERHdTUU41dVVvdGxhZEM1WmtabC8wZ1hrMFhoWE5VblRhNlNRY3hNQU45Q0FFTFg4VXZqMGpUU0kKTmJ5amIya0VzazNtV21zZkRVbGhuaHFnbXRsb0N4eGg1UjEzRExMMG1zbmRLcTBkaThCREU1aHNEUENNU1ZjNwp4UkNsVnIwZDY5dlJZaWdtM20yaW1neUJidzdNWDU2cjN4eTVzV1pzR2RIMTdlZGJoL1RpYlN6YXRVbUJ5V3MrCmxLYVdqRzdQdklLZlNSMjBoR0hLN0FaK1ZCWnNBakwxVGtXOE1MSXdnaE13bUZRMldLOVFkY1pFQTdEclRqQUgKNk5mV1VOM2t6THR2bW9hU3ZLQW0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBaUdkeGMxU2kxWkZoR0w5Z2I2ZmpSQlczTHVRWS9qZHNNQnJITEZ1YlExbFN6N2FuCktzVzRxWitHcUpEVEw4UTUxT0tGcHNJTEpZMzhEMEk4eFVqVjdVTnY0UmU5Q2NSUVRrS2tSRElteHUxSjBQakoKVGxGaitoek1laGxDSWppS1dwNUpzMVEwQ3NaODF5SkdhQ2lnTFhkYnRENWhVbkZjY2RkVmtWeE1PNGhQeGpwYwplckJLY1hDWGQ2aUVnbXNyWFNmNGFpMHJuMW02U1JwK1hwNkoxS0NvSFp5NjJES1FkR3R0dnFJVHJrQWFoNEJ6CllZcjJWN0RxVnZrdEdqWEpNMUx0Skg5NjhycTJYMDJRQUZCTlNOQm41US9kNjN4aEthanl0VmdVdmlzWnhZam4KbEh4dGNKdEZKMUR1ZDVMRG5XNElPS1RROEZUbnBuRE92ZEdtT1FJREFRQUJBb0lCQUFJazN4cUZHbXloTlAyZwp0M1UxMWp1S0hGZWhOL2ZaK3VvOEo0U04yWkJLMFlPSWoxTGJxZ0lIaXdRd0I1UEZBYlEwRGMzLzE1RkM3TEw0Ck0zQ1Y2eC9vT3hSV2pVNy9uaFFHMWVKcEIrVkJVbE5WcjhOYWdlZnE1emRsbVgya2RoOUR4T3lMenFnYk05ZmwKVnVZNCtrQ1FzMWt2VUZRTmlscVRQQW4xZ1pDL2QwSkpQdUxwSkkxVmhySzhtcFZ2bWx5R3VlVmgwdlRNU3F6VgpBS3NtRU15NVVwZTF6cGI5M1A3OWtpdlY0MUp5OUsvNnF5b0EzUUtjVjcyeHFZMGVsMHo1Z0wyRk8xcGVPb0hkCnBIRncrL0h4TkJLUnF2S0hwbkc5WTBxdmJlYXRRRW9iRk03dzE2bkdmUm1SRmdsTkhJUVpPMnFNZ1d3TWduODQKdnp6R0QyRUNnWUVBdnhMQkU1bDZNSWlobGF3OEQ2b1RucDhqaTR1cmxRQk1tYnBPVmg0M0d1WU1sTUNGdVJMWApnbTR0Q2t6RW5HZXBxbmZlM0VMR1BpSzF5cGdEMmpHZ3lyRDRFM0lTd3h2R1BFWjUyUVR6bkh6NWZMSE43eEIyCmxpNS9YR1dOS2ZYd0I3M0FXelJZMDFIcm1BMHFBOFE3b0cxOVFzZytBY2dZQzFGejVKaDBYQmtDZ1lFQXRzRVUKS0xCKzFPdnRPWFZjNkNVOTJSRGY4YlFzVTRYN3BRd0JEelVSelZ0MWhlT2ZiYTBEVlNLMmdTcFhNc25qbVN6VwpGWklpVUFZc05oSnJ0ZTdxTVNpWTNQdmwvanpEWFVicmpyT3ZHZCtuRTRRV3grSU15ZXZUejZOVTJnc1MrWlplCmZFZGYzeTFuYTdxMUtra3dPbmJjUzlpY1B6RXpmN3Yzbk9KWTN5RUNnWUVBc3dWRVJ6UEdLeERvckE0cVc5YlMKK1F4TFJtUi9SMlIzWUpVUTdsank4azNXUGN5L3ZXNHM0dlNOV0pnaW9oUHlBRmk5UW91QnFCZm5VY0RwNHhZYQplNjRoVUQ3UjIySDdjdC9wSys4YXZHVFBjQWc3VlNDTXF4czNrdjlHcXFqVjBycnpMY0MyOUk5TmVESGxTcEFoCithWjc5UVVlSzVjcEIvbXg1dHo4TUlrQ2dZRUFwUkQ3M2t5Y0lrRCtRWm1wMHR4Z1lvRUZaTkR5QUhiUjloOUQKamJMSFk0NnFOY2FFcDVGUG8wUDVSKzB3V1dWVXQzTng0b1hkakI0bkxLZXl0ZDhYbEZNd3p0aU93ZldzRjhJSQozUm1hbkdvUUJHYVlGTzR0MHV1NG9xREo4Uzl6Y2cvSlE4Tkw2czZkelFZVXdCN2UrcytFNXRTOU82NTY3M0tkCmtndzNiVUVDZ1lCcFBxWWZJYjVMemZiYnVvUXN3bWZ3VjJFVXlWSVFNaFlneFg3T2xET2ZWQWpmbmMvcTFGTmYKVHRsL3hWTTI2Rld3eG1WMTZTWXk0d3o4STBNRENweCt4VlJmdUZvTVpZWUhBazllVnZGQ1hhYjBxQmVNTjJKaApIV3FzN1FJOTV6a08vOUh6TmRsZG9pdTJ6Y3d1cm11c3JGMHRnY0dCdC9FN2k0bnVHQ3hMVkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
          - --project-id=upheld-terminus-462616-m0
          - --location=asia-south1
          - --cluster=poc-gke-autopilot
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.3-gke.0@sha256:0e51d4ab84bac684012b2b52a2d38f3c340b4647f3879b77d70ae18ac4bb7271
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: operator
          ports:
          - containerPort: 10250
            name: web
            protocol: TCP
          - containerPort: 18080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: certs
        dnsPolicy: ClusterFirst
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: operator
        serviceAccountName: operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: certs
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:41Z"
    generation: 2
    labels:
      app: managed-prometheus-rule-evaluator
      app.kubernetes.io/name: rule-evaluator
      app.kubernetes.io/version: 0.15.3
      pod-template-hash: 7c94cfd4d9
    name: rule-evaluator-7c94cfd4d9
    namespace: gke-gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: rule-evaluator
      uid: f997dde0-c4ab-4dd5-bf7c-bd8a8f8e4afe
    resourceVersion: "1751862678818559019"
    uid: 0d38db41-f52a-4572-8aa9-6c4da51cb612
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/name: rule-evaluator
        pod-template-hash: 7c94cfd4d9
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.3-gke.1
        creationTimestamp: null
        labels:
          app: managed-prometheus-rule-evaluator
          app.kubernetes.io/name: rule-evaluator
          app.kubernetes.io/version: 0.15.3
          pod-template-hash: 7c94cfd4d9
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --config-file=/prometheus/config/config.yaml
          - --config-file-output=/prometheus/config_out/config.yaml
          - --config-dir=/etc/rules
          - --config-dir-output=/prometheus/rules_out
          - --watched-dir=/etc/secrets
          - --reload-url=http://127.0.0.1:19092/-/reload
          - --ready-url=http://127.0.0.1:19092/-/ready
          - --listen-address=:19093
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.3-gke.0@sha256:084a78cf04fc50523ba37639d3cac8d33a6a07de5cf641c85b9c9ef71f653d51
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19093
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config
            name: config
            readOnly: true
          - mountPath: /prometheus/config_out
            name: config-out
          - mountPath: /etc/rules
            name: rules
            readOnly: true
          - mountPath: /prometheus/rules_out
            name: rules-out
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        - args:
          - --config.file=/prometheus/config_out/config.yaml
          - --web.listen-address=:19092
          - --export.user-agent-mode=gke
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/rule-evaluator:v0.15.3-gke.0@sha256:8306dabf64f36188eaedd022dca0362a4a833efec313e8c922543490e82887f4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: evaluator
          ports:
          - containerPort: 19092
            name: r-eval-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 1G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/rules
            name: rules-out
            readOnly: true
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - touch /prometheus/config_out/config.yaml
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250407.00_p0@sha256:b903ad51976ccd68a817f445c5b6df8bf3655bfd1b30ca989472f7a99f930fc5
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: collector
        serviceAccountName: collector
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: rule-evaluator
          name: config
        - emptyDir: {}
          name: config-out
        - configMap:
            defaultMode: 420
            name: rules-generated
          name: rules
        - emptyDir: {}
          name: rules-out
        - name: rules-secret
          secret:
            defaultMode: 420
            secretName: rules
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:58Z"
    generation: 1
    labels:
      app: antrea
      component: antrea-controller
      pod-template-hash: 5bd7696d54
    name: antrea-controller-5bd7696d54
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: antrea-controller
      uid: b24aa874-128c-48ac-b0dd-d6a417374c0e
    resourceVersion: "1751862478306095011"
    uid: 39a70f4a-9d0c-41ce-af5f-29f0a72d4998
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: antrea
        component: antrea-controller
        pod-template-hash: 5bd7696d54
    template:
      metadata:
        annotations:
          components.gke.io/component-name: networkpolicy-antrea
          components.gke.io/component-version: 0.4.3
          prometheus.io/port: "10352"
          prometheus.io/scrape: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          app: antrea
          component: antrea-controller
          pod-template-hash: 5bd7696d54
      spec:
        containers:
        - args:
          - --config
          - /etc/antrea/antrea-controller.conf
          - --logtostderr=true
          - --v=0
          command:
          - /antrea-controller
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: SERVICEACCOUNT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.serviceAccountName
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/antrea:v1.4.0-gke.38@sha256:19d567d11297a5cc221df5557d4d98544d4fbef5b13c8eef01c5f732e9d694aa
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /livez
              port: api
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: antrea-controller
          ports:
          - containerPort: 10349
            name: api
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /readyz
              port: api
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/antrea/antrea-controller.conf
            name: antrea-config
            readOnly: true
            subPath: antrea-controller.conf
          - mountPath: /var/run/antrea/antrea-controller-tls
            name: antrea-controller-tls
          - mountPath: /var/log/antrea
            name: host-var-log-antrea
          - mountPath: /var/run/antrea
            name: var-run-antrea
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/networkpolicy-antrea-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: networkpolicy-antrea-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241015_2300_RC0@sha256:1c838e782e8825f4c635ffa212833558976f16af700fbf4fcd9cf6103350d016
          imagePullPolicy: IfNotPresent
          name: networkpolicy-antrea-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: networkpolicy-antrea-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - chown 1000:1000 /var/run/antrea
          command:
          - /bin/bash
          - -c
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250307.00_p0@sha256:dbc4318b70cdc6429aa57c66ad3f3ef6480b5249b9ea0d9e87ee08157047b7f9
          imagePullPolicy: IfNotPresent
          name: antrea-self-sign-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/antrea
            name: var-run-antrea
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: antrea-controller
        serviceAccountName: antrea-controller
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: var-run-antrea
        - configMap:
            defaultMode: 420
            name: antrea-config
          name: antrea-config
        - name: antrea-controller-tls
          secret:
            defaultMode: 256
            optional: true
            secretName: antrea-controller-tls
        - emptyDir: {}
          name: host-var-log-antrea
        - configMap:
            defaultMode: 420
            items:
            - key: networkpolicy-antrea-metrics-collector-config-data
              path: networkpolicy-antrea-metrics-collector-config-data.textproto
            name: networkpolicy-antrea-metrics-collector-config-map
          name: networkpolicy-antrea-metrics-collector-config-map-vol
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:28:00Z"
    generation: 1
    labels:
      k8s-app: antrea-controller-autoscaler
      pod-template-hash: 6c8484f8db
    name: antrea-controller-horizontal-autoscaler-6c8484f8db
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: antrea-controller-horizontal-autoscaler
      uid: 5bb01e58-2b65-44e5-9c7e-eece8b5bc511
    resourceVersion: "1751862671230255000"
    uid: f3956136-424f-41f8-a59d-8360f0cc33ee
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: antrea-controller-autoscaler
        pod-template-hash: 6c8484f8db
    template:
      metadata:
        annotations:
          components.gke.io/component-name: networkpolicy-antrea
          components.gke.io/component-version: 0.4.3
        creationTimestamp: null
        labels:
          k8s-app: antrea-controller-autoscaler
          pod-template-hash: 6c8484f8db
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=antrea-controller-horizontal-autoscaler
          - --target=deployment/antrea-controller
          - --nodelabels=kubernetes.io/os=windows
          - --logtostderr=true
          - --v=2
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.0-gke.11@sha256:af852676a9858afc2842969fb5a204b41368ba41e4f314da179a01b633f64b25
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 10m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: antrea-cpha
        serviceAccountName: antrea-cpha
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:53Z"
    generation: 1
    labels:
      component: netd
      gke-app: egress-nat-controller
      pod-template-hash: 7c8484b9bb
    name: egress-nat-controller-7c8484b9bb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: egress-nat-controller
      uid: 3bf4824d-1187-4ddd-b929-0e654339d074
    resourceVersion: "1751862672409215018"
    uid: aa51665c-5aee-49a5-9937-4bf490eb7800
  spec:
    replicas: 1
    selector:
      matchLabels:
        gke-app: egress-nat-controller
        pod-template-hash: 7c8484b9bb
    template:
      metadata:
        annotations:
          components.gke.io/component-name: netd-combined
          components.gke.io/component-version: 12.3.1
        creationTimestamp: null
        labels:
          component: netd
          gke-app: egress-nat-controller
          pod-template-hash: 7c8484b9bb
      spec:
        containers:
        - args:
          - --pod-cidrs=10.190.128.0/17
          - --service-cidrs=34.118.224.0/20
          - --node-cidrs=192.168.17.0/24
          - --cluster-short-hash=b8b78fe0
          env:
          - name: CLUSTER_PROJECT
            value: "388364419893"
          - name: CLUSTER_LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: egress-nat-controller
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/egress-nat-controller:v0.2.18-gke.1@sha256:a60d7fdd9540a20432423d1168c5fbbdac6b2b2ead8d3331696f3086b9f1f16d
          imagePullPolicy: IfNotPresent
          name: egress-nat-controller
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: egress-nat-controller
        serviceAccountName: egress-nat-controller
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:26:45Z"
    generation: 1
    labels:
      k8s-app: event-exporter
      pod-template-hash: 6bc66785bc
      version: v0.4.0
    name: event-exporter-gke-6bc66785bc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: event-exporter-gke
      uid: 249a7226-a48f-4c4f-8447-b950c35193e8
    resourceVersion: "1751862715431839001"
    uid: 8f42fdc6-8cf3-4471-b374-d2edc9d7ea1b
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: event-exporter
        pod-template-hash: 6bc66785bc
    template:
      metadata:
        annotations:
          components.gke.io/component-name: event-exporter
          components.gke.io/component-version: 1.32.1-gke.2
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          pod-template-hash: 6bc66785bc
          version: v0.4.0
      spec:
        containers:
        - command:
          - /event-exporter
          - -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com
          - -prometheus-endpoint=:8080
          - -enable-pod-owner-label=true
          - -system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:v0.5.0-gke.3@sha256:51c1304e614c073516863183ead124d657bad18323cd25fe532e80740455f542
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources:
            requests:
              cpu: 3m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --api-override=https://monitoring.googleapis.com/
          - --source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons&whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          - --source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons&customResourceType=k8s_container&customLabels[project_id]&customLabels[location]&customLabels[cluster_name]&customLabels[namespace_name]=kube-system&customLabels[pod_name]=event-exporter-$NODE_NAME&customLabels[container_name]=event-exporter&whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          - --node-name=$(NODE_NAME)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.23@sha256:2d49384c9f9a247122d52b4c6aeb89e3847877be8ffa8bb631b7ddf7fc93a56d
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: Directory
          name: ssl-certs
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:26:53Z"
    generation: 1
    labels:
      component: filestorecsi
      k8s-app: filestore-lock-release-controller
      pod-template-hash: 7c9c5dfddc
    name: filestore-lock-release-controller-7c9c5dfddc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: filestore-lock-release-controller
      uid: 41713cbe-3951-4e5e-8764-615e1daca5a2
    resourceVersion: "1751862932617455022"
    uid: e596a814-6b95-4581-969d-425ef7b76048
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: filestore-lock-release-controller
        pod-template-hash: 7c9c5dfddc
    template:
      metadata:
        annotations:
          components.gke.io/component-name: filestorecsi
          components.gke.io/component-version: 0.15.14
        creationTimestamp: null
        labels:
          component: filestorecsi
          k8s-app: filestore-lock-release-controller
          pod-template-hash: 7c9c5dfddc
      spec:
        containers:
        - args:
          - --v=5
          - --http-endpoint=:22027
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver-lockrelease:v1.8.0-gke.17@sha256:3803443d3c494fa3f08e9a409e34885f32e8a2dfd732ec1dc038c2f834f01f94
          imagePullPolicy: IfNotPresent
          name: filestore-lock-release-controller
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsUser: 65534
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: filestorecsi-lockrelease-metrics-collector
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/filestorecsi-lockrelease-metrics-collector-config-data.textproto
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241103_2300_RC0@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
          imagePullPolicy: IfNotPresent
          name: filestorecsi-lockrelease-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: filestorecsi-lockrelease-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: filestore-lockrelease-controller-sa
        serviceAccountName: filestore-lockrelease-controller-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: filestorecsi-lockrelease-metrics-collector-config-data
              path: filestorecsi-lockrelease-metrics-collector-config-data.textproto
            name: filestorecsi-lockrelease-metrics-collector-config-map
          name: filestorecsi-lockrelease-metrics-collector-config-map-vol
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      credential-normal-mode: "true"
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:26Z"
    generation: 2
    labels:
      k8s-app: konnectivity-agent
      pod-template-hash: 8468b858cb
    name: konnectivity-agent-8468b858cb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent
      uid: a1c8418f-22e5-4c30-8a76-dc6e5d91e369
    resourceVersion: "1751862705124511018"
    uid: a88ab23a-e3bb-4599-b04c-2a748df1b72b
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: konnectivity-agent
        pod-template-hash: 8468b858cb
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.13.11
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent
          pod-template-hash: 8468b858cb
      spec:
        containers:
        - args:
          - --logtostderr=true
          - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - --proxy-server-host=192.168.17.13
          - --proxy-server-port=8132
          - --health-server-port=8093
          - --admin-server-port=8094
          - --sync-interval=5s
          - --sync-interval-cap=30s
          - --sync-forever=true
          - --probe-interval=5s
          - --keepalive-time=60s
          - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
          - --enable-profiling
          - --count-server-leases
          - --server-count-source=max
          - --v=3
          command:
          - /proxy-agent
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.1@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8093
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: konnectivity-agent
          resources:
            limits:
              memory: 125Mi
            requests:
              cpu: 10m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/secrets/tokens
            name: konnectivity-agent-token
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: konnectivity-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240717_2300_RC0@sha256:d460e6b5088332f62b990f8a1f7bf6d9eca7c3f41cb974e3db493d6b0fc4ad70
          imagePullPolicy: IfNotPresent
          name: konnectivity-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: konnectivity-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: sandbox.gke.io/runtime
          operator: Equal
          value: gvisor
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - name: konnectivity-agent-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: system:konnectivity-server
                expirationSeconds: 3600
                path: konnectivity-agent-token
        - configMap:
            defaultMode: 420
            items:
            - key: konnectivity-agent-metrics-collector-config-data
              path: konnectivity-agent-metrics-collector-config-data.textproto
            name: konnectivity-agent-metrics-collector-config-map
          name: konnectivity-agent-metrics-collector-config-map-vol
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:28Z"
    generation: 1
    labels:
      k8s-app: konnectivity-agent-autoscaler
      pod-template-hash: f4694b9fb
    name: konnectivity-agent-autoscaler-f4694b9fb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent-autoscaler
      uid: 0c353019-ebc2-48ba-a8fd-521ef58dc8f0
    resourceVersion: "1751862666050911000"
    uid: 533d1438-36ed-433b-a1c1-1a87c75d4a3a
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: konnectivity-agent-autoscaler
        pod-template-hash: f4694b9fb
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.13.11
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent-autoscaler
          pod-template-hash: f4694b9fb
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=konnectivity-agent-autoscaler-config
          - --target=deployment/konnectivity-agent
          - --logtostderr=true
          - --v=2
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.1-gke.6@sha256:0c3e6735169688e40655864255ce1c680d6d2a6e6daebb1e249084eabaadcf60
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 10m
              memory: 10M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent-cpha
        serviceAccountName: konnectivity-agent-cpha
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:26:34Z"
    generation: 2
    labels:
      k8s-app: kube-dns
      pod-template-hash: 6f7f8bdc54
    name: kube-dns-6f7f8bdc54
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-dns
      uid: 62f245e2-1d64-4b37-b170-da62db334d25
    resourceVersion: "1751862722884863015"
    uid: 5d61cccb-c74a-4420-97d6-a1d9f495d10b
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 6f7f8bdc54
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 32.7.6
          prometheus.io/port: "10054"
          prometheus.io/scrape: "true"
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 6f7f8bdc54
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --domain=cluster.local.
          - --dns-port=10053
          - --config-dir=/kube-dns-config
          - --v=2
          env:
          - name: PROMETHEUS_PORT
            value: "10055"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.25.0-gke.14@sha256:c79d68a251c849be75ba251afcbb52f3b50fef8f30a88cbe3d7879617858f03c
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/kubedns
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kubedns
          ports:
          - containerPort: 10053
            name: dns-local
            protocol: UDP
          - containerPort: 10053
            name: dns-tcp-local
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 210Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kube-dns-config
            name: kube-dns-config
        - args:
          - -v=2
          - -logtostderr
          - -configDir=/etc/k8s/dns/dnsmasq-nanny
          - -restartDnsmasq=true
          - --
          - -k
          - --cache-size=1000
          - --no-negcache
          - --dns-forward-max=1500
          - --log-facility=-
          - --server=/cluster.local/127.0.0.1#10053
          - --server=/in-addr.arpa/127.0.0.1#10053
          - --server=/ip6.arpa/127.0.0.1#10053
          - --max-ttl=30
          - --max-cache-ttl=30
          - --max-tcp-connections=200
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.25.0-gke.14@sha256:aa5d69a968cfda82b3c59c1c7b8e1a182b4ccd8c3ffcd85712deb4276dc593e8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/dnsmasq
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: dnsmasq
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          resources:
            requests:
              cpu: 150m
              memory: 20Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              - SETGID
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/k8s/dns/dnsmasq-nanny
            name: kube-dns-config
        - args:
          - --v=2
          - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
          - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.25.0-gke.14@sha256:b7acd811263d51d2945324a8f77dfc0c6a9f1dc82bdd007b93026d7ca2495e36
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar
          ports:
          - containerPort: 10054
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: kubedns-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250520_2300_RC0@sha256:71c01de8211397365c21449ba6ae01299445e1e16766fbd20bfd986b91d91241
          imagePullPolicy: IfNotPresent
          name: kubedns-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 45Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: kubedns-metrics-collector-config-map-vol
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns
        serviceAccountName: kube-dns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-dns
            optional: true
          name: kube-dns-config
        - configMap:
            defaultMode: 420
            items:
            - key: kubedns-metrics-collector-config-data
              path: kubedns-metrics-collector-config-data.textproto
            - key: sidecar-metrics-collector-config-data
              path: sidecar-metrics-collector-config-data.textproto
            name: kubedns-metrics-collector-config-map
          name: kubedns-metrics-collector-config-map-vol
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:30Z"
    generation: 1
    labels:
      k8s-app: kube-dns-autoscaler
      pod-template-hash: 5548979c6
    name: kube-dns-autoscaler-5548979c6
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-dns-autoscaler
      uid: 48dbaee7-78c9-47e6-9c4a-c9b3424617d5
    resourceVersion: "1751862668112991006"
    uid: 86822b8f-6e02-4646-bb18-e393accd0e66
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns-autoscaler
        pod-template-hash: 5548979c6
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 32.7.6
        creationTimestamp: null
        labels:
          k8s-app: kube-dns-autoscaler
          pod-template-hash: 5548979c6
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=kube-dns-autoscaler
          - --target=Deployment/kube-dns
          - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"includeUnschedulableNodes":true}}
          - --logtostderr=true
          - --v=2
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.10.2-gke.7@sha256:7b26154ea8bcc71d07c5db1e6ee1e86aa89146dbbc07f22e1a18a1c6f4aee87e
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns-autoscaler
        serviceAccountName: kube-dns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:33Z"
    generation: 1
    labels:
      k8s-app: glbc
      name: glbc
      pod-template-hash: c74968c4b
    name: l7-default-backend-c74968c4b
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: l7-default-backend
      uid: 28877d00-67a3-4dde-8217-f9ead71a9278
    resourceVersion: "1751862669115935024"
    uid: 7ee9f7a8-74ea-4506-94ba-4c6960d5ef7b
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: glbc
        pod-template-hash: c74968c4b
    template:
      metadata:
        annotations:
          components.gke.io/component-name: l7-lb-controller-combined
          components.gke.io/component-version: 1.34.2-gke.0
        creationTimestamp: null
        labels:
          k8s-app: glbc
          name: glbc
          pod-template-hash: c74968c4b
      spec:
        automountServiceAccountToken: false
        containers:
        - image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics:v1.34.2@sha256:79870c8c149fd62f93caa1fb33dcc20d0a13e2badd3f74775c1cf82ec5e5b2b2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: default-http-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-07T04:27:47Z"
    generation: 2
    labels:
      k8s-app: metrics-server
      pod-template-hash: 5b4bdf4988
      version: v1.32.2
    name: metrics-server-v1.32.2-5b4bdf4988
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server-v1.32.2
      uid: 7f252a0c-b3ac-482c-b0dd-92c6b96c0aba
    resourceVersion: "1751862854948095011"
    uid: 7554ad52-d9dc-4b1b-ade7-a0dbb305466c
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 5b4bdf4988
        version: v1.32.2
    template:
      metadata:
        annotations:
          components.gke.io/component-name: metrics-server
          components.gke.io/component-version: 1.32.2-gke.3
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 5b4bdf4988
          version: v1.32.2
        name: metrics-server
      spec:
        containers:
        - command:
          - /metrics-server
          - --metric-resolution=30s
          - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-allow-working-set-bytes-zero=false
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.41@sha256:beeec177afb527fe8d22ebaebdcf41d8928f74e0d35fa51cece2ca8a1ef3fe65
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: metrics-server-config
          name: metrics-server-config-volume
        - emptyDir: {}
          name: tmp-dir
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-07-07T04:27:51Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 74cf94946d
      version: v1.32.2
    name: metrics-server-v1.32.2-74cf94946d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server-v1.32.2
      uid: 7f252a0c-b3ac-482c-b0dd-92c6b96c0aba
    resourceVersion: "1751862854747071013"
    uid: 8def4ae1-0470-4797-a64b-8aa36c06673c
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 74cf94946d
        version: v1.32.2
    template:
      metadata:
        annotations:
          components.gke.io/component-name: metrics-server
          components.gke.io/component-version: 1.32.2-gke.3
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 74cf94946d
          version: v1.32.2
        name: metrics-server
      spec:
        containers:
        - command:
          - /metrics-server
          - --metric-resolution=30s
          - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-allow-working-set-bytes-zero=false
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.41@sha256:beeec177afb527fe8d22ebaebdcf41d8928f74e0d35fa51cece2ca8a1ef3fe65
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 43m
              memory: 55Mi
            requests:
              cpu: 43m
              memory: 55Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: metrics-server-config
          name: metrics-server-config-volume
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      autopilot.gke.io/resource-adjustment: '{"input":{"containers":[{"name":"nginx"}]},"output":{"containers":[{"limits":{"ephemeral-storage":"1Gi"},"requests":{"cpu":"500m","ephemeral-storage":"1Gi","memory":"2Gi"},"name":"nginx"}]},"computeClassAtAdmission":"Default","modified":true}'
      autopilot.gke.io/warden-version: 32.38.0-gke.4
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: nginx-chart
      meta.helm.sh/release-namespace: poc-test
    creationTimestamp: "2025-07-07T04:28:17Z"
    generation: 2
    labels:
      app: nginx
      pod-template-hash: 5957448f65
    name: nginx-5957448f65
    namespace: poc-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: nginx
      uid: bcbfbbc9-04db-4069-9997-f8237b888446
    resourceVersion: "1751863765894255023"
    uid: f7ffcc93-667e-4439-a1dc-80e6d4d7b99c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: nginx
        pod-template-hash: 5957448f65
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx
          pod-template-hash: 5957448f65
      spec:
        containers:
        - image: asia-south1-docker.pkg.dev/upheld-terminus-462616-m0/poc-images/nginx-secure:1.25:1.25
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              ephemeral-storage: 1Gi
            requests:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 2Gi
          securityContext:
            capabilities:
              drop:
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      autopilot.gke.io/resource-adjustment: '{"input":{"containers":[{"name":"nginx"}]},"output":{"containers":[{"limits":{"ephemeral-storage":"1Gi"},"requests":{"cpu":"500m","ephemeral-storage":"1Gi","memory":"2Gi"},"name":"nginx"}]},"computeClassAtAdmission":"Default","modified":true}'
      autopilot.gke.io/warden-version: 32.38.0-gke.4
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: nginx-chart
      meta.helm.sh/release-namespace: poc-test
    creationTimestamp: "2025-07-07T04:48:10Z"
    generation: 1
    labels:
      app: nginx
      pod-template-hash: 5fb97cbb55
    name: nginx-5fb97cbb55
    namespace: poc-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: nginx
      uid: bcbfbbc9-04db-4069-9997-f8237b888446
    resourceVersion: "1751863765695071000"
    uid: d392cfba-ab61-4452-8744-59f55b2f5904
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: nginx
        pod-template-hash: 5fb97cbb55
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx
          pod-template-hash: 5fb97cbb55
      spec:
        containers:
        - image: asia-south1-docker.pkg.dev/upheld-terminus-462616-m0/poc-images/nginx-secure:1.25
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              ephemeral-storage: 1Gi
            requests:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 2Gi
          securityContext:
            capabilities:
              drop:
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      components.gke.io/layer: addon
    creationTimestamp: "2025-07-07T04:27:42Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: alertmanager
    namespace: gke-gmp-system
    resourceVersion: "1751862681350463004"
    uid: 1409f226-b9f6-4788-8756-27f183ba80b1
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: managed-prometheus-alertmanager
        app.kubernetes.io/name: alertmanager
    serviceName: alertmanager
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.3-gke.1
        creationTimestamp: null
        labels:
          app: managed-prometheus-alertmanager
          app.kubernetes.io/name: alertmanager
          app.kubernetes.io/version: 0.15.3
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: false
        containers:
        - args:
          - --config.file=/alertmanager/config_out/config.yaml
          - --storage.path=/alertmanager-data
          - --cluster.listen-address=[$(POD_IP)]:9094
          - --web.listen-address=:9093
          - --log.format=json
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/alertmanager:v0.27.0-gmp.3-gke.0@sha256:fc715c21bcf6aace53af0ca77b4dd1f6b67eed1427caeb1f4dd0f9475852316a
          imagePullPolicy: IfNotPresent
          name: alertmanager
          ports:
          - containerPort: 9093
            name: alertmanager
            protocol: TCP
          resources:
            limits:
              memory: 128M
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /alertmanager/config_out
            name: alertmanager-config
            readOnly: true
          - mountPath: /alertmanager-data
            name: alertmanager-data
        - args:
          - --config-file=/alertmanager/config.yaml
          - --config-file-output=/alertmanager/config_out/config.yaml
          - --reload-url=http://127.0.0.1:9093/-/reload
          - --ready-url=http://127.0.0.1:9093/-/ready
          - --listen-address=:19091
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.3-gke.0@sha256:084a78cf04fc50523ba37639d3cac8d33a6a07de5cf641c85b9c9ef71f653d51
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19091
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /alertmanager
            name: config
            readOnly: true
          - mountPath: /alertmanager/config_out
            name: alertmanager-config
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - 'touch /alertmanager/config_out/config.yaml && echo -e "receivers:\n  -
            name: noop\nroute:\n  receiver: noop" > alertmanager/config_out/config.yaml'
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250407.00_p0@sha256:b903ad51976ccd68a817f445c5b6df8bf3655bfd1b30ca989472f7a99f930fc5
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /alertmanager/config_out
            name: alertmanager-config
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - name: config
          secret:
            defaultMode: 420
            secretName: alertmanager
        - emptyDir: {}
          name: alertmanager-data
        - emptyDir: {}
          name: alertmanager-config
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 0
    collisionCount: 0
    currentRevision: alertmanager-64ddcf8b49
    observedGeneration: 2
    replicas: 0
    updateRevision: alertmanager-64ddcf8b49
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      components.gke.io/layer: addon
    creationTimestamp: "2025-07-07T04:26:34Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app.kubernetes.io/name: gke-managed-kube-state-metrics
    name: kube-state-metrics
    namespace: gke-managed-cim
    resourceVersion: "1751862695335775013"
    uid: 9e2202c4-8595-492a-9881-a48b9b3715cc
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: gke-managed-kube-state-metrics
    serviceName: kube-state-metrics
    template:
      metadata:
        annotations:
          components.gke.io/component-name: cluster-infra-metrics
          components.gke.io/component-version: 1.32.2-gke.3
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: gke-managed-kube-state-metrics
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --pod=$(POD_NAME)
          - --pod-namespace=$(POD_NAMESPACE)
          - --port=8080
          - --telemetry-port=8081
          - --resources=pods,persistentvolumes,persistentvolumeclaims,horizontalpodautoscalers,daemonsets,deployments,statefulsets
          - --metric-allowlist=kube_deployment_spec_replicas,kube_deployment_status_replicas_available,kube_deployment_status_replicas_updated,kube_statefulset_replicas,kube_statefulset_status_replicas_ready,kube_statefulset_status_replicas_updated,kube_jobset_specified_replicas,kube_jobset_ready_replicas,kube_jobset_succeeded_replicas,kube_jobset_failed_replicas,kube_jobset_active_replicas,kube_jobset_suspended_replicas,kube_jobset_status_condition,kube_jobset_restarts,kube_persistentvolume_capacity_bytes,kube_persistentvolume_status_phase,kube_persistentvolume_claim_ref,kube_persistentvolume_info,kube_persistentvolumeclaim_info,kube_persistentvolumeclaim_resource_requests_storage_bytes,kube_persistentvolumeclaim_status_phase,kube_horizontalpodautoscaler_status_desired_replicas,kube_horizontalpodautoscaler_status_current_replicas,kube_horizontalpodautoscaler_spec_target_metric,kube_horizontalpodautoscaler_spec_min_replicas,kube_horizontalpodautoscaler_spec_max_replicas,kube_horizontalpodautoscaler_status_condition,kube_pod_status_phase,kube_pod_container_status_waiting_reason,kube_pod_container_status_ready,kube_pod_status_unschedulable,kube_daemonset_status_number_misscheduled,kube_daemonset_status_number_ready,kube_daemonset_status_desired_number_scheduled,kube_daemonset_status_updated_number_scheduled
          - --namespaces-denylist=kube-system,kube-node-lease,gmp-system,gke-gmp-system,gke-managed-system,gke-managed-cim
          - --custom-resource-state-config-file=/conf/custom-resource-state-config.yaml
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/kube-state-metrics:v2.14.0-gke.17@sha256:edd59b49e07541ea87b24a17917cd65df9eab175c1e8e851047df25752b5ff50
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: k8s-objects
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: kube-state-metrics-cr-metrics-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: PROJECT_NUMBER
            value: "388364419893"
          - name: LOCATION
            value: asia-south1
          - name: CLUSTER_NAME
            value: poc-gke-autopilot
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: ksm-metrics-collector
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/ksm-metrics-collector-config-data.textproto
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          image: asia-south1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241204_2300_RC0@sha256:2b0c03b2bb9415fe38c799f9088e0c9fa6407c06e357cf767903fd16cbfc65b9
          imagePullPolicy: IfNotPresent
          name: ksm-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: ksm-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-state-metrics
        serviceAccountName: kube-state-metrics
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: ksm-metrics-collector-config-data
              path: ksm-metrics-collector-config-data.textproto
            name: ksm-metrics-collector-config-map
          name: ksm-metrics-collector-config-map-vol
        - configMap:
            defaultMode: 420
            items:
            - key: custom-resource-state-config.yaml
              path: custom-resource-state-config.yaml
            name: kube-state-metrics-cr-metrics
          name: kube-state-metrics-cr-metrics-vol
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: kube-state-metrics-5d945f59b
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: kube-state-metrics-5d945f59b
    updatedReplicas: 1
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      components.gke.io/component-name: cluster-infra-metrics
      components.gke.io/component-version: 1.32.2-gke.3
      components.gke.io/layer: addon
    creationTimestamp: "2025-07-07T04:26:35Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: kube-state-metrics
    namespace: gke-managed-cim
    resourceVersion: "1751863814318351018"
    uid: 22703f0f-01e3-492e-8c50-1e9f971fd1b0
  spec:
    behavior:
      scaleDown:
        policies:
        - periodSeconds: 1800
          type: Pods
          value: 1
        selectPolicy: Max
        stabilizationWindowSeconds: 3600
      scaleUp:
        policies:
        - periodSeconds: 300
          type: Pods
          value: 1
        selectPolicy: Max
        stabilizationWindowSeconds: 900
    maxReplicas: 10
    metrics:
    - resource:
        name: memory
        target:
          averageValue: 400Mi
          type: AverageValue
      type: Resource
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1
      kind: StatefulSet
      name: kube-state-metrics
  status:
    conditions:
    - lastTransitionTime: "2025-07-07T04:28:48Z"
      message: recommended size matches current size
      reason: ReadyForNewScale
      status: "True"
      type: AbleToScale
    - lastTransitionTime: "2025-07-07T04:32:06Z"
      message: the HPA was able to successfully calculate a replica count from memory
        resource
      reason: ValidMetricFound
      status: "True"
      type: ScalingActive
    - lastTransitionTime: "2025-07-07T04:28:48Z"
      message: the desired count is within the acceptable range
      reason: DesiredWithinRange
      status: "False"
      type: ScalingLimited
    currentMetrics:
    - resource:
        current:
          averageUtilization: 25
          averageValue: "33693696"
          value: "33693696"
        name: memory
      type: Resource
    currentReplicas: 1
    desiredReplicas: 1
kind: List
metadata:
  resourceVersion: ""
